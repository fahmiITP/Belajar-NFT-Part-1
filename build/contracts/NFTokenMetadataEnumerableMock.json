{
  "contractName": "NFTokenMetadataEnumerableMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NOT_CURRENT_OWNER",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CANNOT_TRANSFER_TO_ZERO_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NOT_CURRENT_OWNER\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an example contract implementation of NFToken with enumerable and metadata extensions.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT. This function can be changed to payable.\",\"params\":{\"_approved\":\"Address to be approved for the given NFT ID.\",\"_tokenId\":\"ID of the token to be approved.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"},\"returns\":{\"_0\":\"Balance of _owner.\"}},\"burn(uint256)\":{\"details\":\"Removes a NFT from owner.\",\"params\":{\"_tokenId\":\"Which NFT we want to remove.\"}},\"constructor\":{\"details\":\"Contract constructor.\",\"params\":{\"_name\":\"A descriptive name for a collection of NFTs.\",\"_symbol\":\"An abbreviated name for NFTokens.\"}},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"ID of the NFT to query the approval of.\"},\"returns\":{\"_0\":\"Address that _tokenId is approved for.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if `_operator` is an approved operator for `_owner`.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"},\"returns\":{\"_0\":\"True if approved for all, false otherwise.\"}},\"mint(address,uint256,string)\":{\"details\":\"Mints a new NFT.\",\"params\":{\"_to\":\"The address that will own the minted NFT.\",\"_tokenId\":\"of the NFT to be minted by the msg.sender.\",\"_uri\":\"String representing RFC 3986 URI.\"}},\"name()\":{\"details\":\"Returns a descriptive name for a collection of NFTokens.\",\"returns\":{\"_name\":\"Representing name.\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"},\"returns\":{\"_owner\":\"Address of _tokenId owner.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"},\"returns\":{\"_0\":\"True if _interfaceID is supported, false otherwise.\"}},\"symbol()\":{\"details\":\"Returns an abbreviated name for NFTokens.\",\"returns\":{\"_symbol\":\"Representing symbol.\"}},\"tokenByIndex(uint256)\":{\"details\":\"Returns NFT ID by its index.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`.\"},\"returns\":{\"_0\":\"Token id.\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"returns the n-th NFT ID from a list of owner's tokens.\",\"params\":{\"_index\":\"Index number representing n-th token in owner's list of tokens.\",\"_owner\":\"Token owner's address.\"},\"returns\":{\"_0\":\"Token id.\"}},\"tokenURI(uint256)\":{\"details\":\"A distinct URI (RFC 3986) for a given NFT.\",\"params\":{\"_tokenId\":\"Id for which we want uri.\"},\"returns\":{\"_0\":\"URI of _tokenId.\"}},\"totalSupply()\":{\"details\":\"Returns the count of all existing NFTokens.\",\"returns\":{\"_0\":\"Total supply of NFTs.\"}},\"totalToken()\":{\"details\":\"Returns the count of all existing NFTokens.\",\"returns\":{\"_0\":\"Total supply of NFTs.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\"\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"This works even if sender doesn't own any tokens at the time.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/mocks/nf-token-metadata-enumerable-mock.sol\":\"NFTokenMetadataEnumerableMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/mocks/nf-token-metadata-enumerable-mock.sol\":{\"keccak256\":\"0x335c35a983e5d457e5059c105948c36515ae8a847f3158c2bd0c7f061b3eb93f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a59ccfd307222f620ad970723a911684b6215e6ab14617bd26fe05a656286c1\",\"dweb:/ipfs/Qmc3ivVq2Bz2KmnckmFPgztPzov4puD4T6JLjbMqrHt5kY\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/ownership/ownable.sol\":{\"keccak256\":\"0xa1e6c72b1b93fc88a4ec4ca6f7fb49399cb8eb1204422737845f2ea9029a2c56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32a7cf03ae4ee82b47e999374ec7c4f899ac7c5b980b10343a100f6668c63cb5\",\"dweb:/ipfs/QmUVZZorkw8RF77LT4oqzrxs9nbe8WHwu7RppnvaSW45ct\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/erc721-enumerable.sol\":{\"keccak256\":\"0xc1c5583a9f5f909d683fdb22eab4baff379b87a5d070f5327fbb8758dea84a4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1938bc5274ab50737e08d5d5088b51fd5e1d1236a613237cd796fe09251c887c\",\"dweb:/ipfs/Qmasz3bVBN255ooCmFYvSfLyGv418uWix5BDM6g8i3L7XC\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/erc721-metadata.sol\":{\"keccak256\":\"0x8ec50468d680b11289bc8788307e3f374c79801182d03d69f98e7ddff969f1ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5590953aa6ef31dcb62e62a35701344fa184661f82cfa83a8ff938670d429b21\",\"dweb:/ipfs/QmeHFrSpyRsJR6h2T25tTFipJK7Jg5S5kt6oCXD2W7m89r\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/erc721-token-receiver.sol\":{\"keccak256\":\"0x63adf2002874e1ea47e8cdc4f491a46c89c001ef2afe7c0c976099605c491cf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c56a65ecba9fdd6b4e2e4b06ef76e35bb77aa7f9343c1f7d7ef6f0cca714bb7b\",\"dweb:/ipfs/QmWfBcXwPDqr8coV9eUfW9Rng6JCGhofxQDx4oXydej2DV\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/erc721.sol\":{\"keccak256\":\"0x03bb03fbc2192d7b957555488ae74a3b15e0285966d92b6ca3d04123b54f1bca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcffead42397c12c1f2227d56705aa2a061eac538791bced7ea0d43a1b461f73\",\"dweb:/ipfs/QmUCnVxpS1DqNLewbKXYcDLsrki163PG1BQovdL5CrDTJG\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/nf-token-enumerable.sol\":{\"keccak256\":\"0x93e0e8a0f463dc2c2e2efd023b497041da6b22f65b0d04e236b06a02c5797c2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38dbda19fb4f233b4511d4d280082ae9c6fb2dfb1e1a542fc0711b9f4f2df7f3\",\"dweb:/ipfs/QmWKKJWP3c5KXoSVme5GupThXEU2GEUSe7pvnMnKKR2XXc\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/nf-token-metadata.sol\":{\"keccak256\":\"0x658cf6e0bd1381c9a0910c4f215c0cf8453f645c30938823d1655a1661d96378\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca1859dbcf9dbad97356ca0c1b336eba8588cb116bba7097e3373de9e856d2a3\",\"dweb:/ipfs/QmWukyPxrEAtKXBfCXAsZGGzgsvtezxDTteLdjrVL7e7WE\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/nf-token.sol\":{\"keccak256\":\"0x97aae3ffa76efd9d625f56cd8f72b02952e7121c7c3cfb7d77abdaa8c55c67b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5172c22e325c276771d88254817ba70766d659b14fe287b4f75ed17cbb4d3694\",\"dweb:/ipfs/QmQ4AizAPH6dJT45NxUjW8nkDBWKHYNUZ7T5oY2CoNRRBM\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/utils/address-utils.sol\":{\"keccak256\":\"0x161f3b03feffc0e5f340e6c91aff311e682601c8322ac8625a36d2eba2b54cb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b9c43cfab68dc1333f0b31933ecbeef7c93e5eb4f6a8af30efef932cea6ae9d\",\"dweb:/ipfs/QmZeHEYc2rhPNbEbCqbbSeSbVpBM2h5hYHvsZYdq3NFXU8\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/utils/erc165.sol\":{\"keccak256\":\"0x85ce74eeda737980dfc5baba4a4afac6d0fb624fbda32d52d98107b35f1b33b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1eff099ba0bf4143fecbaf7d48e3e18f94488b672efaa6a8bd346e4f3b1e8236\",\"dweb:/ipfs/QmbfF5C7LAXp5BgE95mep7Gjoq2rzGD5uwxA465Qi89Pox\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/utils/supports-interface.sol\":{\"keccak256\":\"0x93f59ea43639a272654eebd290b3d05b64e08bfce124231d6795b6b924e3c09d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5bf57f3578bb5e76379a75790392471dddaad5155208800849bb82d6eec89f4\",\"dweb:/ipfs/QmZ2rXe1xMR24Mp2MfgNBUCd4VRpdu2T3CuUqG9d9px3ib\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003c0538038062003c05833981810160405281019062000037919062000318565b60016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060016000806380ac58cd60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908315150217905550600160008063780e9d6360e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600080635b5e139f60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555033600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160099080519060200190620001d4929190620001f6565b5080600a9080519060200190620001ed929190620001f6565b505050620004bc565b828054620002049062000428565b90600052602060002090601f01602090048101928262000228576000855562000274565b82601f106200024357805160ff191683800117855562000274565b8280016001018555821562000274579182015b828111156200027357825182559160200191906001019062000256565b5b50905062000283919062000287565b5090565b5b80821115620002a257600081600090555060010162000288565b5090565b6000620002bd620002b784620003bf565b6200038b565b905082815260208101848484011115620002d657600080fd5b620002e3848285620003f2565b509392505050565b600082601f830112620002fd57600080fd5b81516200030f848260208601620002a6565b91505092915050565b600080604083850312156200032c57600080fd5b600083015167ffffffffffffffff8111156200034757600080fd5b6200035585828601620002eb565b925050602083015167ffffffffffffffff8111156200037357600080fd5b6200038185828601620002eb565b9150509250929050565b6000604051905081810181811067ffffffffffffffff82111715620003b557620003b46200048d565b5b8060405250919050565b600067ffffffffffffffff821115620003dd57620003dc6200048d565b5b601f19601f8301169050602081019050919050565b60005b8381101562000412578082015181840152602081019050620003f5565b8381111562000422576000848401525b50505050565b600060028204905060018216806200044157607f821691505b602082108114156200045857620004576200045e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61373980620004cc6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80636352211e116100c3578063b88d4fde1161007c578063b88d4fde146103b2578063c87b56dd146103ce578063d3fc9864146103fe578063e985e9c51461041a578063f2fde38b1461044a578063f3fe3bc3146104665761014d565b80636352211e146102dc57806370a082311461030c578063860d248a1461033c5780638da5cb5b1461035a57806395d89b4114610378578063a22cb465146103965761014d565b806323b872dd1161011557806323b872dd1461020a5780632f745c591461022657806342842e0e1461025657806342966c68146102725780634f6ccce71461028e578063626be567146102be5761014d565b806301ffc9a71461015257806306fdde0314610182578063081812fc146101a0578063095ea7b3146101d057806318160ddd146101ec575b600080fd5b61016c6004803603810190610167919061331a565b610484565b604051610179919061349b565b60405180910390f35b61018a6104eb565b60405161019791906134b6565b60405180910390f35b6101ba60048036038101906101b5919061336c565b61057d565b6040516101c79190613434565b60405180910390f35b6101ea60048036038101906101e59190613272565b610698565b005b6101f4610a7b565b60405161020191906134d8565b60405180910390f35b610224600480360381019061021f9190613167565b610a88565b005b610240600480360381019061023b9190613272565b610eda565b60405161024d91906134d8565b60405180910390f35b610270600480360381019061026b9190613167565b611023565b005b61028c6004803603810190610287919061336c565b611043565b005b6102a860048036038101906102a3919061336c565b611118565b6040516102b591906134d8565b60405180910390f35b6102c66111e6565b6040516102d391906134d8565b60405180910390f35b6102f660048036038101906102f1919061336c565b6111f3565b6040516103039190613434565b60405180910390f35b61032660048036038101906103219190613102565b6112d9565b60405161033391906134d8565b60405180910390f35b610344611393565b60405161035191906134b6565b60405180910390f35b6103626113cc565b60405161036f9190613434565b60405180910390f35b6103806113f2565b60405161038d91906134b6565b60405180910390f35b6103b060048036038101906103ab9190613236565b611484565b005b6103cc60048036038101906103c791906131b6565b611581565b005b6103e860048036038101906103e3919061336c565b6115d8565b6040516103f591906134b6565b60405180910390f35b610418600480360381019061041391906132ae565b61175b565b005b610434600480360381019061042f919061312b565b611882565b604051610441919061349b565b60405180910390f35b610464600480360381019061045f9190613102565b611916565b005b61046e611b48565b60405161047b91906134b6565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600980546104fa90613606565b80601f016020809104026020016040519081016040528092919081815260200182805461052690613606565b80156105735780601f1061054857610100808354040283529160200191610573565b820191906000526020600020905b81548152906001019060200180831161055657829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303200000000000000000000000000000000000000000000000000008152509061065b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065291906134b6565b60405180910390fd5b506002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806107915750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303033000000000000000000000000000000000000000000000000000081525090610808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ff91906134b6565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906108e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dc91906134b6565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030380000000000000000000000000000000000000000000000000000815250906109c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bc91906134b6565b60405180910390fd5b50856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6000600580549050905090565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610b5957503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610bea5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090610c61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5891906134b6565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610d3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3591906134b6565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090610e1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1491906134b6565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090610ec6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebd91906134b6565b60405180910390fd5b50610ed18686611b81565b50505050505050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905082106040518060400160405280600681526020017f303035303037000000000000000000000000000000000000000000000000000081525090610f98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8f91906134b6565b60405180910390fd5b50600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611010577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b61103e83838360405180602001604052806000815250611c36565b505050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f30313830303100000000000000000000000000000000000000000000000000008152509061110b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110291906134b6565b60405180910390fd5b5061111581612204565b50565b600060058054905082106040518060400160405280600681526020017f303035303037000000000000000000000000000000000000000000000000000081525090611199576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119091906134b6565b60405180910390fd5b50600582815481106111d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050919050565b6000600c80549050905090565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906112d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ca91906134b6565b60405180910390fd5b50919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090611382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137991906134b6565b60405180910390fd5b5061138c82612257565b9050919050565b6040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525081565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600a805461140190613606565b80601f016020809104026020016040519081016040528092919081815260200182805461142d90613606565b801561147a5780601f1061144f5761010080835404028352916020019161147a565b820191906000526020600020905b81548152906001019060200180831161145d57829003601f168201915b5050505050905090565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611575919061349b565b60405180910390a35050565b6115d185858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611c36565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906116b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ad91906134b6565b60405180910390fd5b50600b600084815260200190815260200160002080546116d590613606565b80601f016020809104026020016040519081016040528092919081815260200182805461170190613606565b801561174e5780601f106117235761010080835404028352916020019161174e565b820191906000526020600020905b81548152906001019060200180831161173157829003601f168201915b5050505050915050919050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525090611823576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181a91906134b6565b60405180910390fd5b5061182e8484612269565b61187c8383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506122c9565b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3031383030310000000000000000000000000000000000000000000000000000815250906119de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119d591906134b6565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525090611a87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7e91906134b6565b60405180910390fd5b508073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525081565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611bc2826123d3565b611bcc8183612474565b611bd68383612482565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b8160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480611d0757503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80611d985750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090611e0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e0691906134b6565b60405180910390fd5b5083600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090611eec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ee391906134b6565b60405180910390fd5b5060006001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090611fcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fc291906134b6565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090612074576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161206b91906134b6565b60405180910390fd5b5061207f8787611b81565b61209e8773ffffffffffffffffffffffffffffffffffffffff16612490565b156121fa5760008773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff1660e01b81526004016120e4949392919061344f565b602060405180830381600087803b1580156120fe57600080fd5b505af1158015612112573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121369190613343565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146040518060400160405280600681526020017f3030333030350000000000000000000000000000000000000000000000000000815250906121f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121ee91906134b6565b60405180910390fd5b50505b5050505050505050565b61220d816124db565b6000600b6000838152602001908152602001600020805461222d90613606565b90501461225457600b600082815260200190815260200160002060006122539190612f22565b5b50565b600061226282612629565b9050919050565b6122738282612675565b600581908060018154018082558091505060019003906000526020600020016000909190919091505560016005805490506122ae919061352b565b60066000838152602001908152602001600020819055505050565b81600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906123a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161239c91906134b6565b60405180910390fd5b5081600b600085815260200190815260200160002090805190602001906123cd929190612f62565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612471576002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b61247e8282612863565b5050565b61248c8282612b9c565b5050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b82141580156124d25750808214155b92505050919050565b6124e481612d99565b60006006600083815260200190815260200160002054905060006001600580549050612510919061352b565b905060006005828154811061254e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490508060058481548110612596577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020018190555060058054806125dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590558260066000838152602001908152602001600020819055506000600660008681526020019081526020016000208190555050505050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303100000000000000000000000000000000000000000000000000008152509061271d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161271491906134b6565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3030333030360000000000000000000000000000000000000000000000000000815250906127f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127ef91906134b6565b60405180910390fd5b506128038282612482565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f30303330303700000000000000000000000000000000000000000000000000008152509061293c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161293391906134b6565b60405180910390fd5b506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560006008600083815260200190815260200160002054905060006001600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506129dc919061352b565b9050818114612b0b576000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110612a5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110612ae3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550826008600083815260200190815260200160002081905550505b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480612b80577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303036000000000000000000000000000000000000000000000000000081525090612c76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c6d91906134b6565b60405180910390fd5b50816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150556001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612d7e919061352b565b60086000838152602001908152602001600020819055505050565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090612e75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e6c91906134b6565b60405180910390fd5b5060006001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050612eb7836123d3565b612ec18184612474565b82600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b508054612f2e90613606565b6000825580601f10612f405750612f5f565b601f016020900490600052602060002090810190612f5e9190612fe8565b5b50565b828054612f6e90613606565b90600052602060002090601f016020900481019282612f905760008555612fd7565b82601f10612fa957805160ff1916838001178555612fd7565b82800160010185558215612fd7579182015b82811115612fd6578251825591602001919060010190612fbb565b5b509050612fe49190612fe8565b5090565b5b80821115613001576000816000905550600101612fe9565b5090565b600081359050613014816136a7565b92915050565b600081359050613029816136be565b92915050565b60008135905061303e816136d5565b92915050565b600081519050613053816136d5565b92915050565b60008083601f84011261306b57600080fd5b8235905067ffffffffffffffff81111561308457600080fd5b60208301915083600182028301111561309c57600080fd5b9250929050565b60008083601f8401126130b557600080fd5b8235905067ffffffffffffffff8111156130ce57600080fd5b6020830191508360018202830111156130e657600080fd5b9250929050565b6000813590506130fc816136ec565b92915050565b60006020828403121561311457600080fd5b600061312284828501613005565b91505092915050565b6000806040838503121561313e57600080fd5b600061314c85828601613005565b925050602061315d85828601613005565b9150509250929050565b60008060006060848603121561317c57600080fd5b600061318a86828701613005565b935050602061319b86828701613005565b92505060406131ac868287016130ed565b9150509250925092565b6000806000806000608086880312156131ce57600080fd5b60006131dc88828901613005565b95505060206131ed88828901613005565b94505060406131fe888289016130ed565b935050606086013567ffffffffffffffff81111561321b57600080fd5b61322788828901613059565b92509250509295509295909350565b6000806040838503121561324957600080fd5b600061325785828601613005565b92505060206132688582860161301a565b9150509250929050565b6000806040838503121561328557600080fd5b600061329385828601613005565b92505060206132a4858286016130ed565b9150509250929050565b600080600080606085870312156132c457600080fd5b60006132d287828801613005565b94505060206132e3878288016130ed565b935050604085013567ffffffffffffffff81111561330057600080fd5b61330c878288016130a3565b925092505092959194509250565b60006020828403121561332c57600080fd5b600061333a8482850161302f565b91505092915050565b60006020828403121561335557600080fd5b600061336384828501613044565b91505092915050565b60006020828403121561337e57600080fd5b600061338c848285016130ed565b91505092915050565b61339e8161355f565b82525050565b6133ad81613571565b82525050565b60006133be826134f3565b6133c88185613509565b93506133d88185602086016135d3565b6133e181613696565b840191505092915050565b60006133f7826134fe565b613401818561351a565b93506134118185602086016135d3565b61341a81613696565b840191505092915050565b61342e816135c9565b82525050565b60006020820190506134496000830184613395565b92915050565b60006080820190506134646000830187613395565b6134716020830186613395565b61347e6040830185613425565b818103606083015261349081846133b3565b905095945050505050565b60006020820190506134b060008301846133a4565b92915050565b600060208201905081810360008301526134d081846133ec565b905092915050565b60006020820190506134ed6000830184613425565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613536826135c9565b9150613541836135c9565b92508282101561355457613553613638565b5b828203905092915050565b600061356a826135a9565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156135f15780820151818401526020810190506135d6565b83811115613600576000848401525b50505050565b6000600282049050600182168061361e57607f821691505b6020821081141561363257613631613667565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6136b08161355f565b81146136bb57600080fd5b50565b6136c781613571565b81146136d257600080fd5b50565b6136de8161357d565b81146136e957600080fd5b50565b6136f5816135c9565b811461370057600080fd5b5056fea26469706673582212202f898ce2c10db174b0bd7b1faa1e4542a9330ffdb2a3c8286b31d6450ae2e3aa64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c80636352211e116100c3578063b88d4fde1161007c578063b88d4fde146103b2578063c87b56dd146103ce578063d3fc9864146103fe578063e985e9c51461041a578063f2fde38b1461044a578063f3fe3bc3146104665761014d565b80636352211e146102dc57806370a082311461030c578063860d248a1461033c5780638da5cb5b1461035a57806395d89b4114610378578063a22cb465146103965761014d565b806323b872dd1161011557806323b872dd1461020a5780632f745c591461022657806342842e0e1461025657806342966c68146102725780634f6ccce71461028e578063626be567146102be5761014d565b806301ffc9a71461015257806306fdde0314610182578063081812fc146101a0578063095ea7b3146101d057806318160ddd146101ec575b600080fd5b61016c6004803603810190610167919061331a565b610484565b604051610179919061349b565b60405180910390f35b61018a6104eb565b60405161019791906134b6565b60405180910390f35b6101ba60048036038101906101b5919061336c565b61057d565b6040516101c79190613434565b60405180910390f35b6101ea60048036038101906101e59190613272565b610698565b005b6101f4610a7b565b60405161020191906134d8565b60405180910390f35b610224600480360381019061021f9190613167565b610a88565b005b610240600480360381019061023b9190613272565b610eda565b60405161024d91906134d8565b60405180910390f35b610270600480360381019061026b9190613167565b611023565b005b61028c6004803603810190610287919061336c565b611043565b005b6102a860048036038101906102a3919061336c565b611118565b6040516102b591906134d8565b60405180910390f35b6102c66111e6565b6040516102d391906134d8565b60405180910390f35b6102f660048036038101906102f1919061336c565b6111f3565b6040516103039190613434565b60405180910390f35b61032660048036038101906103219190613102565b6112d9565b60405161033391906134d8565b60405180910390f35b610344611393565b60405161035191906134b6565b60405180910390f35b6103626113cc565b60405161036f9190613434565b60405180910390f35b6103806113f2565b60405161038d91906134b6565b60405180910390f35b6103b060048036038101906103ab9190613236565b611484565b005b6103cc60048036038101906103c791906131b6565b611581565b005b6103e860048036038101906103e3919061336c565b6115d8565b6040516103f591906134b6565b60405180910390f35b610418600480360381019061041391906132ae565b61175b565b005b610434600480360381019061042f919061312b565b611882565b604051610441919061349b565b60405180910390f35b610464600480360381019061045f9190613102565b611916565b005b61046e611b48565b60405161047b91906134b6565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600980546104fa90613606565b80601f016020809104026020016040519081016040528092919081815260200182805461052690613606565b80156105735780601f1061054857610100808354040283529160200191610573565b820191906000526020600020905b81548152906001019060200180831161055657829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303200000000000000000000000000000000000000000000000000008152509061065b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065291906134b6565b60405180910390fd5b506002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806107915750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303033000000000000000000000000000000000000000000000000000081525090610808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ff91906134b6565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906108e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dc91906134b6565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030380000000000000000000000000000000000000000000000000000815250906109c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bc91906134b6565b60405180910390fd5b50856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6000600580549050905090565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610b5957503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610bea5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090610c61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5891906134b6565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610d3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3591906134b6565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090610e1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1491906134b6565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090610ec6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebd91906134b6565b60405180910390fd5b50610ed18686611b81565b50505050505050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905082106040518060400160405280600681526020017f303035303037000000000000000000000000000000000000000000000000000081525090610f98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8f91906134b6565b60405180910390fd5b50600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611010577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b61103e83838360405180602001604052806000815250611c36565b505050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f30313830303100000000000000000000000000000000000000000000000000008152509061110b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110291906134b6565b60405180910390fd5b5061111581612204565b50565b600060058054905082106040518060400160405280600681526020017f303035303037000000000000000000000000000000000000000000000000000081525090611199576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119091906134b6565b60405180910390fd5b50600582815481106111d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050919050565b6000600c80549050905090565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906112d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ca91906134b6565b60405180910390fd5b50919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090611382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137991906134b6565b60405180910390fd5b5061138c82612257565b9050919050565b6040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525081565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600a805461140190613606565b80601f016020809104026020016040519081016040528092919081815260200182805461142d90613606565b801561147a5780601f1061144f5761010080835404028352916020019161147a565b820191906000526020600020905b81548152906001019060200180831161145d57829003601f168201915b5050505050905090565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611575919061349b565b60405180910390a35050565b6115d185858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611c36565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906116b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ad91906134b6565b60405180910390fd5b50600b600084815260200190815260200160002080546116d590613606565b80601f016020809104026020016040519081016040528092919081815260200182805461170190613606565b801561174e5780601f106117235761010080835404028352916020019161174e565b820191906000526020600020905b81548152906001019060200180831161173157829003601f168201915b5050505050915050919050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525090611823576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181a91906134b6565b60405180910390fd5b5061182e8484612269565b61187c8383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506122c9565b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3031383030310000000000000000000000000000000000000000000000000000815250906119de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119d591906134b6565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525090611a87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7e91906134b6565b60405180910390fd5b508073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525081565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611bc2826123d3565b611bcc8183612474565b611bd68383612482565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b8160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480611d0757503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80611d985750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090611e0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e0691906134b6565b60405180910390fd5b5083600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090611eec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ee391906134b6565b60405180910390fd5b5060006001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090611fcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fc291906134b6565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090612074576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161206b91906134b6565b60405180910390fd5b5061207f8787611b81565b61209e8773ffffffffffffffffffffffffffffffffffffffff16612490565b156121fa5760008773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff1660e01b81526004016120e4949392919061344f565b602060405180830381600087803b1580156120fe57600080fd5b505af1158015612112573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121369190613343565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146040518060400160405280600681526020017f3030333030350000000000000000000000000000000000000000000000000000815250906121f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121ee91906134b6565b60405180910390fd5b50505b5050505050505050565b61220d816124db565b6000600b6000838152602001908152602001600020805461222d90613606565b90501461225457600b600082815260200190815260200160002060006122539190612f22565b5b50565b600061226282612629565b9050919050565b6122738282612675565b600581908060018154018082558091505060019003906000526020600020016000909190919091505560016005805490506122ae919061352b565b60066000838152602001908152602001600020819055505050565b81600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906123a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161239c91906134b6565b60405180910390fd5b5081600b600085815260200190815260200160002090805190602001906123cd929190612f62565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612471576002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b61247e8282612863565b5050565b61248c8282612b9c565b5050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b82141580156124d25750808214155b92505050919050565b6124e481612d99565b60006006600083815260200190815260200160002054905060006001600580549050612510919061352b565b905060006005828154811061254e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490508060058481548110612596577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020018190555060058054806125dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590558260066000838152602001908152602001600020819055506000600660008681526020019081526020016000208190555050505050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303100000000000000000000000000000000000000000000000000008152509061271d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161271491906134b6565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3030333030360000000000000000000000000000000000000000000000000000815250906127f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127ef91906134b6565b60405180910390fd5b506128038282612482565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f30303330303700000000000000000000000000000000000000000000000000008152509061293c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161293391906134b6565b60405180910390fd5b506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560006008600083815260200190815260200160002054905060006001600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506129dc919061352b565b9050818114612b0b576000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110612a5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110612ae3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550826008600083815260200190815260200160002081905550505b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480612b80577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303036000000000000000000000000000000000000000000000000000081525090612c76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c6d91906134b6565b60405180910390fd5b50816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150556001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612d7e919061352b565b60086000838152602001908152602001600020819055505050565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090612e75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e6c91906134b6565b60405180910390fd5b5060006001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050612eb7836123d3565b612ec18184612474565b82600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b508054612f2e90613606565b6000825580601f10612f405750612f5f565b601f016020900490600052602060002090810190612f5e9190612fe8565b5b50565b828054612f6e90613606565b90600052602060002090601f016020900481019282612f905760008555612fd7565b82601f10612fa957805160ff1916838001178555612fd7565b82800160010185558215612fd7579182015b82811115612fd6578251825591602001919060010190612fbb565b5b509050612fe49190612fe8565b5090565b5b80821115613001576000816000905550600101612fe9565b5090565b600081359050613014816136a7565b92915050565b600081359050613029816136be565b92915050565b60008135905061303e816136d5565b92915050565b600081519050613053816136d5565b92915050565b60008083601f84011261306b57600080fd5b8235905067ffffffffffffffff81111561308457600080fd5b60208301915083600182028301111561309c57600080fd5b9250929050565b60008083601f8401126130b557600080fd5b8235905067ffffffffffffffff8111156130ce57600080fd5b6020830191508360018202830111156130e657600080fd5b9250929050565b6000813590506130fc816136ec565b92915050565b60006020828403121561311457600080fd5b600061312284828501613005565b91505092915050565b6000806040838503121561313e57600080fd5b600061314c85828601613005565b925050602061315d85828601613005565b9150509250929050565b60008060006060848603121561317c57600080fd5b600061318a86828701613005565b935050602061319b86828701613005565b92505060406131ac868287016130ed565b9150509250925092565b6000806000806000608086880312156131ce57600080fd5b60006131dc88828901613005565b95505060206131ed88828901613005565b94505060406131fe888289016130ed565b935050606086013567ffffffffffffffff81111561321b57600080fd5b61322788828901613059565b92509250509295509295909350565b6000806040838503121561324957600080fd5b600061325785828601613005565b92505060206132688582860161301a565b9150509250929050565b6000806040838503121561328557600080fd5b600061329385828601613005565b92505060206132a4858286016130ed565b9150509250929050565b600080600080606085870312156132c457600080fd5b60006132d287828801613005565b94505060206132e3878288016130ed565b935050604085013567ffffffffffffffff81111561330057600080fd5b61330c878288016130a3565b925092505092959194509250565b60006020828403121561332c57600080fd5b600061333a8482850161302f565b91505092915050565b60006020828403121561335557600080fd5b600061336384828501613044565b91505092915050565b60006020828403121561337e57600080fd5b600061338c848285016130ed565b91505092915050565b61339e8161355f565b82525050565b6133ad81613571565b82525050565b60006133be826134f3565b6133c88185613509565b93506133d88185602086016135d3565b6133e181613696565b840191505092915050565b60006133f7826134fe565b613401818561351a565b93506134118185602086016135d3565b61341a81613696565b840191505092915050565b61342e816135c9565b82525050565b60006020820190506134496000830184613395565b92915050565b60006080820190506134646000830187613395565b6134716020830186613395565b61347e6040830185613425565b818103606083015261349081846133b3565b905095945050505050565b60006020820190506134b060008301846133a4565b92915050565b600060208201905081810360008301526134d081846133ec565b905092915050565b60006020820190506134ed6000830184613425565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613536826135c9565b9150613541836135c9565b92508282101561355457613553613638565b5b828203905092915050565b600061356a826135a9565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156135f15780820151818401526020810190506135d6565b83811115613600576000848401525b50505050565b6000600282049050600182168061361e57607f821691505b6020821081141561363257613631613667565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6136b08161355f565b81146136bb57600080fd5b50565b6136c781613571565b81146136d257600080fd5b50565b6136de8161357d565b81146136e957600080fd5b50565b6136f5816135c9565b811461370057600080fd5b5056fea26469706673582212202f898ce2c10db174b0bd7b1faa1e4542a9330ffdb2a3c8286b31d6450ae2e3aa64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2967:17",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "102:258:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "112:74:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "178:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "136:41:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "136:49:17"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "121:14:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "121:65:17"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "112:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "202:5:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "209:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "195:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "195:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "195:21:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "225:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "240:5:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "247:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "236:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "236:16:17"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "229:3:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "290:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "299:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "302:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "292:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "292:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "292:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "271:3:17"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "276:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "267:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "267:16:17"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "285:3:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "264:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:25:17"
                  },
                  "nodeType": "YulIf",
                  "src": "261:2:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "337:3:17"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "342:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "347:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "315:21:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "315:39:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "315:39:17"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "75:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "80:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "88:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "96:5:17",
                "type": ""
              }
            ],
            "src": "7:353:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "453:215:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "502:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "511:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "514:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "504:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "504:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "504:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "481:6:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "489:4:17",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "477:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "477:17:17"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "496:3:17"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "473:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "473:27:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "466:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "466:35:17"
                  },
                  "nodeType": "YulIf",
                  "src": "463:2:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "527:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "547:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "541:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "541:13:17"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "531:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "563:99:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "635:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "643:4:17",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "631:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:17:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "650:6:17"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "658:3:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "572:58:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "572:90:17"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "563:5:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "431:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "439:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "447:5:17",
                "type": ""
              }
            ],
            "src": "380:288:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "788:538:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "834:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "843:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "846:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "836:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "836:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "836:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "809:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "818:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "805:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "805:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "830:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "801:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "801:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "798:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "860:224:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "875:38:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "899:9:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "910:1:17",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "895:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "895:17:17"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "889:5:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "889:24:17"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "879:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "960:16:17",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "969:1:17",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "972:1:17",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "962:6:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "962:12:17"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "962:12:17"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "932:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "940:18:17",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "929:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "929:30:17"
                      },
                      "nodeType": "YulIf",
                      "src": "926:2:17"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "990:84:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1046:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1057:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1042:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1042:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1066:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1000:41:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1000:74:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "990:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1094:225:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1109:39:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1133:9:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1144:2:17",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1129:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1129:18:17"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1123:5:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1123:25:17"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1113:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1195:16:17",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1204:1:17",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1207:1:17",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1197:6:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1197:12:17"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1197:12:17"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1167:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1175:18:17",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1164:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1164:30:17"
                      },
                      "nodeType": "YulIf",
                      "src": "1161:2:17"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1225:84:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1281:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1292:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1277:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1277:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1301:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1235:41:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1235:74:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1225:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "750:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "761:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "773:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "781:6:17",
                "type": ""
              }
            ],
            "src": "674:652:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1372:243:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1382:19:17",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1398:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1392:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1392:9:17"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1382:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1410:35:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1432:6:17"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "1440:4:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1428:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1428:17:17"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1414:10:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1556:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1558:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1558:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1558:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1499:10:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1511:18:17",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1496:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1496:34:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1535:10:17"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1547:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1532:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1532:22:17"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1493:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1493:62:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1490:2:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1594:2:17",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1598:10:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1587:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1587:22:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1587:22:17"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1356:4:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1365:6:17",
                "type": ""
              }
            ],
            "src": "1332:283:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1688:265:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1793:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1795:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1795:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1795:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1765:6:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1773:18:17",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1762:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1762:30:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1759:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1845:41:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1861:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1869:4:17",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1857:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1857:17:17"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1880:4:17",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1876:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1876:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1853:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1853:33:17"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "1845:4:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1923:23:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "1935:4:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1941:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1931:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1931:15:17"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "1923:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1672:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1683:4:17",
                "type": ""
              }
            ],
            "src": "1621:332:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2008:258:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2018:10:17",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2027:1:17",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2022:1:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2087:63:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2112:3:17"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2117:1:17"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2108:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2108:11:17"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2131:3:17"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2136:1:17"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2127:3:17"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2127:11:17"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2121:5:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2121:18:17"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2101:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2101:39:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2101:39:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2048:1:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2051:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2045:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2045:13:17"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2059:19:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2061:15:17",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2070:1:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2073:2:17",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2066:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2066:10:17"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2061:1:17"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2041:3:17",
                    "statements": []
                  },
                  "src": "2037:113:17"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2184:76:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2234:3:17"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2239:6:17"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2230:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2230:16:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2248:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2223:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2223:27:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2223:27:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2165:1:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2168:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2162:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2162:13:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2159:2:17"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1990:3:17",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "1995:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2000:6:17",
                "type": ""
              }
            ],
            "src": "1959:307:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2323:269:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2333:22:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2347:4:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2353:1:17",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2343:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2343:12:17"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2333:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2364:38:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2394:4:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2400:1:17",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2390:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2390:12:17"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2368:18:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2441:51:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2455:27:17",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2469:6:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2477:4:17",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2465:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2465:17:17"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2455:6:17"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2421:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2414:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2414:26:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2411:2:17"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2544:42:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "2558:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2558:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2558:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2508:18:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2531:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2539:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2528:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2528:14:17"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2505:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2505:38:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2502:2:17"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2307:4:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2316:6:17",
                "type": ""
              }
            ],
            "src": "2272:320:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2626:152:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2643:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2646:77:17",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2636:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2636:88:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2636:88:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2740:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2743:4:17",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2733:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2733:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2733:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2764:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2767:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2757:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2757:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2757:15:17"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "2598:180:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2812:152:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2829:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2832:77:17",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2822:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2822:88:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2822:88:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2926:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2929:4:17",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2919:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2919:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2919:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2950:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2953:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2943:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2943:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2943:15:17"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2784:180:17"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11554:17",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:17"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:17",
                "type": ""
              }
            ],
            "src": "7:139:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "201:84:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "211:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "233:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "220:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "220:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "211:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "273:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "249:23:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "249:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "249:30:17"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "179:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "187:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "195:5:17",
                "type": ""
              }
            ],
            "src": "152:133:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "342:86:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "352:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "374:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "361:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "361:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "352:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "416:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "390:25:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:32:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "390:32:17"
                }
              ]
            },
            "name": "abi_decode_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "320:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "328:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "336:5:17",
                "type": ""
              }
            ],
            "src": "291:137:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "496:79:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "506:22:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "521:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "515:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "515:13:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "506:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "563:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "537:25:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "537:32:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "537:32:17"
                }
              ]
            },
            "name": "abi_decode_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "474:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "482:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "490:5:17",
                "type": ""
              }
            ],
            "src": "434:141:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "668:277:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "717:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "726:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "729:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "719:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "719:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "719:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "696:6:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "704:4:17",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "692:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "692:17:17"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "711:3:17"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:27:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "681:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "681:35:17"
                  },
                  "nodeType": "YulIf",
                  "src": "678:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "742:30:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "765:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "752:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "752:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "742:6:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "815:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "824:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "827:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "817:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "817:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "817:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "787:6:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "795:18:17",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "784:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:30:17"
                  },
                  "nodeType": "YulIf",
                  "src": "781:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "840:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "856:6:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "864:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "852:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "852:17:17"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "840:8:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "923:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "932:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "935:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "925:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "925:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "925:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulIdentifier",
                            "src": "888:8:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "902:6:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "910:4:17",
                                "type": "",
                                "value": "0x01"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "898:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "898:17:17"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "884:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "884:32:17"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "918:3:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "881:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "881:41:17"
                  },
                  "nodeType": "YulIf",
                  "src": "878:2:17"
                }
              ]
            },
            "name": "abi_decode_t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "635:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "643:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "651:8:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "661:6:17",
                "type": ""
              }
            ],
            "src": "594:351:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1040:277:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1089:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1098:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1101:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1091:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1091:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1091:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1068:6:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1076:4:17",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1064:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1064:17:17"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1083:3:17"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1060:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1060:27:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1053:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1053:35:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1050:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1114:30:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1137:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1124:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1124:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1114:6:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1187:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1196:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1199:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1189:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1189:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1189:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1159:6:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1167:18:17",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1156:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1156:30:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1153:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1212:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1228:6:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1236:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1224:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1224:17:17"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "1212:8:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1295:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1304:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1307:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1297:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1297:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1297:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulIdentifier",
                            "src": "1260:8:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1274:6:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1282:4:17",
                                "type": "",
                                "value": "0x01"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "1270:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1270:17:17"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1256:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1256:32:17"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1290:3:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1253:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1253:41:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1250:2:17"
                }
              ]
            },
            "name": "abi_decode_t_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1007:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1015:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "1023:8:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1033:6:17",
                "type": ""
              }
            ],
            "src": "965:352:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1375:87:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1385:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1407:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1394:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1394:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1385:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1450:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1423:26:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1423:33:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1423:33:17"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1353:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1361:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1369:5:17",
                "type": ""
              }
            ],
            "src": "1323:139:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1534:196:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1580:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1589:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1592:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1582:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1582:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1582:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1555:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1564:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1551:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1551:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1576:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1547:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1547:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1544:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1606:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1621:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1635:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1625:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1650:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1685:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1696:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1681:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1681:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1705:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1660:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1660:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1650:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1504:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1515:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1527:6:17",
                "type": ""
              }
            ],
            "src": "1468:262:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1819:324:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1865:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1874:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1877:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1867:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1867:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1867:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1840:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1849:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1836:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1836:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1861:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1832:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1832:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1829:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1891:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1906:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1920:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1910:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1935:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1970:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1981:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1966:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1966:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1990:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1945:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1945:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1935:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2018:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2033:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2047:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2037:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2063:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2098:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2109:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2094:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2094:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2118:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2073:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2073:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2063:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1781:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1792:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1804:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1812:6:17",
                "type": ""
              }
            ],
            "src": "1736:407:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2249:452:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2295:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2304:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2307:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2297:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2297:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2297:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2270:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2279:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2266:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2266:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2291:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2262:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2262:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2259:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2321:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2336:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2350:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2340:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2365:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2400:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2411:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2396:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2396:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2420:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2375:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2375:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2365:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2448:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2463:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2477:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2467:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2493:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2528:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2539:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2524:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2524:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2548:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2503:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2503:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2493:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2576:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2591:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2605:2:17",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2595:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2621:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2656:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2667:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2652:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2652:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2676:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2631:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2631:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2621:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2203:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2214:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2226:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2234:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2242:6:17",
                "type": ""
              }
            ],
            "src": "2149:552:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2843:693:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2890:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2899:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2902:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2892:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2892:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2892:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2864:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2873:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2860:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2860:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2885:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2856:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2856:33:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2853:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2916:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2931:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2945:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2935:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2960:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2995:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3006:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2991:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2991:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3015:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2970:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2970:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2960:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3043:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3058:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3072:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3062:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3088:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3123:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3134:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3119:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3119:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3143:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3098:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3098:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3088:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3171:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3186:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3200:2:17",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3190:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3216:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3251:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3262:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3247:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3247:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3271:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3226:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3226:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3216:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3299:230:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3314:46:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3345:9:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3356:2:17",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3341:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3341:18:17"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3328:12:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3328:32:17"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3318:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3407:16:17",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3416:1:17",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3419:1:17",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3409:6:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3409:12:17"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3409:12:17"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3379:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3387:18:17",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3376:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3376:30:17"
                      },
                      "nodeType": "YulIf",
                      "src": "3373:2:17"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3437:82:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3491:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3502:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3487:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3487:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3511:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_calldata_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3455:31:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3455:64:17"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3437:6:17"
                        },
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3445:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2781:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2792:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2804:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2812:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2820:6:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2828:6:17",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2836:6:17",
                "type": ""
              }
            ],
            "src": "2707:829:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3622:321:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3668:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3677:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3680:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3670:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3670:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3670:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3643:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3652:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3639:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3639:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3664:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3635:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3635:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "3632:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3694:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3709:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3723:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3713:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3738:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3773:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3784:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3769:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3769:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3793:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3748:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3748:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3738:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3821:115:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3836:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3850:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3840:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3866:60:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3898:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3909:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3894:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3894:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3918:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3876:17:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3876:50:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3866:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3584:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3595:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3607:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3615:6:17",
                "type": ""
              }
            ],
            "src": "3542:401:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4032:324:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4078:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4087:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4090:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4080:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4080:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4080:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4053:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4062:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4049:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4049:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4074:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4045:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4045:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "4042:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4104:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4119:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4133:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4123:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4148:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4183:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4194:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4179:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4179:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4203:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4158:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4158:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4148:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4231:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4246:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4260:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4250:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4276:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4311:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4322:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4307:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4307:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4331:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4286:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4286:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4276:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3994:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4005:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4017:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4025:6:17",
                "type": ""
              }
            ],
            "src": "3949:407:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4482:565:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4528:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4537:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4540:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4530:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4530:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4530:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4503:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4512:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4499:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4499:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4524:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4495:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4495:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "4492:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4554:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4569:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4583:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4573:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4598:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4633:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4644:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4629:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4629:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4653:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4608:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4608:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4598:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4681:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4696:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4710:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4700:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4726:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4761:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4772:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4757:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4757:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4781:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4736:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4736:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4726:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4809:231:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4824:46:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4855:9:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4866:2:17",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4851:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4851:18:17"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4838:12:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4838:32:17"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4828:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4917:16:17",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4926:1:17",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4929:1:17",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4919:6:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4919:12:17"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4919:12:17"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4889:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4897:18:17",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4886:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4886:30:17"
                      },
                      "nodeType": "YulIf",
                      "src": "4883:2:17"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4947:83:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5002:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5013:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4998:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4998:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5022:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_calldata_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "4965:32:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4965:65:17"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4947:6:17"
                        },
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "4955:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4428:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4439:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4451:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4459:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4467:6:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4475:6:17",
                "type": ""
              }
            ],
            "src": "4362:685:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5118:195:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5164:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5173:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5176:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5166:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5166:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5166:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5139:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5148:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5135:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5135:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5160:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5131:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5131:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "5128:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5190:116:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5205:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5219:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5209:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5234:62:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5268:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5279:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5264:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5264:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5288:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "5244:19:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5244:52:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5234:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5088:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5099:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5111:6:17",
                "type": ""
              }
            ],
            "src": "5053:260:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5395:206:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5441:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5450:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5453:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5443:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5443:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5443:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5416:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5425:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5412:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5412:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5437:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5408:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5408:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "5405:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5467:127:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5482:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5496:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5486:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5511:73:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5556:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5567:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5552:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5552:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5576:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5521:30:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5521:63:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5511:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5365:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5376:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5388:6:17",
                "type": ""
              }
            ],
            "src": "5319:282:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5673:196:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5719:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5728:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5731:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5721:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5721:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5721:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5694:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5703:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5690:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5690:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5715:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5686:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5686:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "5683:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5745:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5760:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5774:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5764:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5789:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5824:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5835:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5820:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5820:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5844:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5799:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5799:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5789:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5643:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5654:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5666:6:17",
                "type": ""
              }
            ],
            "src": "5607:262:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5940:53:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5957:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5980:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5962:17:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5962:24:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5950:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5950:37:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5950:37:17"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5928:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5935:3:17",
                "type": ""
              }
            ],
            "src": "5875:118:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6058:50:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6075:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6095:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "6080:14:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6080:21:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6068:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6068:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6068:34:17"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6046:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6053:3:17",
                "type": ""
              }
            ],
            "src": "5999:109:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6204:270:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6214:52:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6260:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "6228:31:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6228:38:17"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6218:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6275:77:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6340:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6345:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6282:57:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6282:70:17"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6275:3:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6387:5:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6394:4:17",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6383:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6383:16:17"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6401:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6406:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6361:21:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6361:52:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6361:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6422:46:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6433:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6460:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "6438:21:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6438:29:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6429:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6429:39:17"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6422:3:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6185:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6192:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6200:3:17",
                "type": ""
              }
            ],
            "src": "6114:360:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6572:272:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6582:53:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6629:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "6596:32:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6596:39:17"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6586:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6644:78:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6710:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6715:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6651:58:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6651:71:17"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6644:3:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6757:5:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6764:4:17",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6753:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6753:16:17"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6771:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6776:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6731:21:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6731:52:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6731:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6792:46:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6803:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6830:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "6808:21:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6808:29:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6799:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6799:39:17"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6792:3:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6553:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6560:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6568:3:17",
                "type": ""
              }
            ],
            "src": "6480:364:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6915:53:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6932:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6955:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6937:17:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6937:24:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6925:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6925:37:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6925:37:17"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6903:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6910:3:17",
                "type": ""
              }
            ],
            "src": "6850:118:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7072:124:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7082:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7094:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7105:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7090:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7090:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7082:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7162:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7175:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7186:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7171:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7171:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7118:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7118:71:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7118:71:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7044:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7056:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7067:4:17",
                "type": ""
              }
            ],
            "src": "6974:222:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7402:440:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7412:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7424:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7435:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7420:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7420:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7412:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7493:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7506:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7517:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7502:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7502:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7449:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7449:71:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7449:71:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7574:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7587:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7598:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7583:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7583:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7530:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7530:72:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7530:72:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7656:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7669:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7680:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7665:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7665:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7612:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7612:72:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7612:72:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7705:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7716:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7701:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7701:18:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7725:4:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7731:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7721:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7721:20:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7694:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7694:48:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7694:48:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7751:84:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7821:6:17"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7830:4:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7759:61:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7759:76:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7751:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7350:9:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7362:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7370:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7378:6:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7386:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7397:4:17",
                "type": ""
              }
            ],
            "src": "7202:640:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7940:118:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7950:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7962:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7973:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7958:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7958:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7950:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8024:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8037:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8048:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8033:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8033:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7986:37:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7986:65:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7986:65:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7912:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7924:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7935:4:17",
                "type": ""
              }
            ],
            "src": "7848:210:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8182:195:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8192:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8204:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8215:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8200:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8200:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8192:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8239:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8250:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8235:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8235:17:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8258:4:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8264:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8254:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8254:20:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8228:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8228:47:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8228:47:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8284:86:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8356:6:17"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8365:4:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8292:63:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8292:78:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8284:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8154:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8166:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8177:4:17",
                "type": ""
              }
            ],
            "src": "8064:313:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8481:124:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8491:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8503:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8514:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8499:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8499:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8491:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8571:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8584:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8595:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8580:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8580:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8527:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8527:71:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8527:71:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8453:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8465:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8476:4:17",
                "type": ""
              }
            ],
            "src": "8383:222:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8669:40:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8680:22:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8696:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8690:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8690:12:17"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "8680:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8652:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8662:6:17",
                "type": ""
              }
            ],
            "src": "8611:98:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8774:40:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8785:22:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8801:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8795:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8795:12:17"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "8785:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8757:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8767:6:17",
                "type": ""
              }
            ],
            "src": "8715:99:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8915:73:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8932:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8937:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8925:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8925:19:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8925:19:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8953:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8972:3:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8977:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8968:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8968:14:17"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8953:11:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8887:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8892:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "8903:11:17",
                "type": ""
              }
            ],
            "src": "8820:168:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9090:73:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9107:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9112:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9100:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9100:19:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9100:19:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9128:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9147:3:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9152:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9143:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9143:14:17"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "9128:11:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9062:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9067:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "9078:11:17",
                "type": ""
              }
            ],
            "src": "8994:169:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9214:146:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9224:25:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9247:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9229:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9229:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "9224:1:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9258:25:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9281:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9263:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9263:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "9258:1:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9305:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9307:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9307:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9307:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9299:1:17"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9302:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9296:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9296:8:17"
                  },
                  "nodeType": "YulIf",
                  "src": "9293:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9337:17:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9349:1:17"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9352:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "9345:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9345:9:17"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "9337:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9200:1:17",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9203:1:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "9209:4:17",
                "type": ""
              }
            ],
            "src": "9169:191:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9411:51:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9421:35:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9450:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9432:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9432:24:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9421:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9393:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9403:7:17",
                "type": ""
              }
            ],
            "src": "9366:96:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9510:48:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9520:32:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9545:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9538:6:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9538:13:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9531:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9531:21:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9520:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9492:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9502:7:17",
                "type": ""
              }
            ],
            "src": "9468:90:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9608:105:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9618:89:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9633:5:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9640:66:17",
                        "type": "",
                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9629:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9629:78:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9618:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9590:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9600:7:17",
                "type": ""
              }
            ],
            "src": "9564:149:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9764:81:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9774:65:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9789:5:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9796:42:17",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9785:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9785:54:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9774:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9746:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9756:7:17",
                "type": ""
              }
            ],
            "src": "9719:126:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9896:32:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9906:16:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9917:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9906:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9878:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9888:7:17",
                "type": ""
              }
            ],
            "src": "9851:77:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9983:258:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9993:10:17",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10002:1:17",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "9997:1:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10062:63:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10087:3:17"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "10092:1:17"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10083:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10083:11:17"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "10106:3:17"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "10111:1:17"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10102:3:17"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10102:11:17"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "10096:5:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10096:18:17"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10076:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10076:39:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10076:39:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10023:1:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10026:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10020:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10020:13:17"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10034:19:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10036:15:17",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "10045:1:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10048:2:17",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10041:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10041:10:17"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "10036:1:17"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10016:3:17",
                    "statements": []
                  },
                  "src": "10012:113:17"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10159:76:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10209:3:17"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "10214:6:17"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10205:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10205:16:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10223:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10198:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10198:27:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10198:27:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10140:1:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10143:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10137:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10137:13:17"
                  },
                  "nodeType": "YulIf",
                  "src": "10134:2:17"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "9965:3:17",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "9970:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9975:6:17",
                "type": ""
              }
            ],
            "src": "9934:307:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10298:269:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10308:22:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "10322:4:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10328:1:17",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "10318:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10318:12:17"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "10308:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10339:38:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "10369:4:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10375:1:17",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10365:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10365:12:17"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "10343:18:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10416:51:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10430:27:17",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "10444:6:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10452:4:17",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "10440:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10440:17:17"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10430:6:17"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "10396:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10389:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10389:26:17"
                  },
                  "nodeType": "YulIf",
                  "src": "10386:2:17"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10519:42:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "10533:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10533:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10533:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "10483:18:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10506:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10514:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "10503:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10503:14:17"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "10480:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10480:38:17"
                  },
                  "nodeType": "YulIf",
                  "src": "10477:2:17"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "10282:4:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10291:6:17",
                "type": ""
              }
            ],
            "src": "10247:320:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10601:152:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10618:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10621:77:17",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10611:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10611:88:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10611:88:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10715:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10718:4:17",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10708:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10708:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10708:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10739:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10742:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10732:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10732:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10732:15:17"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "10573:180:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10787:152:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10804:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10807:77:17",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10797:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10797:88:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10797:88:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10901:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10904:4:17",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10894:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10894:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10894:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10925:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10928:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10918:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10918:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10918:15:17"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "10759:180:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10993:54:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11003:38:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11021:5:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11028:2:17",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11017:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11017:14:17"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11037:2:17",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "11033:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11033:7:17"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11013:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11013:28:17"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "11003:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10976:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "10986:6:17",
                "type": ""
              }
            ],
            "src": "10945:102:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11096:79:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11153:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11162:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11165:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11155:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11155:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11155:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11119:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11144:5:17"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "11126:17:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11126:24:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11116:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11116:35:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11109:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11109:43:17"
                  },
                  "nodeType": "YulIf",
                  "src": "11106:2:17"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11089:5:17",
                "type": ""
              }
            ],
            "src": "11053:122:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11221:76:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11275:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11284:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11287:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11277:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11277:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11277:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11244:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11266:5:17"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "11251:14:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11251:21:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11241:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11241:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11234:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11234:40:17"
                  },
                  "nodeType": "YulIf",
                  "src": "11231:2:17"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11214:5:17",
                "type": ""
              }
            ],
            "src": "11181:116:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11345:78:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11401:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11410:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11413:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11403:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11403:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11403:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11368:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11392:5:17"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "11375:16:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11375:23:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11365:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11365:34:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11358:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11358:42:17"
                  },
                  "nodeType": "YulIf",
                  "src": "11355:2:17"
                }
              ]
            },
            "name": "validator_revert_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11338:5:17",
                "type": ""
              }
            ],
            "src": "11303:120:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11472:79:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11529:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11538:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11541:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11531:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11531:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11531:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11495:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11520:5:17"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "11502:17:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11502:24:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11492:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11492:35:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11485:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11485:43:17"
                  },
                  "nodeType": "YulIf",
                  "src": "11482:2:17"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11465:5:17",
                "type": ""
              }
            ],
            "src": "11429:122:17"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value2, value3 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "292:3572:3:-:0;;;550:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;487:4:16;453:19;:31;473:10;453:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2991:4:13;2957:19;:31;2977:10;2957:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1097:4:11;1063:19;:31;1083:10;1063:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;870:4:12;836:19;:31;856:10;836:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1093:10:6;1085:5;;:18;;;;;;;;;;;;;;;;;;636:5:3;626:7;:15;;;;;;;;;;;;:::i;:::-;;659:7;647:9;:19;;;;;;;;;;;;:::i;:::-;;550:121;;292:3572;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:353:17:-;;121:65;136:49;178:6;136:49;:::i;:::-;121:65;:::i;:::-;112:74;;209:6;202:5;195:21;247:4;240:5;236:16;285:3;276:6;271:3;267:16;264:25;261:2;;;302:1;299;292:12;261:2;315:39;347:6;342:3;337;315:39;:::i;:::-;102:258;;;;;;:::o;380:288::-;;496:3;489:4;481:6;477:17;473:27;463:2;;514:1;511;504:12;463:2;547:6;541:13;572:90;658:3;650:6;643:4;635:6;631:17;572:90;:::i;:::-;563:99;;453:215;;;;;:::o;674:652::-;;;830:2;818:9;809:7;805:23;801:32;798:2;;;846:1;843;836:12;798:2;910:1;899:9;895:17;889:24;940:18;932:6;929:30;926:2;;;972:1;969;962:12;926:2;1000:74;1066:7;1057:6;1046:9;1042:22;1000:74;:::i;:::-;990:84;;860:224;1144:2;1133:9;1129:18;1123:25;1175:18;1167:6;1164:30;1161:2;;;1207:1;1204;1197:12;1161:2;1235:74;1301:7;1292:6;1281:9;1277:22;1235:74;:::i;:::-;1225:84;;1094:225;788:538;;;;;:::o;1332:283::-;;1398:2;1392:9;1382:19;;1440:4;1432:6;1428:17;1547:6;1535:10;1532:22;1511:18;1499:10;1496:34;1493:62;1490:2;;;1558:18;;:::i;:::-;1490:2;1598:10;1594:2;1587:22;1372:243;;;;:::o;1621:332::-;;1773:18;1765:6;1762:30;1759:2;;;1795:18;;:::i;:::-;1759:2;1880:4;1876:9;1869:4;1861:6;1857:17;1853:33;1845:41;;1941:4;1935;1931:15;1923:23;;1688:265;;;:::o;1959:307::-;2027:1;2037:113;2051:6;2048:1;2045:13;2037:113;;;2136:1;2131:3;2127:11;2121:18;2117:1;2112:3;2108:11;2101:39;2073:2;2070:1;2066:10;2061:15;;2037:113;;;2168:6;2165:1;2162:13;2159:2;;;2248:1;2239:6;2234:3;2230:16;2223:27;2159:2;2008:258;;;;:::o;2272:320::-;;2353:1;2347:4;2343:12;2333:22;;2400:1;2394:4;2390:12;2421:18;2411:2;;2477:4;2469:6;2465:17;2455:27;;2411:2;2539;2531:6;2528:14;2508:18;2505:38;2502:2;;;2558:18;;:::i;:::-;2502:2;2323:269;;;;:::o;2598:180::-;2646:77;2643:1;2636:88;2743:4;2740:1;2733:15;2767:4;2764:1;2757:15;2784:180;2832:77;2829:1;2822:88;2929:4;2926:1;2919:15;2953:4;2950:1;2943:15;292:3572:3;;;;;;;",
<<<<<<< Updated upstream
  "deployedSourceMap": "292:3572:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;723:179:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1030:101:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9361:193:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7096:362;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1243:101:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6316:352:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1942:256:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4532:180:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1178:101:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1490:209:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1475:97:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8893:218:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8407:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;491:65:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;614:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1251:109:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7876:231:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3900:213;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1951:191:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;887:189:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9829:194:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1466:225:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;434:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;723:179:16;835:4;862:19;:33;882:12;862:33;;;;;;;;;;;;;;;;;;;;;;;;;;;855:40;;723:179;;;:::o;1030:101:12:-;1078:19;1117:7;1109:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1030:101;:::o;9361:193:13:-;9495:7;9468:8;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;;2802:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;9525:12:::1;:22;9538:8;9525:22;;;;;;;;;;;;;;;;;;;;;9518:29;;9361:193:::0;;;;:::o;7096:362::-;7203:8;1932:18;1953:9;:19;1963:8;1953:19;;;;;;;;;;;;;;;;;;;;;1932:40;;2017:10;2003:24;;:10;:24;;;:84;;;;2047:16;:28;2064:10;2047:28;;;;;;;;;;;;;;;:40;2076:10;2047:40;;;;;;;;;;;;;;;;;;;;;;;;;2003:84;2101:21;;;;;;;;;;;;;;;;;1982:150;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7234:8:::1;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;::::0;2802:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7258:18:::2;7279:9;:19;7289:8;7279:19;;;;;;;;;;;;;;;;;;;;;7258:40;;7329:10;7316:23;;:9;:23;;;;7341:8;;;;;;;;;;;;;;;;::::0;7308:42:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7386:9;7361:12;:22;7374:8;7361:22;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;7442:8;7431:9;7410:41;;7419:10;7410:41;;;;;;;;;;;;2869:1;2142::::1;7096:362:::0;;;;:::o;1243:101:11:-;1298:7;1324:6;:13;;;;1317:20;;1243:101;:::o;6316:352:13:-;6444:8;2342:18;2363:9;:19;2373:8;2363:19;;;;;;;;;;;;;;;;;;;;;2342:40;;2427:10;2413:24;;:10;:24;;;:80;;;;2483:10;2457:36;;:12;:22;2470:8;2457:22;;;;;;;;;;;;;;;;;;;;;:36;;;2413:80;:140;;;;2513:16;:28;2530:10;2513:28;;;;;;;;;;;;;;;:40;2542:10;2513:40;;;;;;;;;;;;;;;;;;;;;;;;;2413:140;2567:30;;;;;;;;;;;;;;;;;2392:215;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6467:8:::1;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;::::0;2802:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6487:18:::2;6508:9;:19;6518:8;6508:19;;;;;;;;;;;;;;;;;;;;;6487:40;;6559:5;6545:19;;:10;:19;;;6566:9;;;;;;;;;;;;;;;;::::0;6537:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6609:1;6594:17;;:3;:17;;;;6613:12;;;;;;;;;;;;;;;;::::0;6586:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6637:24;6647:3;6652:8;6637:9;:24::i;:::-;2869:1;2617::::1;6316:352:::0;;;;;:::o;1942:256:11:-;2067:7;2107:10;:18;2118:6;2107:18;;;;;;;;;;;;;;;:25;;;;2098:6;:34;2134:13;;;;;;;;;;;;;;;;;2090:58;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2165:10;:18;2176:6;2165:18;;;;;;;;;;;;;;;2184:6;2165:26;;;;;;;;;;;;;;;;;;;;;;;;2158:33;;1942:256;;;;:::o;4532:180:13:-;4662:43;4680:5;4687:3;4692:8;4662:43;;;;;;;;;;;;:17;:43::i;:::-;4532:180;;;:::o;1178:101:3:-;1251:5:6;;;;;;;;;;;1237:19;;:10;:19;;;1258:17;;;;;;;;;;;;;;;;;1229:47;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1253:21:3::1;1265:8;1253:11;:21::i;:::-;1178:101:::0;:::o;1490:209:11:-;1592:7;1632:6;:13;;;;1623:6;:22;1647:13;;;;;;;;;;;;;;;;;1615:46;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1678:6;1685;1678:14;;;;;;;;;;;;;;;;;;;;;;;;1671:21;;1490:209;;;:::o;1475:97:12:-;1520:7;1546:12;:19;;;;1539:26;;1475:97;:::o;8893:218:13:-;8992:14;9031:9;:19;9041:8;9031:19;;;;;;;;;;;;;;;;;;;;;9022:28;;9086:1;9068:20;;:6;:20;;;;9090:13;;;;;;;;;;;;;;;;;9060:44;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8893:218;;;:::o;8407:214::-;8506:7;8555:1;8537:20;;:6;:20;;;;8559:12;;;;;;;;;;;;;;;;;8529:43;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8589:25;8607:6;8589:17;:25::i;:::-;8582:32;;8407:214;;;:::o;491:65:6:-;;;;;;;;;;;;;;;;;;;:::o;614:20::-;;;;;;;;;;;;;:::o;1251:109:12:-;1301:21;1344:9;1334:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1251:109;:::o;7876:231:13:-;8028:9;7986:16;:28;8003:10;7986:28;;;;;;;;;;;;;;;:39;8015:9;7986:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;8079:9;8052:48;;8067:10;8052:48;;;8090:9;8052:48;;;;;;:::i;:::-;;;;;;;;7876:231;;:::o;3900:213::-;4060:46;4078:5;4085:3;4090:8;4100:5;;4060:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;:46::i;:::-;3900:213;;;;;:::o;1951:191:12:-;2082:13;2055:8;2841:1:13;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;;2802:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2118:7:12::1;:17;2126:8;2118:17;;;;;;;;;;;2111:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1951:191:::0;;;;:::o;887:189:3:-;1251:5:6;;;;;;;;;;;1237:19;;:10;:19;;;1258:17;;;;;;;;;;;;;;;;;1229:47;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1005:26:3::1;1017:3;1022:8;1005:11;:26::i;:::-;1037:34;1056:8;1066:4;;1037:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;:34::i;:::-;887:189:::0;;;;:::o;9829:194:13:-;9954:4;9981:16;:24;9998:6;9981:24;;;;;;;;;;;;;;;:35;10006:9;9981:35;;;;;;;;;;;;;;;;;;;;;;;;;9974:42;;9829:194;;;;:::o;1466:225:6:-;1251:5;;;;;;;;;;;1237:19;;:10;:19;;;1258:17;;;;;;;;;;;;;;;;;1229:47;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1568:1:::1;1547:23;;:9;:23;;;;1572:31;;;;;;;;;;;;;;;;::::0;1539:65:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1647:9;1619:38;;1640:5;;;;;;;;;;;1619:38;;;;;;;;;;;;1675:9;1667:5;;:17;;;;;;;;;;;;;;;;;;1466:225:::0;:::o;434:51::-;;;;;;;;;;;;;;;;;;;:::o;10220:266:13:-;10289:12;10304:9;:19;10314:8;10304:19;;;;;;;;;;;;;;;;;;;;;10289:34;;10333:24;10348:8;10333:14;:24::i;:::-;10368:30;10383:4;10389:8;10368:14;:30::i;:::-;10408:26;10420:3;10425:8;10408:11;:26::i;:::-;10470:8;10465:3;10450:29;;10459:4;10450:29;;;;;;;;;;;;10220:266;;;:::o;13646:767::-;13797:8;2342:18;2363:9;:19;2373:8;2363:19;;;;;;;;;;;;;;;;;;;;;2342:40;;2427:10;2413:24;;:10;:24;;;:80;;;;2483:10;2457:36;;:12;:22;2470:8;2457:22;;;;;;;;;;;;;;;;;;;;;:36;;;2413:80;:140;;;;2513:16;:28;2530:10;2513:28;;;;;;;;;;;;;;;:40;2542:10;2513:40;;;;;;;;;;;;;;;;;;;;;;;;;2413:140;2567:30;;;;;;;;;;;;;;;;;2392:215;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;13820:8:::1;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;::::0;2802:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;13840:18:::2;13861:9;:19;13871:8;13861:19;;;;;;;;;;;;;;;;;;;;;13840:40;;13912:5;13898:19;;:10;:19;;;13919:9;;;;;;;;;;;;;;;;::::0;13890:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;13962:1;13947:17;;:3;:17;;;;13966:12;;;;;;;;;;;;;;;;::::0;13939:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;13990:24;14000:3;14005:8;13990:9;:24::i;:::-;14029:16;:3;:14;;;:16::i;:::-;14025:382;;;14061:13;14113:3;14093:41;;;14156:10;14188:5;14215:8;14245:5;14093:175;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14061:207;;1152:10;14317:24;;14307:34;;;:6;:34;;;;14359:23;;;;;;;;;;;;;;;;::::0;14282:114:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;14025:382;;2869:1;2617::::1;13646:767:::0;;;;;;:::o;2553:198:12:-;2622:21;2634:8;2622:11;:21::i;:::-;2693:1;2664:7;:17;2672:8;2664:17;;;;;;;;;;;2658:31;;;;;:::i;:::-;;;:36;2654:91;;2717:7;:17;2725:8;2717:17;;;;;;;;;;;;2710:24;;;;:::i;:::-;2654:91;2553:198;:::o;3662:199:3:-;3789:7;3813:43;3849:6;3813:35;:43::i;:::-;3806:50;;3662:199;;;:::o;2597:195:11:-;2679:26;2691:3;2696:8;2679:11;:26::i;:::-;2715:6;2727:8;2715:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2784:1;2768:6;:13;;;;:17;;;;:::i;:::-;2746:9;:19;2756:8;2746:19;;;;;;;;;;;:39;;;;2597:195;;:::o;3154:153:12:-;3252:8;2841:1:13;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;;2802:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3296:4:12::1;3276:7;:17;3284:8;3276:17;;;;;;;;;;;:24;;;;;;;;;;;;:::i;:::-;;3154:153:::0;;;:::o;14550:162:13:-;14648:1;14614:36;;:12;:22;14627:8;14614:22;;;;;;;;;;;;;;;;;;;;;:36;;;14610:96;;14673:12;:22;14686:8;14673:22;;;;;;;;;;;;14666:29;;;;;;;;;;;14610:96;14550:162;:::o;2750:185:3:-;2881:49;2914:5;2921:8;2881:32;:49::i;:::-;2750:185;;:::o;3199:175::-;3325:44;3355:3;3360:8;3325:29;:44::i;:::-;3199:175;;:::o;487:842:14:-;569:17;1031:16;1057:19;1091:66;1057:100;;;;1214:5;1202:18;1190:30;;1291:3;1279:15;;:8;:15;;:42;;;;;1310:11;1298:8;:23;;1279:42;1263:59;;487:842;;;;;:::o;3203:492:11:-;3272:21;3284:8;3272:11;:21::i;:::-;3304:18;3325:9;:19;3335:8;3325:19;;;;;;;;;;;;3304:40;;3354:22;3395:1;3379:6;:13;;;;:17;;;;:::i;:::-;3354:42;;3406:17;3426:6;3433:14;3426:22;;;;;;;;;;;;;;;;;;;;;;;;3406:42;;3480:9;3459:6;3466:10;3459:18;;;;;;;;;;;;;;;;;;;;;;;:30;;;;3500:6;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3645:10;3622:9;:20;3632:9;3622:20;;;;;;;;;;;:33;;;;3687:1;3665:9;:19;3675:8;3665:19;;;;;;;;;;;:23;;;;3203:492;;;;:::o;5509:185::-;5632:7;5662:10;:18;5673:6;5662:18;;;;;;;;;;;;;;;:25;;;;5655:32;;5509:185;;;:::o;10885:280:13:-;10981:1;10966:17;;:3;:17;;;;10985:12;;;;;;;;;;;;;;;;;10958:40;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;11047:1;11016:33;;:9;:19;11026:8;11016:19;;;;;;;;;;;;;;;;;;;;;:33;;;11051:18;;;;;;;;;;;;;;;;;11008:62;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;11081:26;11093:3;11098:8;11081:11;:26::i;:::-;11149:8;11144:3;11123:35;;11140:1;11123:35;;;;;;;;;;;;10885:280;;:::o;3980:626:11:-;4132:5;4109:28;;:9;:19;4119:8;4109:19;;;;;;;;;;;;;;;;;;;;;:28;;;4139:9;;;;;;;;;;;;;;;;;4101:48;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4166:9;:19;4176:8;4166:19;;;;;;;;;;;;4159:26;;;;;;;;;;;4196;4225:14;:24;4240:8;4225:24;;;;;;;;;;;;4196:53;;4259:22;4311:1;4284:10;:17;4295:5;4284:17;;;;;;;;;;;;;;;:24;;;;:28;;;;:::i;:::-;4259:53;;4345:18;4327:14;:36;4323:243;;4379:17;4399:10;:17;4410:5;4399:17;;;;;;;;;;;;;;;4417:14;4399:33;;;;;;;;;;;;;;;;;;;;;;;;4379:53;;4486:9;4446:10;:17;4457:5;4446:17;;;;;;;;;;;;;;;4464:18;4446:37;;;;;;;;;;;;;;;;;;;;;;;:49;;;;4537:18;4509:14;:25;4524:9;4509:25;;;;;;;;;;;:46;;;;4323:243;;4576:10;:17;4587:5;4576:17;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3980:626;;;;:::o;4884:324::-;5039:1;5008:33;;:9;:19;5018:8;5008:19;;;;;;;;;;;;;;;;;;;;;:33;;;5043:18;;;;;;;;;;;;;;;;;5000:62;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5094:3;5072:9;:19;5082:8;5072:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;5108:10;:15;5119:3;5108:15;;;;;;;;;;;;;;;5129:8;5108:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5200:1;5175:10;:15;5186:3;5175:15;;;;;;;;;;;;;;;:22;;;;:26;;;;:::i;:::-;5148:14;:24;5163:8;5148:24;;;;;;;;;;;:53;;;;4884:324;;:::o;11576:267:13:-;11639:8;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;;2802:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;11659:18:::1;11680:9;:19;11690:8;11680:19;;;;;;;;;;;;;;;;;;;;;11659:40;;11709:24;11724:8;11709:14;:24::i;:::-;11743:36;11758:10;11770:8;11743:14;:36::i;:::-;11827:8;11823:1;11794:42;;11803:10;11794:42;;;;;;;;;;;;2869:1;11576:267:::0;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:139:17:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:137::-;;374:6;361:20;352:29;;390:32;416:5;390:32;:::i;:::-;342:86;;;;:::o;434:141::-;;521:6;515:13;506:22;;537:32;563:5;537:32;:::i;:::-;496:79;;;;:::o;594:351::-;;;711:3;704:4;696:6;692:17;688:27;678:2;;729:1;726;719:12;678:2;765:6;752:20;742:30;;795:18;787:6;784:30;781:2;;;827:1;824;817:12;781:2;864:4;856:6;852:17;840:29;;918:3;910:4;902:6;898:17;888:8;884:32;881:41;878:2;;;935:1;932;925:12;878:2;668:277;;;;;:::o;965:352::-;;;1083:3;1076:4;1068:6;1064:17;1060:27;1050:2;;1101:1;1098;1091:12;1050:2;1137:6;1124:20;1114:30;;1167:18;1159:6;1156:30;1153:2;;;1199:1;1196;1189:12;1153:2;1236:4;1228:6;1224:17;1212:29;;1290:3;1282:4;1274:6;1270:17;1260:8;1256:32;1253:41;1250:2;;;1307:1;1304;1297:12;1250:2;1040:277;;;;;:::o;1323:139::-;;1407:6;1394:20;1385:29;;1423:33;1450:5;1423:33;:::i;:::-;1375:87;;;;:::o;1468:262::-;;1576:2;1564:9;1555:7;1551:23;1547:32;1544:2;;;1592:1;1589;1582:12;1544:2;1635:1;1660:53;1705:7;1696:6;1685:9;1681:22;1660:53;:::i;:::-;1650:63;;1606:117;1534:196;;;;:::o;1736:407::-;;;1861:2;1849:9;1840:7;1836:23;1832:32;1829:2;;;1877:1;1874;1867:12;1829:2;1920:1;1945:53;1990:7;1981:6;1970:9;1966:22;1945:53;:::i;:::-;1935:63;;1891:117;2047:2;2073:53;2118:7;2109:6;2098:9;2094:22;2073:53;:::i;:::-;2063:63;;2018:118;1819:324;;;;;:::o;2149:552::-;;;;2291:2;2279:9;2270:7;2266:23;2262:32;2259:2;;;2307:1;2304;2297:12;2259:2;2350:1;2375:53;2420:7;2411:6;2400:9;2396:22;2375:53;:::i;:::-;2365:63;;2321:117;2477:2;2503:53;2548:7;2539:6;2528:9;2524:22;2503:53;:::i;:::-;2493:63;;2448:118;2605:2;2631:53;2676:7;2667:6;2656:9;2652:22;2631:53;:::i;:::-;2621:63;;2576:118;2249:452;;;;;:::o;2707:829::-;;;;;;2885:3;2873:9;2864:7;2860:23;2856:33;2853:2;;;2902:1;2899;2892:12;2853:2;2945:1;2970:53;3015:7;3006:6;2995:9;2991:22;2970:53;:::i;:::-;2960:63;;2916:117;3072:2;3098:53;3143:7;3134:6;3123:9;3119:22;3098:53;:::i;:::-;3088:63;;3043:118;3200:2;3226:53;3271:7;3262:6;3251:9;3247:22;3226:53;:::i;:::-;3216:63;;3171:118;3356:2;3345:9;3341:18;3328:32;3387:18;3379:6;3376:30;3373:2;;;3419:1;3416;3409:12;3373:2;3455:64;3511:7;3502:6;3491:9;3487:22;3455:64;:::i;:::-;3437:82;;;;3299:230;2843:693;;;;;;;;:::o;3542:401::-;;;3664:2;3652:9;3643:7;3639:23;3635:32;3632:2;;;3680:1;3677;3670:12;3632:2;3723:1;3748:53;3793:7;3784:6;3773:9;3769:22;3748:53;:::i;:::-;3738:63;;3694:117;3850:2;3876:50;3918:7;3909:6;3898:9;3894:22;3876:50;:::i;:::-;3866:60;;3821:115;3622:321;;;;;:::o;3949:407::-;;;4074:2;4062:9;4053:7;4049:23;4045:32;4042:2;;;4090:1;4087;4080:12;4042:2;4133:1;4158:53;4203:7;4194:6;4183:9;4179:22;4158:53;:::i;:::-;4148:63;;4104:117;4260:2;4286:53;4331:7;4322:6;4311:9;4307:22;4286:53;:::i;:::-;4276:63;;4231:118;4032:324;;;;;:::o;4362:685::-;;;;;4524:2;4512:9;4503:7;4499:23;4495:32;4492:2;;;4540:1;4537;4530:12;4492:2;4583:1;4608:53;4653:7;4644:6;4633:9;4629:22;4608:53;:::i;:::-;4598:63;;4554:117;4710:2;4736:53;4781:7;4772:6;4761:9;4757:22;4736:53;:::i;:::-;4726:63;;4681:118;4866:2;4855:9;4851:18;4838:32;4897:18;4889:6;4886:30;4883:2;;;4929:1;4926;4919:12;4883:2;4965:65;5022:7;5013:6;5002:9;4998:22;4965:65;:::i;:::-;4947:83;;;;4809:231;4482:565;;;;;;;:::o;5053:260::-;;5160:2;5148:9;5139:7;5135:23;5131:32;5128:2;;;5176:1;5173;5166:12;5128:2;5219:1;5244:52;5288:7;5279:6;5268:9;5264:22;5244:52;:::i;:::-;5234:62;;5190:116;5118:195;;;;:::o;5319:282::-;;5437:2;5425:9;5416:7;5412:23;5408:32;5405:2;;;5453:1;5450;5443:12;5405:2;5496:1;5521:63;5576:7;5567:6;5556:9;5552:22;5521:63;:::i;:::-;5511:73;;5467:127;5395:206;;;;:::o;5607:262::-;;5715:2;5703:9;5694:7;5690:23;5686:32;5683:2;;;5731:1;5728;5721:12;5683:2;5774:1;5799:53;5844:7;5835:6;5824:9;5820:22;5799:53;:::i;:::-;5789:63;;5745:117;5673:196;;;;:::o;5875:118::-;5962:24;5980:5;5962:24;:::i;:::-;5957:3;5950:37;5940:53;;:::o;5999:109::-;6080:21;6095:5;6080:21;:::i;:::-;6075:3;6068:34;6058:50;;:::o;6114:360::-;;6228:38;6260:5;6228:38;:::i;:::-;6282:70;6345:6;6340:3;6282:70;:::i;:::-;6275:77;;6361:52;6406:6;6401:3;6394:4;6387:5;6383:16;6361:52;:::i;:::-;6438:29;6460:6;6438:29;:::i;:::-;6433:3;6429:39;6422:46;;6204:270;;;;;:::o;6480:364::-;;6596:39;6629:5;6596:39;:::i;:::-;6651:71;6715:6;6710:3;6651:71;:::i;:::-;6644:78;;6731:52;6776:6;6771:3;6764:4;6757:5;6753:16;6731:52;:::i;:::-;6808:29;6830:6;6808:29;:::i;:::-;6803:3;6799:39;6792:46;;6572:272;;;;;:::o;6850:118::-;6937:24;6955:5;6937:24;:::i;:::-;6932:3;6925:37;6915:53;;:::o;6974:222::-;;7105:2;7094:9;7090:18;7082:26;;7118:71;7186:1;7175:9;7171:17;7162:6;7118:71;:::i;:::-;7072:124;;;;:::o;7202:640::-;;7435:3;7424:9;7420:19;7412:27;;7449:71;7517:1;7506:9;7502:17;7493:6;7449:71;:::i;:::-;7530:72;7598:2;7587:9;7583:18;7574:6;7530:72;:::i;:::-;7612;7680:2;7669:9;7665:18;7656:6;7612:72;:::i;:::-;7731:9;7725:4;7721:20;7716:2;7705:9;7701:18;7694:48;7759:76;7830:4;7821:6;7759:76;:::i;:::-;7751:84;;7402:440;;;;;;;:::o;7848:210::-;;7973:2;7962:9;7958:18;7950:26;;7986:65;8048:1;8037:9;8033:17;8024:6;7986:65;:::i;:::-;7940:118;;;;:::o;8064:313::-;;8215:2;8204:9;8200:18;8192:26;;8264:9;8258:4;8254:20;8250:1;8239:9;8235:17;8228:47;8292:78;8365:4;8356:6;8292:78;:::i;:::-;8284:86;;8182:195;;;;:::o;8383:222::-;;8514:2;8503:9;8499:18;8491:26;;8527:71;8595:1;8584:9;8580:17;8571:6;8527:71;:::i;:::-;8481:124;;;;:::o;8611:98::-;;8696:5;8690:12;8680:22;;8669:40;;;:::o;8715:99::-;;8801:5;8795:12;8785:22;;8774:40;;;:::o;8820:168::-;;8937:6;8932:3;8925:19;8977:4;8972:3;8968:14;8953:29;;8915:73;;;;:::o;8994:169::-;;9112:6;9107:3;9100:19;9152:4;9147:3;9143:14;9128:29;;9090:73;;;;:::o;9169:191::-;;9229:20;9247:1;9229:20;:::i;:::-;9224:25;;9263:20;9281:1;9263:20;:::i;:::-;9258:25;;9302:1;9299;9296:8;9293:2;;;9307:18;;:::i;:::-;9293:2;9352:1;9349;9345:9;9337:17;;9214:146;;;;:::o;9366:96::-;;9432:24;9450:5;9432:24;:::i;:::-;9421:35;;9411:51;;;:::o;9468:90::-;;9545:5;9538:13;9531:21;9520:32;;9510:48;;;:::o;9564:149::-;;9640:66;9633:5;9629:78;9618:89;;9608:105;;;:::o;9719:126::-;;9796:42;9789:5;9785:54;9774:65;;9764:81;;;:::o;9851:77::-;;9917:5;9906:16;;9896:32;;;:::o;9934:307::-;10002:1;10012:113;10026:6;10023:1;10020:13;10012:113;;;10111:1;10106:3;10102:11;10096:18;10092:1;10087:3;10083:11;10076:39;10048:2;10045:1;10041:10;10036:15;;10012:113;;;10143:6;10140:1;10137:13;10134:2;;;10223:1;10214:6;10209:3;10205:16;10198:27;10134:2;9983:258;;;;:::o;10247:320::-;;10328:1;10322:4;10318:12;10308:22;;10375:1;10369:4;10365:12;10396:18;10386:2;;10452:4;10444:6;10440:17;10430:27;;10386:2;10514;10506:6;10503:14;10483:18;10480:38;10477:2;;;10533:18;;:::i;:::-;10477:2;10298:269;;;;:::o;10573:180::-;10621:77;10618:1;10611:88;10718:4;10715:1;10708:15;10742:4;10739:1;10732:15;10759:180;10807:77;10804:1;10797:88;10904:4;10901:1;10894:15;10928:4;10925:1;10918:15;10945:102;;11037:2;11033:7;11028:2;11021:5;11017:14;11013:28;11003:38;;10993:54;;;:::o;11053:122::-;11126:24;11144:5;11126:24;:::i;:::-;11119:5;11116:35;11106:2;;11165:1;11162;11155:12;11106:2;11096:79;:::o;11181:116::-;11251:21;11266:5;11251:21;:::i;:::-;11244:5;11241:32;11231:2;;11287:1;11284;11277:12;11231:2;11221:76;:::o;11303:120::-;11375:23;11392:5;11375:23;:::i;:::-;11368:5;11365:34;11355:2;;11413:1;11410;11403:12;11355:2;11345:78;:::o;11429:122::-;11502:24;11520:5;11502:24;:::i;:::-;11495:5;11492:35;11482:2;;11541:1;11538;11531:12;11482:2;11472:79;:::o",
=======
  "deployedSourceMap": "292:3572:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;723:179:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1030:101:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8345:193:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6080:362;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1243:101:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5300:352:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1942:256:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4532:180:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1178:101:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1490:209:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1475:97:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7877:218:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7391:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;491:65:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;614:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1251:109:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6860:231:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3900:213;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1951:191:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;887:189:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8813:194:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1466:225:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;434:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;723:179:16;835:4;862:19;:33;882:12;862:33;;;;;;;;;;;;;;;;;;;;;;;;;;;855:40;;723:179;;;:::o;1030:101:12:-;1078:19;1117:7;1109:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1030:101;:::o;8345:193:13:-;8479:7;8452:8;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;;2802:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8509:12:::1;:22;8522:8;8509:22;;;;;;;;;;;;;;;;;;;;;8502:29;;8345:193:::0;;;;:::o;6080:362::-;6187:8;1932:18;1953:9;:19;1963:8;1953:19;;;;;;;;;;;;;;;;;;;;;1932:40;;2017:10;2003:24;;:10;:24;;;:84;;;;2047:16;:28;2064:10;2047:28;;;;;;;;;;;;;;;:40;2076:10;2047:40;;;;;;;;;;;;;;;;;;;;;;;;;2003:84;2101:21;;;;;;;;;;;;;;;;;1982:150;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6218:8:::1;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;::::0;2802:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6242:18:::2;6263:9;:19;6273:8;6263:19;;;;;;;;;;;;;;;;;;;;;6242:40;;6313:10;6300:23;;:9;:23;;;;6325:8;;;;;;;;;;;;;;;;::::0;6292:42:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6370:9;6345:12;:22;6358:8;6345:22;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;6426:8;6415:9;6394:41;;6403:10;6394:41;;;;;;;;;;;;2869:1;2142::::1;6080:362:::0;;;;:::o;1243:101:11:-;1298:7;1324:6;:13;;;;1317:20;;1243:101;:::o;5300:352:13:-;5428:8;2342:18;2363:9;:19;2373:8;2363:19;;;;;;;;;;;;;;;;;;;;;2342:40;;2427:10;2413:24;;:10;:24;;;:80;;;;2483:10;2457:36;;:12;:22;2470:8;2457:22;;;;;;;;;;;;;;;;;;;;;:36;;;2413:80;:140;;;;2513:16;:28;2530:10;2513:28;;;;;;;;;;;;;;;:40;2542:10;2513:40;;;;;;;;;;;;;;;;;;;;;;;;;2413:140;2567:30;;;;;;;;;;;;;;;;;2392:215;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5451:8:::1;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;::::0;2802:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5471:18:::2;5492:9;:19;5502:8;5492:19;;;;;;;;;;;;;;;;;;;;;5471:40;;5543:5;5529:19;;:10;:19;;;5550:9;;;;;;;;;;;;;;;;::::0;5521:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5593:1;5578:17;;:3;:17;;;;5597:12;;;;;;;;;;;;;;;;::::0;5570:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5621:24;5631:3;5636:8;5621:9;:24::i;:::-;2869:1;2617::::1;5300:352:::0;;;;;:::o;1942:256:11:-;2067:7;2107:10;:18;2118:6;2107:18;;;;;;;;;;;;;;;:25;;;;2098:6;:34;2134:13;;;;;;;;;;;;;;;;;2090:58;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2165:10;:18;2176:6;2165:18;;;;;;;;;;;;;;;2184:6;2165:26;;;;;;;;;;;;;;;;;;;;;;;;2158:33;;1942:256;;;;:::o;4532:180:13:-;4662:43;4680:5;4687:3;4692:8;4662:43;;;;;;;;;;;;:17;:43::i;:::-;4532:180;;;:::o;1178:101:3:-;1251:5:6;;;;;;;;;;;1237:19;;:10;:19;;;1258:17;;;;;;;;;;;;;;;;;1229:47;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1253:21:3::1;1265:8;1253:11;:21::i;:::-;1178:101:::0;:::o;1490:209:11:-;1592:7;1632:6;:13;;;;1623:6;:22;1647:13;;;;;;;;;;;;;;;;;1615:46;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1678:6;1685;1678:14;;;;;;;;;;;;;;;;;;;;;;;;1671:21;;1490:209;;;:::o;1475:97:12:-;1520:7;1546:12;:19;;;;1539:26;;1475:97;:::o;7877:218:13:-;7976:14;8015:9;:19;8025:8;8015:19;;;;;;;;;;;;;;;;;;;;;8006:28;;8070:1;8052:20;;:6;:20;;;;8074:13;;;;;;;;;;;;;;;;;8044:44;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7877:218;;;:::o;7391:214::-;7490:7;7539:1;7521:20;;:6;:20;;;;7543:12;;;;;;;;;;;;;;;;;7513:43;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7573:25;7591:6;7573:17;:25::i;:::-;7566:32;;7391:214;;;:::o;491:65:6:-;;;;;;;;;;;;;;;;;;;:::o;614:20::-;;;;;;;;;;;;;:::o;1251:109:12:-;1301:21;1344:9;1334:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1251:109;:::o;6860:231:13:-;7012:9;6970:16;:28;6987:10;6970:28;;;;;;;;;;;;;;;:39;6999:9;6970:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;7063:9;7036:48;;7051:10;7036:48;;;7074:9;7036:48;;;;;;:::i;:::-;;;;;;;;6860:231;;:::o;3900:213::-;4060:46;4078:5;4085:3;4090:8;4100:5;;4060:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;:46::i;:::-;3900:213;;;;;:::o;1951:191:12:-;2082:13;2055:8;2841:1:13;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;;2802:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2118:7:12::1;:17;2126:8;2118:17;;;;;;;;;;;2111:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1951:191:::0;;;;:::o;887:189:3:-;1251:5:6;;;;;;;;;;;1237:19;;:10;:19;;;1258:17;;;;;;;;;;;;;;;;;1229:47;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1005:26:3::1;1017:3;1022:8;1005:11;:26::i;:::-;1037:34;1056:8;1066:4;;1037:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;:34::i;:::-;887:189:::0;;;;:::o;8813:194:13:-;8938:4;8965:16;:24;8982:6;8965:24;;;;;;;;;;;;;;;:35;8990:9;8965:35;;;;;;;;;;;;;;;;;;;;;;;;;8958:42;;8813:194;;;;:::o;1466:225:6:-;1251:5;;;;;;;;;;;1237:19;;:10;:19;;;1258:17;;;;;;;;;;;;;;;;;1229:47;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1568:1:::1;1547:23;;:9;:23;;;;1572:31;;;;;;;;;;;;;;;;::::0;1539:65:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1647:9;1619:38;;1640:5;;;;;;;;;;;1619:38;;;;;;;;;;;;1675:9;1667:5;;:17;;;;;;;;;;;;;;;;;;1466:225:::0;:::o;434:51::-;;;;;;;;;;;;;;;;;;;:::o;9204:266:13:-;9273:12;9288:9;:19;9298:8;9288:19;;;;;;;;;;;;;;;;;;;;;9273:34;;9317:24;9332:8;9317:14;:24::i;:::-;9352:30;9367:4;9373:8;9352:14;:30::i;:::-;9392:26;9404:3;9409:8;9392:11;:26::i;:::-;9454:8;9449:3;9434:29;;9443:4;9434:29;;;;;;;;;;;;9204:266;;;:::o;12630:767::-;12781:8;2342:18;2363:9;:19;2373:8;2363:19;;;;;;;;;;;;;;;;;;;;;2342:40;;2427:10;2413:24;;:10;:24;;;:80;;;;2483:10;2457:36;;:12;:22;2470:8;2457:22;;;;;;;;;;;;;;;;;;;;;:36;;;2413:80;:140;;;;2513:16;:28;2530:10;2513:28;;;;;;;;;;;;;;;:40;2542:10;2513:40;;;;;;;;;;;;;;;;;;;;;;;;;2413:140;2567:30;;;;;;;;;;;;;;;;;2392:215;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12804:8:::1;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;::::0;2802:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12824:18:::2;12845:9;:19;12855:8;12845:19;;;;;;;;;;;;;;;;;;;;;12824:40;;12896:5;12882:19;;:10;:19;;;12903:9;;;;;;;;;;;;;;;;::::0;12874:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12946:1;12931:17;;:3;:17;;;;12950:12;;;;;;;;;;;;;;;;::::0;12923:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12974:24;12984:3;12989:8;12974:9;:24::i;:::-;13013:16;:3;:14;;;:16::i;:::-;13009:382;;;13045:13;13097:3;13077:41;;;13140:10;13172:5;13199:8;13229:5;13077:175;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13045:207;;1152:10;13301:24;;13291:34;;;:6;:34;;;;13343:23;;;;;;;;;;;;;;;;::::0;13266:114:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;13009:382;;2869:1;2617::::1;12630:767:::0;;;;;;:::o;2553:198:12:-;2622:21;2634:8;2622:11;:21::i;:::-;2693:1;2664:7;:17;2672:8;2664:17;;;;;;;;;;;2658:31;;;;;:::i;:::-;;;:36;2654:91;;2717:7;:17;2725:8;2717:17;;;;;;;;;;;;2710:24;;;;:::i;:::-;2654:91;2553:198;:::o;3662:199:3:-;3789:7;3813:43;3849:6;3813:35;:43::i;:::-;3806:50;;3662:199;;;:::o;2597:195:11:-;2679:26;2691:3;2696:8;2679:11;:26::i;:::-;2715:6;2727:8;2715:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2784:1;2768:6;:13;;;;:17;;;;:::i;:::-;2746:9;:19;2756:8;2746:19;;;;;;;;;;;:39;;;;2597:195;;:::o;3154:153:12:-;3252:8;2841:1:13;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;;2802:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3296:4:12::1;3276:7;:17;3284:8;3276:17;;;;;;;;;;;:24;;;;;;;;;;;;:::i;:::-;;3154:153:::0;;;:::o;13534:162:13:-;13632:1;13598:36;;:12;:22;13611:8;13598:22;;;;;;;;;;;;;;;;;;;;;:36;;;13594:96;;13657:12;:22;13670:8;13657:22;;;;;;;;;;;;13650:29;;;;;;;;;;;13594:96;13534:162;:::o;2750:185:3:-;2881:49;2914:5;2921:8;2881:32;:49::i;:::-;2750:185;;:::o;3199:175::-;3325:44;3355:3;3360:8;3325:29;:44::i;:::-;3199:175;;:::o;487:842:14:-;569:17;1031:16;1057:19;1091:66;1057:100;;;;1214:5;1202:18;1190:30;;1291:3;1279:15;;:8;:15;;:42;;;;;1310:11;1298:8;:23;;1279:42;1263:59;;487:842;;;;;:::o;3203:492:11:-;3272:21;3284:8;3272:11;:21::i;:::-;3304:18;3325:9;:19;3335:8;3325:19;;;;;;;;;;;;3304:40;;3354:22;3395:1;3379:6;:13;;;;:17;;;;:::i;:::-;3354:42;;3406:17;3426:6;3433:14;3426:22;;;;;;;;;;;;;;;;;;;;;;;;3406:42;;3480:9;3459:6;3466:10;3459:18;;;;;;;;;;;;;;;;;;;;;;;:30;;;;3500:6;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3645:10;3622:9;:20;3632:9;3622:20;;;;;;;;;;;:33;;;;3687:1;3665:9;:19;3675:8;3665:19;;;;;;;;;;;:23;;;;3203:492;;;;:::o;5509:185::-;5632:7;5662:10;:18;5673:6;5662:18;;;;;;;;;;;;;;;:25;;;;5655:32;;5509:185;;;:::o;9869:280:13:-;9965:1;9950:17;;:3;:17;;;;9969:12;;;;;;;;;;;;;;;;;9942:40;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;10031:1;10000:33;;:9;:19;10010:8;10000:19;;;;;;;;;;;;;;;;;;;;;:33;;;10035:18;;;;;;;;;;;;;;;;;9992:62;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;10065:26;10077:3;10082:8;10065:11;:26::i;:::-;10133:8;10128:3;10107:35;;10124:1;10107:35;;;;;;;;;;;;9869:280;;:::o;3980:626:11:-;4132:5;4109:28;;:9;:19;4119:8;4109:19;;;;;;;;;;;;;;;;;;;;;:28;;;4139:9;;;;;;;;;;;;;;;;;4101:48;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4166:9;:19;4176:8;4166:19;;;;;;;;;;;;4159:26;;;;;;;;;;;4196;4225:14;:24;4240:8;4225:24;;;;;;;;;;;;4196:53;;4259:22;4311:1;4284:10;:17;4295:5;4284:17;;;;;;;;;;;;;;;:24;;;;:28;;;;:::i;:::-;4259:53;;4345:18;4327:14;:36;4323:243;;4379:17;4399:10;:17;4410:5;4399:17;;;;;;;;;;;;;;;4417:14;4399:33;;;;;;;;;;;;;;;;;;;;;;;;4379:53;;4486:9;4446:10;:17;4457:5;4446:17;;;;;;;;;;;;;;;4464:18;4446:37;;;;;;;;;;;;;;;;;;;;;;;:49;;;;4537:18;4509:14;:25;4524:9;4509:25;;;;;;;;;;;:46;;;;4323:243;;4576:10;:17;4587:5;4576:17;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3980:626;;;;:::o;4884:324::-;5039:1;5008:33;;:9;:19;5018:8;5008:19;;;;;;;;;;;;;;;;;;;;;:33;;;5043:18;;;;;;;;;;;;;;;;;5000:62;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5094:3;5072:9;:19;5082:8;5072:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;5108:10;:15;5119:3;5108:15;;;;;;;;;;;;;;;5129:8;5108:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5200:1;5175:10;:15;5186:3;5175:15;;;;;;;;;;;;;;;:22;;;;:26;;;;:::i;:::-;5148:14;:24;5163:8;5148:24;;;;;;;;;;;:53;;;;4884:324;;:::o;10560:267:13:-;10623:8;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;;2802:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;10643:18:::1;10664:9;:19;10674:8;10664:19;;;;;;;;;;;;;;;;;;;;;10643:40;;10693:24;10708:8;10693:14;:24::i;:::-;10727:36;10742:10;10754:8;10727:14;:36::i;:::-;10811:8;10807:1;10778:42;;10787:10;10778:42;;;;;;;;;;;;2869:1;10560:267:::0;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:139:17:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:137::-;;374:6;361:20;352:29;;390:32;416:5;390:32;:::i;:::-;342:86;;;;:::o;434:141::-;;521:6;515:13;506:22;;537:32;563:5;537:32;:::i;:::-;496:79;;;;:::o;594:351::-;;;711:3;704:4;696:6;692:17;688:27;678:2;;729:1;726;719:12;678:2;765:6;752:20;742:30;;795:18;787:6;784:30;781:2;;;827:1;824;817:12;781:2;864:4;856:6;852:17;840:29;;918:3;910:4;902:6;898:17;888:8;884:32;881:41;878:2;;;935:1;932;925:12;878:2;668:277;;;;;:::o;965:352::-;;;1083:3;1076:4;1068:6;1064:17;1060:27;1050:2;;1101:1;1098;1091:12;1050:2;1137:6;1124:20;1114:30;;1167:18;1159:6;1156:30;1153:2;;;1199:1;1196;1189:12;1153:2;1236:4;1228:6;1224:17;1212:29;;1290:3;1282:4;1274:6;1270:17;1260:8;1256:32;1253:41;1250:2;;;1307:1;1304;1297:12;1250:2;1040:277;;;;;:::o;1323:139::-;;1407:6;1394:20;1385:29;;1423:33;1450:5;1423:33;:::i;:::-;1375:87;;;;:::o;1468:262::-;;1576:2;1564:9;1555:7;1551:23;1547:32;1544:2;;;1592:1;1589;1582:12;1544:2;1635:1;1660:53;1705:7;1696:6;1685:9;1681:22;1660:53;:::i;:::-;1650:63;;1606:117;1534:196;;;;:::o;1736:407::-;;;1861:2;1849:9;1840:7;1836:23;1832:32;1829:2;;;1877:1;1874;1867:12;1829:2;1920:1;1945:53;1990:7;1981:6;1970:9;1966:22;1945:53;:::i;:::-;1935:63;;1891:117;2047:2;2073:53;2118:7;2109:6;2098:9;2094:22;2073:53;:::i;:::-;2063:63;;2018:118;1819:324;;;;;:::o;2149:552::-;;;;2291:2;2279:9;2270:7;2266:23;2262:32;2259:2;;;2307:1;2304;2297:12;2259:2;2350:1;2375:53;2420:7;2411:6;2400:9;2396:22;2375:53;:::i;:::-;2365:63;;2321:117;2477:2;2503:53;2548:7;2539:6;2528:9;2524:22;2503:53;:::i;:::-;2493:63;;2448:118;2605:2;2631:53;2676:7;2667:6;2656:9;2652:22;2631:53;:::i;:::-;2621:63;;2576:118;2249:452;;;;;:::o;2707:829::-;;;;;;2885:3;2873:9;2864:7;2860:23;2856:33;2853:2;;;2902:1;2899;2892:12;2853:2;2945:1;2970:53;3015:7;3006:6;2995:9;2991:22;2970:53;:::i;:::-;2960:63;;2916:117;3072:2;3098:53;3143:7;3134:6;3123:9;3119:22;3098:53;:::i;:::-;3088:63;;3043:118;3200:2;3226:53;3271:7;3262:6;3251:9;3247:22;3226:53;:::i;:::-;3216:63;;3171:118;3356:2;3345:9;3341:18;3328:32;3387:18;3379:6;3376:30;3373:2;;;3419:1;3416;3409:12;3373:2;3455:64;3511:7;3502:6;3491:9;3487:22;3455:64;:::i;:::-;3437:82;;;;3299:230;2843:693;;;;;;;;:::o;3542:401::-;;;3664:2;3652:9;3643:7;3639:23;3635:32;3632:2;;;3680:1;3677;3670:12;3632:2;3723:1;3748:53;3793:7;3784:6;3773:9;3769:22;3748:53;:::i;:::-;3738:63;;3694:117;3850:2;3876:50;3918:7;3909:6;3898:9;3894:22;3876:50;:::i;:::-;3866:60;;3821:115;3622:321;;;;;:::o;3949:407::-;;;4074:2;4062:9;4053:7;4049:23;4045:32;4042:2;;;4090:1;4087;4080:12;4042:2;4133:1;4158:53;4203:7;4194:6;4183:9;4179:22;4158:53;:::i;:::-;4148:63;;4104:117;4260:2;4286:53;4331:7;4322:6;4311:9;4307:22;4286:53;:::i;:::-;4276:63;;4231:118;4032:324;;;;;:::o;4362:685::-;;;;;4524:2;4512:9;4503:7;4499:23;4495:32;4492:2;;;4540:1;4537;4530:12;4492:2;4583:1;4608:53;4653:7;4644:6;4633:9;4629:22;4608:53;:::i;:::-;4598:63;;4554:117;4710:2;4736:53;4781:7;4772:6;4761:9;4757:22;4736:53;:::i;:::-;4726:63;;4681:118;4866:2;4855:9;4851:18;4838:32;4897:18;4889:6;4886:30;4883:2;;;4929:1;4926;4919:12;4883:2;4965:65;5022:7;5013:6;5002:9;4998:22;4965:65;:::i;:::-;4947:83;;;;4809:231;4482:565;;;;;;;:::o;5053:260::-;;5160:2;5148:9;5139:7;5135:23;5131:32;5128:2;;;5176:1;5173;5166:12;5128:2;5219:1;5244:52;5288:7;5279:6;5268:9;5264:22;5244:52;:::i;:::-;5234:62;;5190:116;5118:195;;;;:::o;5319:282::-;;5437:2;5425:9;5416:7;5412:23;5408:32;5405:2;;;5453:1;5450;5443:12;5405:2;5496:1;5521:63;5576:7;5567:6;5556:9;5552:22;5521:63;:::i;:::-;5511:73;;5467:127;5395:206;;;;:::o;5607:262::-;;5715:2;5703:9;5694:7;5690:23;5686:32;5683:2;;;5731:1;5728;5721:12;5683:2;5774:1;5799:53;5844:7;5835:6;5824:9;5820:22;5799:53;:::i;:::-;5789:63;;5745:117;5673:196;;;;:::o;5875:118::-;5962:24;5980:5;5962:24;:::i;:::-;5957:3;5950:37;5940:53;;:::o;5999:109::-;6080:21;6095:5;6080:21;:::i;:::-;6075:3;6068:34;6058:50;;:::o;6114:360::-;;6228:38;6260:5;6228:38;:::i;:::-;6282:70;6345:6;6340:3;6282:70;:::i;:::-;6275:77;;6361:52;6406:6;6401:3;6394:4;6387:5;6383:16;6361:52;:::i;:::-;6438:29;6460:6;6438:29;:::i;:::-;6433:3;6429:39;6422:46;;6204:270;;;;;:::o;6480:364::-;;6596:39;6629:5;6596:39;:::i;:::-;6651:71;6715:6;6710:3;6651:71;:::i;:::-;6644:78;;6731:52;6776:6;6771:3;6764:4;6757:5;6753:16;6731:52;:::i;:::-;6808:29;6830:6;6808:29;:::i;:::-;6803:3;6799:39;6792:46;;6572:272;;;;;:::o;6850:118::-;6937:24;6955:5;6937:24;:::i;:::-;6932:3;6925:37;6915:53;;:::o;6974:222::-;;7105:2;7094:9;7090:18;7082:26;;7118:71;7186:1;7175:9;7171:17;7162:6;7118:71;:::i;:::-;7072:124;;;;:::o;7202:640::-;;7435:3;7424:9;7420:19;7412:27;;7449:71;7517:1;7506:9;7502:17;7493:6;7449:71;:::i;:::-;7530:72;7598:2;7587:9;7583:18;7574:6;7530:72;:::i;:::-;7612;7680:2;7669:9;7665:18;7656:6;7612:72;:::i;:::-;7731:9;7725:4;7721:20;7716:2;7705:9;7701:18;7694:48;7759:76;7830:4;7821:6;7759:76;:::i;:::-;7751:84;;7402:440;;;;;;;:::o;7848:210::-;;7973:2;7962:9;7958:18;7950:26;;7986:65;8048:1;8037:9;8033:17;8024:6;7986:65;:::i;:::-;7940:118;;;;:::o;8064:313::-;;8215:2;8204:9;8200:18;8192:26;;8264:9;8258:4;8254:20;8250:1;8239:9;8235:17;8228:47;8292:78;8365:4;8356:6;8292:78;:::i;:::-;8284:86;;8182:195;;;;:::o;8383:222::-;;8514:2;8503:9;8499:18;8491:26;;8527:71;8595:1;8584:9;8580:17;8571:6;8527:71;:::i;:::-;8481:124;;;;:::o;8611:98::-;;8696:5;8690:12;8680:22;;8669:40;;;:::o;8715:99::-;;8801:5;8795:12;8785:22;;8774:40;;;:::o;8820:168::-;;8937:6;8932:3;8925:19;8977:4;8972:3;8968:14;8953:29;;8915:73;;;;:::o;8994:169::-;;9112:6;9107:3;9100:19;9152:4;9147:3;9143:14;9128:29;;9090:73;;;;:::o;9169:191::-;;9229:20;9247:1;9229:20;:::i;:::-;9224:25;;9263:20;9281:1;9263:20;:::i;:::-;9258:25;;9302:1;9299;9296:8;9293:2;;;9307:18;;:::i;:::-;9293:2;9352:1;9349;9345:9;9337:17;;9214:146;;;;:::o;9366:96::-;;9432:24;9450:5;9432:24;:::i;:::-;9421:35;;9411:51;;;:::o;9468:90::-;;9545:5;9538:13;9531:21;9520:32;;9510:48;;;:::o;9564:149::-;;9640:66;9633:5;9629:78;9618:89;;9608:105;;;:::o;9719:126::-;;9796:42;9789:5;9785:54;9774:65;;9764:81;;;:::o;9851:77::-;;9917:5;9906:16;;9896:32;;;:::o;9934:307::-;10002:1;10012:113;10026:6;10023:1;10020:13;10012:113;;;10111:1;10106:3;10102:11;10096:18;10092:1;10087:3;10083:11;10076:39;10048:2;10045:1;10041:10;10036:15;;10012:113;;;10143:6;10140:1;10137:13;10134:2;;;10223:1;10214:6;10209:3;10205:16;10198:27;10134:2;9983:258;;;;:::o;10247:320::-;;10328:1;10322:4;10318:12;10308:22;;10375:1;10369:4;10365:12;10396:18;10386:2;;10452:4;10444:6;10440:17;10430:27;;10386:2;10514;10506:6;10503:14;10483:18;10480:38;10477:2;;;10533:18;;:::i;:::-;10477:2;10298:269;;;;:::o;10573:180::-;10621:77;10618:1;10611:88;10718:4;10715:1;10708:15;10742:4;10739:1;10732:15;10759:180;10807:77;10804:1;10797:88;10904:4;10901:1;10894:15;10928:4;10925:1;10918:15;10945:102;;11037:2;11033:7;11028:2;11021:5;11017:14;11013:28;11003:38;;10993:54;;;:::o;11053:122::-;11126:24;11144:5;11126:24;:::i;:::-;11119:5;11116:35;11106:2;;11165:1;11162;11155:12;11106:2;11096:79;:::o;11181:116::-;11251:21;11266:5;11251:21;:::i;:::-;11244:5;11241:32;11231:2;;11287:1;11284;11277:12;11231:2;11221:76;:::o;11303:120::-;11375:23;11392:5;11375:23;:::i;:::-;11368:5;11365:34;11355:2;;11413:1;11410;11403:12;11355:2;11345:78;:::o;11429:122::-;11502:24;11520:5;11502:24;:::i;:::-;11495:5;11492:35;11482:2;;11541:1;11538;11531:12;11482:2;11472:79;:::o",
>>>>>>> Stashed changes
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.0;\n\nimport \"../tokens/nf-token-metadata.sol\";\nimport \"../tokens/nf-token-enumerable.sol\";\nimport \"../ownership/ownable.sol\";\n\n/**\n * @dev This is an example contract implementation of NFToken with enumerable and metadata\n * extensions.\n */\ncontract NFTokenMetadataEnumerableMock is\n  NFTokenEnumerable,\n  NFTokenMetadata,\n  Ownable\n{\n\n  /**\n   * @dev Contract constructor.\n   * @param _name A descriptive name for a collection of NFTs.\n   * @param _symbol An abbreviated name for NFTokens.\n   */\n  constructor(\n    string memory _name,\n    string memory _symbol\n  )\n  {\n    nftName = _name;\n    nftSymbol = _symbol;\n  }\n\n  /**\n   * @dev Mints a new NFT.\n   * @param _to The address that will own the minted NFT.\n   * @param _tokenId of the NFT to be minted by the msg.sender.\n   * @param _uri String representing RFC 3986 URI.\n   */\n  function mint(\n    address _to,\n    uint256 _tokenId,\n    string calldata _uri\n  )\n    external\n    onlyOwner\n  {\n    super._mint(_to, _tokenId);\n    super._setTokenUri(_tokenId, _uri);\n  }\n\n  /**\n   * @dev Removes a NFT from owner.\n   * @param _tokenId Which NFT we want to remove.\n   */\n  function burn(\n    uint256 _tokenId\n  )\n    external\n    onlyOwner\n  {\n    super._burn(_tokenId);\n  }\n\n  /**\n   * @dev Mints a new NFT.\n   * @notice This is an internal function which should be called from user-implemented external\n   * mint function. Its purpose is to show and properly initialize data structures when using this\n   * implementation.\n   * @param _to The address that will own the minted NFT.\n   * @param _tokenId of the NFT to be minted by the msg.sender.\n   */\n  function _mint(\n    address _to,\n    uint256 _tokenId\n  )\n    internal\n    override(NFToken, NFTokenEnumerable)\n    virtual\n  {\n    NFTokenEnumerable._mint(_to, _tokenId);\n  }\n\n  /**\n   * @dev Burns a NFT.\n   * @notice This is an internal function which should be called from user-implemented external\n   * burn function. Its purpose is to show and properly initialize data structures when using this\n   * implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n   * NFT.\n   * @param _tokenId ID of the NFT to be burned.\n   */\n  function _burn(\n    uint256 _tokenId\n  )\n    internal\n    override(NFTokenMetadata, NFTokenEnumerable)\n    virtual\n  {\n    NFTokenEnumerable._burn(_tokenId);\n    if (bytes(idToUri[_tokenId]).length != 0)\n    {\n      delete idToUri[_tokenId];\n    }\n  }\n\n  /**\n   * @dev Removes a NFT from an address.\n   * @notice Use and override this function with caution. Wrong usage can have serious consequences.\n   * @param _from Address from wich we want to remove the NFT.\n   * @param _tokenId Which NFT we want to remove.\n   */\n  function _removeNFToken(\n    address _from,\n    uint256 _tokenId\n  )\n    internal\n    override(NFToken, NFTokenEnumerable)\n  {\n    NFTokenEnumerable._removeNFToken(_from, _tokenId);\n  }\n\n  /**\n   * @dev Assignes a new NFT to an address.\n   * @notice Use and override this function with caution. Wrong usage can have serious consequences.\n   * @param _to Address to wich we want to add the NFT.\n   * @param _tokenId Which NFT we want to add.\n   */\n  function _addNFToken(\n    address _to,\n    uint256 _tokenId\n  )\n    internal\n    override(NFToken, NFTokenEnumerable)\n  {\n    NFTokenEnumerable._addNFToken(_to, _tokenId);\n  }\n\n   /**\n   * @dev Helper function that gets NFT count of owner. This is needed for overriding in enumerable\n   * extension to remove double storage(gas optimization) of owner nft count.\n   * @param _owner Address for whom to query the count.\n   * @return Number of _owner NFTs.\n   */\n  function _getOwnerNFTCount(\n    address _owner\n  )\n    internal\n    override(NFToken, NFTokenEnumerable)\n    view\n    returns (uint256)\n  {\n    return NFTokenEnumerable._getOwnerNFTCount(_owner);\n  }\n\n}\n",
  "sourcePath": "/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/mocks/nf-token-metadata-enumerable-mock.sol",
  "ast": {
    "absolutePath": "/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/mocks/nf-token-metadata-enumerable-mock.sol",
    "exportedSymbols": {
      "AddressUtils": [
<<<<<<< Updated upstream
        3241
      ],
      "ERC165": [
        3253
      ],
      "ERC721": [
        1963
      ],
      "ERC721Enumerable": [
        1808
      ],
      "ERC721Metadata": [
        1832
      ],
      "ERC721TokenReceiver": [
        1850
      ],
      "NFToken": [
        3209
      ],
      "NFTokenEnumerable": [
        2290
      ],
      "NFTokenMetadata": [
        2467
      ],
      "NFTokenMetadataEnumerableMock": [
        1611
      ],
      "Ownable": [
        1780
      ],
      "SupportsInterface": [
        3290
      ]
    },
    "id": 1612,
=======
        1992
      ],
      "ERC165": [
        2004
      ],
      "ERC721": [
        794
      ],
      "ERC721Enumerable": [
        639
      ],
      "ERC721Metadata": [
        663
      ],
      "ERC721TokenReceiver": [
        681
      ],
      "NFToken": [
        1960
      ],
      "NFTokenEnumerable": [
        1121
      ],
      "NFTokenMetadata": [
        1272
      ],
      "NFTokenMetadataEnumerableMock": [
        442
      ],
      "Ownable": [
        611
      ],
      "SupportsInterface": [
        2041
      ]
    },
    "id": 443,
>>>>>>> Stashed changes
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< Updated upstream
        "id": 1435,
=======
        "id": 266,
>>>>>>> Stashed changes
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:3"
      },
      {
        "absolutePath": "/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/nf-token-metadata.sol",
        "file": "../tokens/nf-token-metadata.sol",
<<<<<<< Updated upstream
        "id": 1436,
        "nodeType": "ImportDirective",
        "scope": 1612,
        "sourceUnit": 2468,
=======
        "id": 267,
        "nodeType": "ImportDirective",
        "scope": 443,
        "sourceUnit": 1273,
>>>>>>> Stashed changes
        "src": "56:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/nf-token-enumerable.sol",
        "file": "../tokens/nf-token-enumerable.sol",
<<<<<<< Updated upstream
        "id": 1437,
        "nodeType": "ImportDirective",
        "scope": 1612,
        "sourceUnit": 2291,
=======
        "id": 268,
        "nodeType": "ImportDirective",
        "scope": 443,
        "sourceUnit": 1122,
>>>>>>> Stashed changes
        "src": "98:43:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/ownership/ownable.sol",
        "file": "../ownership/ownable.sol",
<<<<<<< Updated upstream
        "id": 1438,
        "nodeType": "ImportDirective",
        "scope": 1612,
        "sourceUnit": 1781,
=======
        "id": 269,
        "nodeType": "ImportDirective",
        "scope": 443,
        "sourceUnit": 612,
>>>>>>> Stashed changes
        "src": "142:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
<<<<<<< Updated upstream
              "id": 1440,
              "name": "NFTokenEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2290,
              "src": "336:17:3"
            },
            "id": 1441,
=======
              "id": 271,
              "name": "NFTokenEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1121,
              "src": "336:17:3"
            },
            "id": 272,
>>>>>>> Stashed changes
            "nodeType": "InheritanceSpecifier",
            "src": "336:17:3"
          },
          {
            "baseName": {
<<<<<<< Updated upstream
              "id": 1442,
              "name": "NFTokenMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2467,
              "src": "357:15:3"
            },
            "id": 1443,
=======
              "id": 273,
              "name": "NFTokenMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1272,
              "src": "357:15:3"
            },
            "id": 274,
>>>>>>> Stashed changes
            "nodeType": "InheritanceSpecifier",
            "src": "357:15:3"
          },
          {
            "baseName": {
<<<<<<< Updated upstream
              "id": 1444,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1780,
              "src": "376:7:3"
            },
            "id": 1445,
=======
              "id": 275,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 611,
              "src": "376:7:3"
            },
            "id": 276,
>>>>>>> Stashed changes
            "nodeType": "InheritanceSpecifier",
            "src": "376:7:3"
          }
        ],
        "contractDependencies": [
<<<<<<< Updated upstream
          1780,
          1808,
          1832,
          1963,
          2290,
          2467,
          3209,
          3253,
          3290
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1439,
=======
          611,
          639,
          663,
          794,
          1121,
          1272,
          1960,
          2004,
          2041
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 270,
>>>>>>> Stashed changes
          "nodeType": "StructuredDocumentation",
          "src": "178:113:3",
          "text": " @dev This is an example contract implementation of NFToken with enumerable and metadata\n extensions."
        },
        "fullyImplemented": true,
<<<<<<< Updated upstream
        "id": 1611,
        "linearizedBaseContracts": [
          1611,
          1780,
          2467,
          1832,
          2290,
          1808,
          3209,
          3290,
          3253,
          1963
=======
        "id": 442,
        "linearizedBaseContracts": [
          442,
          611,
          1272,
          663,
          1121,
          639,
          1960,
          2041,
          2004,
          794
>>>>>>> Stashed changes
        ],
        "name": "NFTokenMetadataEnumerableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
<<<<<<< Updated upstream
              "id": 1461,
=======
              "id": 292,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "620:51:3",
              "statements": [
                {
                  "expression": {
<<<<<<< Updated upstream
                    "id": 1455,
=======
                    "id": 286,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< Updated upstream
                      "id": 1453,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2302,
=======
                      "id": 284,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1133,
>>>>>>> Stashed changes
                      "src": "626:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< Updated upstream
                      "id": 1454,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1448,
=======
                      "id": 285,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
>>>>>>> Stashed changes
                      "src": "636:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "626:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1456,
=======
                  "id": 287,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "626:15:3"
                },
                {
                  "expression": {
<<<<<<< Updated upstream
                    "id": 1459,
=======
                    "id": 290,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< Updated upstream
                      "id": 1457,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2305,
=======
                      "id": 288,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1136,
>>>>>>> Stashed changes
                      "src": "647:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< Updated upstream
                      "id": 1458,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1450,
=======
                      "id": 289,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 281,
>>>>>>> Stashed changes
                      "src": "659:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "647:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1460,
=======
                  "id": 291,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "647:19:3"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 1446,
=======
              "id": 277,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "389:158:3",
              "text": " @dev Contract constructor.\n @param _name A descriptive name for a collection of NFTs.\n @param _symbol An abbreviated name for NFTokens."
            },
<<<<<<< Updated upstream
            "id": 1462,
=======
            "id": 293,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< Updated upstream
              "id": 1451,
=======
              "id": 282,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1448,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1462,
=======
                  "id": 279,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
>>>>>>> Stashed changes
                  "src": "567:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1447,
=======
                    "id": 278,
>>>>>>> Stashed changes
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1450,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1462,
=======
                  "id": 281,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
>>>>>>> Stashed changes
                  "src": "592:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1449,
=======
                    "id": 280,
>>>>>>> Stashed changes
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "561:56:3"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 1452,
=======
              "id": 283,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "620:0:3"
            },
<<<<<<< Updated upstream
            "scope": 1611,
=======
            "scope": 442,
>>>>>>> Stashed changes
            "src": "550:121:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< Updated upstream
              "id": 1488,
=======
              "id": 319,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "999:77:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 1477,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1465,
=======
                        "id": 308,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
>>>>>>> Stashed changes
                        "src": "1017:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< Updated upstream
                        "id": 1478,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1467,
=======
                        "id": 309,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
>>>>>>> Stashed changes
                        "src": "1022:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 1474,
=======
                        "id": 305,
>>>>>>> Stashed changes
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1005:5:3",
                        "typeDescriptions": {
<<<<<<< Updated upstream
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$1611_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 1476,
=======
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$442_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 307,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 2100,
=======
                      "referencedDeclaration": 931,
>>>>>>> Stashed changes
                      "src": "1005:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 1479,
=======
                    "id": 310,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1005:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1480,
=======
                  "id": 311,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "1005:26:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 1484,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1467,
=======
                        "id": 315,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
>>>>>>> Stashed changes
                        "src": "1056:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
<<<<<<< Updated upstream
                        "id": 1485,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1469,
=======
                        "id": 316,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
>>>>>>> Stashed changes
                        "src": "1066:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 1481,
=======
                        "id": 312,
>>>>>>> Stashed changes
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1037:5:3",
                        "typeDescriptions": {
<<<<<<< Updated upstream
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$1611_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 1483,
=======
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$442_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 314,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setTokenUri",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 2440,
=======
                      "referencedDeclaration": 1271,
>>>>>>> Stashed changes
                      "src": "1037:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 1486,
=======
                    "id": 317,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1037:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1487,
=======
                  "id": 318,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "1037:34:3"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 1463,
=======
              "id": 294,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "675:209:3",
              "text": " @dev Mints a new NFT.\n @param _to The address that will own the minted NFT.\n @param _tokenId of the NFT to be minted by the msg.sender.\n @param _uri String representing RFC 3986 URI."
            },
            "functionSelector": "d3fc9864",
<<<<<<< Updated upstream
            "id": 1489,
=======
            "id": 320,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< Updated upstream
                "id": 1472,
                "modifierName": {
                  "id": 1471,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1751,
=======
                "id": 303,
                "modifierName": {
                  "id": 302,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 582,
>>>>>>> Stashed changes
                  "src": "987:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "987:9:3"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< Updated upstream
              "id": 1470,
=======
              "id": 301,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1465,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1489,
=======
                  "id": 296,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
>>>>>>> Stashed changes
                  "src": "906:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1464,
=======
                    "id": 295,
>>>>>>> Stashed changes
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1467,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1489,
=======
                  "id": 298,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
>>>>>>> Stashed changes
                  "src": "923:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1466,
=======
                    "id": 297,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1469,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 1489,
=======
                  "id": 300,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
>>>>>>> Stashed changes
                  "src": "945:20:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1468,
=======
                    "id": 299,
>>>>>>> Stashed changes
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "945:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "900:69:3"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 1473,
=======
              "id": 304,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "999:0:3"
            },
<<<<<<< Updated upstream
            "scope": 1611,
=======
            "scope": 442,
>>>>>>> Stashed changes
            "src": "887:189:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
<<<<<<< Updated upstream
              "id": 1503,
=======
              "id": 334,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "1247:32:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 1500,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1492,
=======
                        "id": 331,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
>>>>>>> Stashed changes
                        "src": "1265:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 1497,
=======
                        "id": 328,
>>>>>>> Stashed changes
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1253:5:3",
                        "typeDescriptions": {
<<<<<<< Updated upstream
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$1611_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 1499,
=======
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$442_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 330,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 2422,
=======
                      "referencedDeclaration": 1253,
>>>>>>> Stashed changes
                      "src": "1253:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 1501,
=======
                    "id": 332,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1253:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1502,
=======
                  "id": 333,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "1253:21:3"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 1490,
=======
              "id": 321,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "1080:95:3",
              "text": " @dev Removes a NFT from owner.\n @param _tokenId Which NFT we want to remove."
            },
            "functionSelector": "42966c68",
<<<<<<< Updated upstream
            "id": 1504,
=======
            "id": 335,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< Updated upstream
                "id": 1495,
                "modifierName": {
                  "id": 1494,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1751,
=======
                "id": 326,
                "modifierName": {
                  "id": 325,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 582,
>>>>>>> Stashed changes
                  "src": "1235:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1235:9:3"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< Updated upstream
              "id": 1493,
=======
              "id": 324,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1492,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1504,
=======
                  "id": 323,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
>>>>>>> Stashed changes
                  "src": "1197:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1491,
=======
                    "id": 322,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1191:26:3"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 1496,
=======
              "id": 327,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1247:0:3"
            },
<<<<<<< Updated upstream
            "scope": 1611,
=======
            "scope": 442,
>>>>>>> Stashed changes
            "src": "1178:101:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              2100,
              2997
            ],
            "body": {
              "id": 1522,
=======
              931,
              1748
            ],
            "body": {
              "id": 353,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "1786:49:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 1518,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1507,
=======
                        "id": 349,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 338,
>>>>>>> Stashed changes
                        "src": "1816:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< Updated upstream
                        "id": 1519,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1509,
=======
                        "id": 350,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
>>>>>>> Stashed changes
                        "src": "1821:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 1515,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2290,
                        "src": "1792:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$2290_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 1517,
=======
                        "id": 346,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "1792:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1121_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 348,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 2100,
=======
                      "referencedDeclaration": 931,
>>>>>>> Stashed changes
                      "src": "1792:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 1520,
=======
                    "id": 351,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1792:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1521,
=======
                  "id": 352,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "1792:38:3"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 1505,
=======
              "id": 336,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "1283:374:3",
              "text": " @dev Mints a new NFT.\n @notice This is an internal function which should be called from user-implemented external\n mint function. Its purpose is to show and properly initialize data structures when using this\n implementation.\n @param _to The address that will own the minted NFT.\n @param _tokenId of the NFT to be minted by the msg.sender."
            },
<<<<<<< Updated upstream
            "id": 1523,
=======
            "id": 354,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 1513,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1511,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3209,
                  "src": "1744:7:3"
                },
                {
                  "id": 1512,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2290,
=======
              "id": 344,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 342,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1960,
                  "src": "1744:7:3"
                },
                {
                  "id": 343,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1121,
>>>>>>> Stashed changes
                  "src": "1753:17:3"
                }
              ],
              "src": "1735:36:3"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 1510,
=======
              "id": 341,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1507,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1523,
=======
                  "id": 338,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
>>>>>>> Stashed changes
                  "src": "1680:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1506,
=======
                    "id": 337,
>>>>>>> Stashed changes
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1680:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1509,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1523,
=======
                  "id": 340,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
>>>>>>> Stashed changes
                  "src": "1697:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1508,
=======
                    "id": 339,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1697:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1674:43:3"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 1514,
=======
              "id": 345,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1786:0:3"
            },
<<<<<<< Updated upstream
            "scope": 1611,
=======
            "scope": 442,
>>>>>>> Stashed changes
            "src": "1660:175:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              2156,
              2422
            ],
            "body": {
              "id": 1554,
=======
              987,
              1253
            ],
            "body": {
              "id": 385,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "2345:134:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 1535,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1526,
=======
                        "id": 366,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
>>>>>>> Stashed changes
                        "src": "2375:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 1532,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2290,
                        "src": "2351:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$2290_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 1534,
=======
                        "id": 363,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "2351:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1121_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 365,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 2156,
=======
                      "referencedDeclaration": 987,
>>>>>>> Stashed changes
                      "src": "2351:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 1536,
=======
                    "id": 367,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2351:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1537,
=======
                  "id": 368,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "2351:33:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< Updated upstream
                    "id": 1546,
=======
                    "id": 377,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
<<<<<<< Updated upstream
                              "id": 1540,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2310,
=======
                              "id": 371,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1141,
>>>>>>> Stashed changes
                              "src": "2400:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
<<<<<<< Updated upstream
                            "id": 1542,
                            "indexExpression": {
                              "id": 1541,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1526,
=======
                            "id": 373,
                            "indexExpression": {
                              "id": 372,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
>>>>>>> Stashed changes
                              "src": "2408:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2400:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
<<<<<<< Updated upstream
                          "id": 1539,
=======
                          "id": 370,
>>>>>>> Stashed changes
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2394:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
<<<<<<< Updated upstream
                            "id": 1538,
=======
                            "id": 369,
>>>>>>> Stashed changes
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2394:5:3",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< Updated upstream
                        "id": 1543,
=======
                        "id": 374,
>>>>>>> Stashed changes
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2394:24:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
<<<<<<< Updated upstream
                      "id": 1544,
=======
                      "id": 375,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2394:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
<<<<<<< Updated upstream
                      "id": 1545,
=======
                      "id": 376,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2429:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2394:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1553,
                  "nodeType": "IfStatement",
                  "src": "2390:85:3",
                  "trueBody": {
                    "id": 1552,
=======
                  "id": 384,
                  "nodeType": "IfStatement",
                  "src": "2390:85:3",
                  "trueBody": {
                    "id": 383,
>>>>>>> Stashed changes
                    "nodeType": "Block",
                    "src": "2436:39:3",
                    "statements": [
                      {
                        "expression": {
<<<<<<< Updated upstream
                          "id": 1550,
=======
                          "id": 381,
>>>>>>> Stashed changes
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2444:24:3",
                          "subExpression": {
                            "baseExpression": {
<<<<<<< Updated upstream
                              "id": 1547,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2310,
=======
                              "id": 378,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1141,
>>>>>>> Stashed changes
                              "src": "2451:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
<<<<<<< Updated upstream
                            "id": 1549,
                            "indexExpression": {
                              "id": 1548,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1526,
=======
                            "id": 380,
                            "indexExpression": {
                              "id": 379,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
>>>>>>> Stashed changes
                              "src": "2459:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2451:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
<<<<<<< Updated upstream
                        "id": 1551,
=======
                        "id": 382,
>>>>>>> Stashed changes
                        "nodeType": "ExpressionStatement",
                        "src": "2444:24:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 1524,
=======
              "id": 355,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "1839:386:3",
              "text": " @dev Burns a NFT.\n @notice This is an internal function which should be called from user-implemented external\n burn function. Its purpose is to show and properly initialize data structures when using this\n implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n NFT.\n @param _tokenId ID of the NFT to be burned."
            },
<<<<<<< Updated upstream
            "id": 1555,
=======
            "id": 386,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 1530,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1528,
                  "name": "NFTokenMetadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2467,
                  "src": "2295:15:3"
                },
                {
                  "id": 1529,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2290,
=======
              "id": 361,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 359,
                  "name": "NFTokenMetadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1272,
                  "src": "2295:15:3"
                },
                {
                  "id": 360,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1121,
>>>>>>> Stashed changes
                  "src": "2312:17:3"
                }
              ],
              "src": "2286:44:3"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 1527,
=======
              "id": 358,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1526,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1555,
=======
                  "id": 357,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
>>>>>>> Stashed changes
                  "src": "2248:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1525,
=======
                    "id": 356,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2242:26:3"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 1531,
=======
              "id": 362,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2345:0:3"
            },
<<<<<<< Updated upstream
            "scope": 1611,
=======
            "scope": 442,
>>>>>>> Stashed changes
            "src": "2228:251:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              2228,
              3064
            ],
            "body": {
              "id": 1573,
=======
              1059,
              1815
            ],
            "body": {
              "id": 404,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "2875:60:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 1569,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1558,
=======
                        "id": 400,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
>>>>>>> Stashed changes
                        "src": "2914:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< Updated upstream
                        "id": 1570,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1560,
=======
                        "id": 401,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
>>>>>>> Stashed changes
                        "src": "2921:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 1566,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2290,
                        "src": "2881:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$2290_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 1568,
=======
                        "id": 397,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "2881:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1121_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 399,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_removeNFToken",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 2228,
=======
                      "referencedDeclaration": 1059,
>>>>>>> Stashed changes
                      "src": "2881:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 1571,
=======
                    "id": 402,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2881:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1572,
=======
                  "id": 403,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "2881:49:3"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 1556,
=======
              "id": 387,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "2483:264:3",
              "text": " @dev Removes a NFT from an address.\n @notice Use and override this function with caution. Wrong usage can have serious consequences.\n @param _from Address from wich we want to remove the NFT.\n @param _tokenId Which NFT we want to remove."
            },
<<<<<<< Updated upstream
            "id": 1574,
=======
            "id": 405,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeNFToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 1564,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1562,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3209,
                  "src": "2845:7:3"
                },
                {
                  "id": 1563,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2290,
=======
              "id": 395,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 393,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1960,
                  "src": "2845:7:3"
                },
                {
                  "id": 394,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1121,
>>>>>>> Stashed changes
                  "src": "2854:17:3"
                }
              ],
              "src": "2836:36:3"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 1561,
=======
              "id": 392,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1558,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
=======
                  "id": 389,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
>>>>>>> Stashed changes
                  "src": "2779:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1557,
=======
                    "id": 388,
>>>>>>> Stashed changes
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2779:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1560,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
=======
                  "id": 391,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
>>>>>>> Stashed changes
                  "src": "2798:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1559,
=======
                    "id": 390,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2798:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2773:45:3"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 1565,
=======
              "id": 396,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2875:0:3"
            },
<<<<<<< Updated upstream
            "scope": 1611,
=======
            "scope": 442,
>>>>>>> Stashed changes
            "src": "2750:185:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              2274,
              3101
            ],
            "body": {
              "id": 1592,
=======
              1105,
              1852
            ],
            "body": {
              "id": 423,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "3319:55:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 1588,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1577,
=======
                        "id": 419,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
>>>>>>> Stashed changes
                        "src": "3355:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< Updated upstream
                        "id": 1589,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1579,
=======
                        "id": 420,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 410,
>>>>>>> Stashed changes
                        "src": "3360:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 1585,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2290,
                        "src": "3325:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$2290_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 1587,
=======
                        "id": 416,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "3325:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1121_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 418,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addNFToken",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 2274,
=======
                      "referencedDeclaration": 1105,
>>>>>>> Stashed changes
                      "src": "3325:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 1590,
=======
                    "id": 421,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3325:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1591,
=======
                  "id": 422,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "3325:44:3"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 1575,
=======
              "id": 406,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "2939:257:3",
              "text": " @dev Assignes a new NFT to an address.\n @notice Use and override this function with caution. Wrong usage can have serious consequences.\n @param _to Address to wich we want to add the NFT.\n @param _tokenId Which NFT we want to add."
            },
<<<<<<< Updated upstream
            "id": 1593,
=======
            "id": 424,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addNFToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 1583,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1581,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3209,
                  "src": "3289:7:3"
                },
                {
                  "id": 1582,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2290,
=======
              "id": 414,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 412,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1960,
                  "src": "3289:7:3"
                },
                {
                  "id": 413,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1121,
>>>>>>> Stashed changes
                  "src": "3298:17:3"
                }
              ],
              "src": "3280:36:3"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 1580,
=======
              "id": 411,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1577,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
=======
                  "id": 408,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 424,
>>>>>>> Stashed changes
                  "src": "3225:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1576,
=======
                    "id": 407,
>>>>>>> Stashed changes
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3225:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1579,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
=======
                  "id": 410,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 424,
>>>>>>> Stashed changes
                  "src": "3242:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1578,
=======
                    "id": 409,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3242:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3219:43:3"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 1584,
=======
              "id": 415,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3319:0:3"
            },
<<<<<<< Updated upstream
            "scope": 1611,
=======
            "scope": 442,
>>>>>>> Stashed changes
            "src": "3199:175:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              2289,
              3114
            ],
            "body": {
              "id": 1609,
=======
              1120,
              1865
            ],
            "body": {
              "id": 440,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "3800:61:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 1606,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
=======
                        "id": 437,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
>>>>>>> Stashed changes
                        "src": "3849:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 1604,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2290,
                        "src": "3813:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$2290_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 1605,
=======
                        "id": 435,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "3813:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1121_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 436,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getOwnerNFTCount",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 2289,
=======
                      "referencedDeclaration": 1120,
>>>>>>> Stashed changes
                      "src": "3813:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 1607,
=======
                    "id": 438,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3813:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< Updated upstream
                  "functionReturnParameters": 1603,
                  "id": 1608,
=======
                  "functionReturnParameters": 434,
                  "id": 439,
>>>>>>> Stashed changes
                  "nodeType": "Return",
                  "src": "3806:50:3"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 1594,
=======
              "id": 425,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "3379:280:3",
              "text": " @dev Helper function that gets NFT count of owner. This is needed for overriding in enumerable\n extension to remove double storage(gas optimization) of owner nft count.\n @param _owner Address for whom to query the count.\n @return Number of _owner NFTs."
            },
<<<<<<< Updated upstream
            "id": 1610,
=======
            "id": 441,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getOwnerNFTCount",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 1600,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1598,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3209,
                  "src": "3739:7:3"
                },
                {
                  "id": 1599,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2290,
=======
              "id": 431,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 429,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1960,
                  "src": "3739:7:3"
                },
                {
                  "id": 430,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1121,
>>>>>>> Stashed changes
                  "src": "3748:17:3"
                }
              ],
              "src": "3730:36:3"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 1597,
=======
              "id": 428,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1596,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1610,
=======
                  "id": 427,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
>>>>>>> Stashed changes
                  "src": "3694:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1595,
=======
                    "id": 426,
>>>>>>> Stashed changes
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3694:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3688:24:3"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 1603,
=======
              "id": 434,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1602,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1610,
=======
                  "id": 433,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
>>>>>>> Stashed changes
                  "src": "3789:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1601,
=======
                    "id": 432,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3789:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3788:9:3"
            },
<<<<<<< Updated upstream
            "scope": 1611,
=======
            "scope": 442,
>>>>>>> Stashed changes
            "src": "3662:199:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< Updated upstream
        "scope": 1612,
=======
        "scope": 443,
>>>>>>> Stashed changes
        "src": "292:3572:3"
      }
    ],
    "src": "32:3833:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/mocks/nf-token-metadata-enumerable-mock.sol",
    "exportedSymbols": {
      "AddressUtils": [
<<<<<<< Updated upstream
        3241
      ],
      "ERC165": [
        3253
      ],
      "ERC721": [
        1963
      ],
      "ERC721Enumerable": [
        1808
      ],
      "ERC721Metadata": [
        1832
      ],
      "ERC721TokenReceiver": [
        1850
      ],
      "NFToken": [
        3209
      ],
      "NFTokenEnumerable": [
        2290
      ],
      "NFTokenMetadata": [
        2467
      ],
      "NFTokenMetadataEnumerableMock": [
        1611
      ],
      "Ownable": [
        1780
      ],
      "SupportsInterface": [
        3290
      ]
    },
    "id": 1612,
=======
        1992
      ],
      "ERC165": [
        2004
      ],
      "ERC721": [
        794
      ],
      "ERC721Enumerable": [
        639
      ],
      "ERC721Metadata": [
        663
      ],
      "ERC721TokenReceiver": [
        681
      ],
      "NFToken": [
        1960
      ],
      "NFTokenEnumerable": [
        1121
      ],
      "NFTokenMetadata": [
        1272
      ],
      "NFTokenMetadataEnumerableMock": [
        442
      ],
      "Ownable": [
        611
      ],
      "SupportsInterface": [
        2041
      ]
    },
    "id": 443,
>>>>>>> Stashed changes
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< Updated upstream
        "id": 1435,
=======
        "id": 266,
>>>>>>> Stashed changes
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:3"
      },
      {
        "absolutePath": "/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/nf-token-metadata.sol",
        "file": "../tokens/nf-token-metadata.sol",
<<<<<<< Updated upstream
        "id": 1436,
        "nodeType": "ImportDirective",
        "scope": 1612,
        "sourceUnit": 2468,
=======
        "id": 267,
        "nodeType": "ImportDirective",
        "scope": 443,
        "sourceUnit": 1273,
>>>>>>> Stashed changes
        "src": "56:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/nf-token-enumerable.sol",
        "file": "../tokens/nf-token-enumerable.sol",
<<<<<<< Updated upstream
        "id": 1437,
        "nodeType": "ImportDirective",
        "scope": 1612,
        "sourceUnit": 2291,
=======
        "id": 268,
        "nodeType": "ImportDirective",
        "scope": 443,
        "sourceUnit": 1122,
>>>>>>> Stashed changes
        "src": "98:43:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/ownership/ownable.sol",
        "file": "../ownership/ownable.sol",
<<<<<<< Updated upstream
        "id": 1438,
        "nodeType": "ImportDirective",
        "scope": 1612,
        "sourceUnit": 1781,
=======
        "id": 269,
        "nodeType": "ImportDirective",
        "scope": 443,
        "sourceUnit": 612,
>>>>>>> Stashed changes
        "src": "142:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
<<<<<<< Updated upstream
              "id": 1440,
              "name": "NFTokenEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2290,
              "src": "336:17:3"
            },
            "id": 1441,
=======
              "id": 271,
              "name": "NFTokenEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1121,
              "src": "336:17:3"
            },
            "id": 272,
>>>>>>> Stashed changes
            "nodeType": "InheritanceSpecifier",
            "src": "336:17:3"
          },
          {
            "baseName": {
<<<<<<< Updated upstream
              "id": 1442,
              "name": "NFTokenMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2467,
              "src": "357:15:3"
            },
            "id": 1443,
=======
              "id": 273,
              "name": "NFTokenMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1272,
              "src": "357:15:3"
            },
            "id": 274,
>>>>>>> Stashed changes
            "nodeType": "InheritanceSpecifier",
            "src": "357:15:3"
          },
          {
            "baseName": {
<<<<<<< Updated upstream
              "id": 1444,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1780,
              "src": "376:7:3"
            },
            "id": 1445,
=======
              "id": 275,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 611,
              "src": "376:7:3"
            },
            "id": 276,
>>>>>>> Stashed changes
            "nodeType": "InheritanceSpecifier",
            "src": "376:7:3"
          }
        ],
        "contractDependencies": [
<<<<<<< Updated upstream
          1780,
          1808,
          1832,
          1963,
          2290,
          2467,
          3209,
          3253,
          3290
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1439,
=======
          611,
          639,
          663,
          794,
          1121,
          1272,
          1960,
          2004,
          2041
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 270,
>>>>>>> Stashed changes
          "nodeType": "StructuredDocumentation",
          "src": "178:113:3",
          "text": " @dev This is an example contract implementation of NFToken with enumerable and metadata\n extensions."
        },
        "fullyImplemented": true,
<<<<<<< Updated upstream
        "id": 1611,
        "linearizedBaseContracts": [
          1611,
          1780,
          2467,
          1832,
          2290,
          1808,
          3209,
          3290,
          3253,
          1963
=======
        "id": 442,
        "linearizedBaseContracts": [
          442,
          611,
          1272,
          663,
          1121,
          639,
          1960,
          2041,
          2004,
          794
>>>>>>> Stashed changes
        ],
        "name": "NFTokenMetadataEnumerableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
<<<<<<< Updated upstream
              "id": 1461,
=======
              "id": 292,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "620:51:3",
              "statements": [
                {
                  "expression": {
<<<<<<< Updated upstream
                    "id": 1455,
=======
                    "id": 286,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< Updated upstream
                      "id": 1453,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2302,
=======
                      "id": 284,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1133,
>>>>>>> Stashed changes
                      "src": "626:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< Updated upstream
                      "id": 1454,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1448,
=======
                      "id": 285,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
>>>>>>> Stashed changes
                      "src": "636:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "626:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1456,
=======
                  "id": 287,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "626:15:3"
                },
                {
                  "expression": {
<<<<<<< Updated upstream
                    "id": 1459,
=======
                    "id": 290,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< Updated upstream
                      "id": 1457,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2305,
=======
                      "id": 288,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1136,
>>>>>>> Stashed changes
                      "src": "647:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< Updated upstream
                      "id": 1458,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1450,
=======
                      "id": 289,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 281,
>>>>>>> Stashed changes
                      "src": "659:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "647:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1460,
=======
                  "id": 291,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "647:19:3"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 1446,
=======
              "id": 277,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "389:158:3",
              "text": " @dev Contract constructor.\n @param _name A descriptive name for a collection of NFTs.\n @param _symbol An abbreviated name for NFTokens."
            },
<<<<<<< Updated upstream
            "id": 1462,
=======
            "id": 293,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< Updated upstream
              "id": 1451,
=======
              "id": 282,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1448,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1462,
=======
                  "id": 279,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
>>>>>>> Stashed changes
                  "src": "567:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1447,
=======
                    "id": 278,
>>>>>>> Stashed changes
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1450,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1462,
=======
                  "id": 281,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
>>>>>>> Stashed changes
                  "src": "592:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1449,
=======
                    "id": 280,
>>>>>>> Stashed changes
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "561:56:3"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 1452,
=======
              "id": 283,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "620:0:3"
            },
<<<<<<< Updated upstream
            "scope": 1611,
=======
            "scope": 442,
>>>>>>> Stashed changes
            "src": "550:121:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< Updated upstream
              "id": 1488,
=======
              "id": 319,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "999:77:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 1477,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1465,
=======
                        "id": 308,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
>>>>>>> Stashed changes
                        "src": "1017:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< Updated upstream
                        "id": 1478,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1467,
=======
                        "id": 309,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
>>>>>>> Stashed changes
                        "src": "1022:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 1474,
=======
                        "id": 305,
>>>>>>> Stashed changes
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1005:5:3",
                        "typeDescriptions": {
<<<<<<< Updated upstream
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$1611_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 1476,
=======
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$442_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 307,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 2100,
=======
                      "referencedDeclaration": 931,
>>>>>>> Stashed changes
                      "src": "1005:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 1479,
=======
                    "id": 310,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1005:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1480,
=======
                  "id": 311,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "1005:26:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 1484,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1467,
=======
                        "id": 315,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
>>>>>>> Stashed changes
                        "src": "1056:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
<<<<<<< Updated upstream
                        "id": 1485,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1469,
=======
                        "id": 316,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
>>>>>>> Stashed changes
                        "src": "1066:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 1481,
=======
                        "id": 312,
>>>>>>> Stashed changes
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1037:5:3",
                        "typeDescriptions": {
<<<<<<< Updated upstream
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$1611_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 1483,
=======
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$442_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 314,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setTokenUri",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 2440,
=======
                      "referencedDeclaration": 1271,
>>>>>>> Stashed changes
                      "src": "1037:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 1486,
=======
                    "id": 317,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1037:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1487,
=======
                  "id": 318,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "1037:34:3"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 1463,
=======
              "id": 294,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "675:209:3",
              "text": " @dev Mints a new NFT.\n @param _to The address that will own the minted NFT.\n @param _tokenId of the NFT to be minted by the msg.sender.\n @param _uri String representing RFC 3986 URI."
            },
            "functionSelector": "d3fc9864",
<<<<<<< Updated upstream
            "id": 1489,
=======
            "id": 320,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< Updated upstream
                "id": 1472,
                "modifierName": {
                  "id": 1471,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1751,
=======
                "id": 303,
                "modifierName": {
                  "id": 302,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 582,
>>>>>>> Stashed changes
                  "src": "987:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "987:9:3"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< Updated upstream
              "id": 1470,
=======
              "id": 301,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1465,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1489,
=======
                  "id": 296,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
>>>>>>> Stashed changes
                  "src": "906:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1464,
=======
                    "id": 295,
>>>>>>> Stashed changes
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1467,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1489,
=======
                  "id": 298,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
>>>>>>> Stashed changes
                  "src": "923:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1466,
=======
                    "id": 297,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1469,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 1489,
=======
                  "id": 300,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
>>>>>>> Stashed changes
                  "src": "945:20:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1468,
=======
                    "id": 299,
>>>>>>> Stashed changes
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "945:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "900:69:3"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 1473,
=======
              "id": 304,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "999:0:3"
            },
<<<<<<< Updated upstream
            "scope": 1611,
=======
            "scope": 442,
>>>>>>> Stashed changes
            "src": "887:189:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
<<<<<<< Updated upstream
              "id": 1503,
=======
              "id": 334,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "1247:32:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 1500,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1492,
=======
                        "id": 331,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
>>>>>>> Stashed changes
                        "src": "1265:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 1497,
=======
                        "id": 328,
>>>>>>> Stashed changes
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1253:5:3",
                        "typeDescriptions": {
<<<<<<< Updated upstream
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$1611_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 1499,
=======
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$442_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 330,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 2422,
=======
                      "referencedDeclaration": 1253,
>>>>>>> Stashed changes
                      "src": "1253:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 1501,
=======
                    "id": 332,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1253:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1502,
=======
                  "id": 333,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "1253:21:3"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 1490,
=======
              "id": 321,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "1080:95:3",
              "text": " @dev Removes a NFT from owner.\n @param _tokenId Which NFT we want to remove."
            },
            "functionSelector": "42966c68",
<<<<<<< Updated upstream
            "id": 1504,
=======
            "id": 335,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< Updated upstream
                "id": 1495,
                "modifierName": {
                  "id": 1494,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1751,
=======
                "id": 326,
                "modifierName": {
                  "id": 325,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 582,
>>>>>>> Stashed changes
                  "src": "1235:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1235:9:3"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< Updated upstream
              "id": 1493,
=======
              "id": 324,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1492,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1504,
=======
                  "id": 323,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
>>>>>>> Stashed changes
                  "src": "1197:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1491,
=======
                    "id": 322,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1191:26:3"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 1496,
=======
              "id": 327,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1247:0:3"
            },
<<<<<<< Updated upstream
            "scope": 1611,
=======
            "scope": 442,
>>>>>>> Stashed changes
            "src": "1178:101:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              2100,
              2997
            ],
            "body": {
              "id": 1522,
=======
              931,
              1748
            ],
            "body": {
              "id": 353,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "1786:49:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 1518,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1507,
=======
                        "id": 349,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 338,
>>>>>>> Stashed changes
                        "src": "1816:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< Updated upstream
                        "id": 1519,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1509,
=======
                        "id": 350,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
>>>>>>> Stashed changes
                        "src": "1821:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 1515,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2290,
                        "src": "1792:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$2290_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 1517,
=======
                        "id": 346,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "1792:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1121_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 348,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 2100,
=======
                      "referencedDeclaration": 931,
>>>>>>> Stashed changes
                      "src": "1792:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 1520,
=======
                    "id": 351,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1792:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1521,
=======
                  "id": 352,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "1792:38:3"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 1505,
=======
              "id": 336,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "1283:374:3",
              "text": " @dev Mints a new NFT.\n @notice This is an internal function which should be called from user-implemented external\n mint function. Its purpose is to show and properly initialize data structures when using this\n implementation.\n @param _to The address that will own the minted NFT.\n @param _tokenId of the NFT to be minted by the msg.sender."
            },
<<<<<<< Updated upstream
            "id": 1523,
=======
            "id": 354,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 1513,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1511,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3209,
                  "src": "1744:7:3"
                },
                {
                  "id": 1512,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2290,
=======
              "id": 344,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 342,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1960,
                  "src": "1744:7:3"
                },
                {
                  "id": 343,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1121,
>>>>>>> Stashed changes
                  "src": "1753:17:3"
                }
              ],
              "src": "1735:36:3"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 1510,
=======
              "id": 341,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1507,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1523,
=======
                  "id": 338,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
>>>>>>> Stashed changes
                  "src": "1680:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1506,
=======
                    "id": 337,
>>>>>>> Stashed changes
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1680:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1509,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1523,
=======
                  "id": 340,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
>>>>>>> Stashed changes
                  "src": "1697:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1508,
=======
                    "id": 339,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1697:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1674:43:3"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 1514,
=======
              "id": 345,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1786:0:3"
            },
<<<<<<< Updated upstream
            "scope": 1611,
=======
            "scope": 442,
>>>>>>> Stashed changes
            "src": "1660:175:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              2156,
              2422
            ],
            "body": {
              "id": 1554,
=======
              987,
              1253
            ],
            "body": {
              "id": 385,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "2345:134:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 1535,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1526,
=======
                        "id": 366,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
>>>>>>> Stashed changes
                        "src": "2375:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 1532,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2290,
                        "src": "2351:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$2290_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 1534,
=======
                        "id": 363,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "2351:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1121_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 365,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 2156,
=======
                      "referencedDeclaration": 987,
>>>>>>> Stashed changes
                      "src": "2351:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 1536,
=======
                    "id": 367,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2351:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1537,
=======
                  "id": 368,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "2351:33:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< Updated upstream
                    "id": 1546,
=======
                    "id": 377,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
<<<<<<< Updated upstream
                              "id": 1540,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2310,
=======
                              "id": 371,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1141,
>>>>>>> Stashed changes
                              "src": "2400:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
<<<<<<< Updated upstream
                            "id": 1542,
                            "indexExpression": {
                              "id": 1541,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1526,
=======
                            "id": 373,
                            "indexExpression": {
                              "id": 372,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
>>>>>>> Stashed changes
                              "src": "2408:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2400:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
<<<<<<< Updated upstream
                          "id": 1539,
=======
                          "id": 370,
>>>>>>> Stashed changes
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2394:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
<<<<<<< Updated upstream
                            "id": 1538,
=======
                            "id": 369,
>>>>>>> Stashed changes
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2394:5:3",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< Updated upstream
                        "id": 1543,
=======
                        "id": 374,
>>>>>>> Stashed changes
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2394:24:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
<<<<<<< Updated upstream
                      "id": 1544,
=======
                      "id": 375,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2394:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
<<<<<<< Updated upstream
                      "id": 1545,
=======
                      "id": 376,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2429:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2394:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1553,
                  "nodeType": "IfStatement",
                  "src": "2390:85:3",
                  "trueBody": {
                    "id": 1552,
=======
                  "id": 384,
                  "nodeType": "IfStatement",
                  "src": "2390:85:3",
                  "trueBody": {
                    "id": 383,
>>>>>>> Stashed changes
                    "nodeType": "Block",
                    "src": "2436:39:3",
                    "statements": [
                      {
                        "expression": {
<<<<<<< Updated upstream
                          "id": 1550,
=======
                          "id": 381,
>>>>>>> Stashed changes
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2444:24:3",
                          "subExpression": {
                            "baseExpression": {
<<<<<<< Updated upstream
                              "id": 1547,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2310,
=======
                              "id": 378,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1141,
>>>>>>> Stashed changes
                              "src": "2451:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
<<<<<<< Updated upstream
                            "id": 1549,
                            "indexExpression": {
                              "id": 1548,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1526,
=======
                            "id": 380,
                            "indexExpression": {
                              "id": 379,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
>>>>>>> Stashed changes
                              "src": "2459:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2451:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
<<<<<<< Updated upstream
                        "id": 1551,
=======
                        "id": 382,
>>>>>>> Stashed changes
                        "nodeType": "ExpressionStatement",
                        "src": "2444:24:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 1524,
=======
              "id": 355,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "1839:386:3",
              "text": " @dev Burns a NFT.\n @notice This is an internal function which should be called from user-implemented external\n burn function. Its purpose is to show and properly initialize data structures when using this\n implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n NFT.\n @param _tokenId ID of the NFT to be burned."
            },
<<<<<<< Updated upstream
            "id": 1555,
=======
            "id": 386,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 1530,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1528,
                  "name": "NFTokenMetadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2467,
                  "src": "2295:15:3"
                },
                {
                  "id": 1529,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2290,
=======
              "id": 361,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 359,
                  "name": "NFTokenMetadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1272,
                  "src": "2295:15:3"
                },
                {
                  "id": 360,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1121,
>>>>>>> Stashed changes
                  "src": "2312:17:3"
                }
              ],
              "src": "2286:44:3"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 1527,
=======
              "id": 358,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1526,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1555,
=======
                  "id": 357,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
>>>>>>> Stashed changes
                  "src": "2248:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1525,
=======
                    "id": 356,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2242:26:3"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 1531,
=======
              "id": 362,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2345:0:3"
            },
<<<<<<< Updated upstream
            "scope": 1611,
=======
            "scope": 442,
>>>>>>> Stashed changes
            "src": "2228:251:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              2228,
              3064
            ],
            "body": {
              "id": 1573,
=======
              1059,
              1815
            ],
            "body": {
              "id": 404,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "2875:60:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 1569,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1558,
=======
                        "id": 400,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
>>>>>>> Stashed changes
                        "src": "2914:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< Updated upstream
                        "id": 1570,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1560,
=======
                        "id": 401,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
>>>>>>> Stashed changes
                        "src": "2921:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 1566,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2290,
                        "src": "2881:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$2290_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 1568,
=======
                        "id": 397,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "2881:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1121_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 399,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_removeNFToken",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 2228,
=======
                      "referencedDeclaration": 1059,
>>>>>>> Stashed changes
                      "src": "2881:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 1571,
=======
                    "id": 402,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2881:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1572,
=======
                  "id": 403,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "2881:49:3"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 1556,
=======
              "id": 387,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "2483:264:3",
              "text": " @dev Removes a NFT from an address.\n @notice Use and override this function with caution. Wrong usage can have serious consequences.\n @param _from Address from wich we want to remove the NFT.\n @param _tokenId Which NFT we want to remove."
            },
<<<<<<< Updated upstream
            "id": 1574,
=======
            "id": 405,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeNFToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 1564,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1562,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3209,
                  "src": "2845:7:3"
                },
                {
                  "id": 1563,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2290,
=======
              "id": 395,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 393,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1960,
                  "src": "2845:7:3"
                },
                {
                  "id": 394,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1121,
>>>>>>> Stashed changes
                  "src": "2854:17:3"
                }
              ],
              "src": "2836:36:3"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 1561,
=======
              "id": 392,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1558,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
=======
                  "id": 389,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
>>>>>>> Stashed changes
                  "src": "2779:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1557,
=======
                    "id": 388,
>>>>>>> Stashed changes
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2779:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1560,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
=======
                  "id": 391,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
>>>>>>> Stashed changes
                  "src": "2798:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1559,
=======
                    "id": 390,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2798:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2773:45:3"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 1565,
=======
              "id": 396,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2875:0:3"
            },
<<<<<<< Updated upstream
            "scope": 1611,
=======
            "scope": 442,
>>>>>>> Stashed changes
            "src": "2750:185:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              2274,
              3101
            ],
            "body": {
              "id": 1592,
=======
              1105,
              1852
            ],
            "body": {
              "id": 423,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "3319:55:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 1588,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1577,
=======
                        "id": 419,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
>>>>>>> Stashed changes
                        "src": "3355:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< Updated upstream
                        "id": 1589,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1579,
=======
                        "id": 420,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 410,
>>>>>>> Stashed changes
                        "src": "3360:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 1585,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2290,
                        "src": "3325:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$2290_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 1587,
=======
                        "id": 416,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "3325:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1121_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 418,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addNFToken",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 2274,
=======
                      "referencedDeclaration": 1105,
>>>>>>> Stashed changes
                      "src": "3325:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 1590,
=======
                    "id": 421,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3325:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 1591,
=======
                  "id": 422,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "3325:44:3"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 1575,
=======
              "id": 406,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "2939:257:3",
              "text": " @dev Assignes a new NFT to an address.\n @notice Use and override this function with caution. Wrong usage can have serious consequences.\n @param _to Address to wich we want to add the NFT.\n @param _tokenId Which NFT we want to add."
            },
<<<<<<< Updated upstream
            "id": 1593,
=======
            "id": 424,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addNFToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 1583,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1581,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3209,
                  "src": "3289:7:3"
                },
                {
                  "id": 1582,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2290,
=======
              "id": 414,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 412,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1960,
                  "src": "3289:7:3"
                },
                {
                  "id": 413,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1121,
>>>>>>> Stashed changes
                  "src": "3298:17:3"
                }
              ],
              "src": "3280:36:3"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 1580,
=======
              "id": 411,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1577,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
=======
                  "id": 408,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 424,
>>>>>>> Stashed changes
                  "src": "3225:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1576,
=======
                    "id": 407,
>>>>>>> Stashed changes
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3225:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1579,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
=======
                  "id": 410,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 424,
>>>>>>> Stashed changes
                  "src": "3242:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1578,
=======
                    "id": 409,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3242:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3219:43:3"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 1584,
=======
              "id": 415,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3319:0:3"
            },
<<<<<<< Updated upstream
            "scope": 1611,
=======
            "scope": 442,
>>>>>>> Stashed changes
            "src": "3199:175:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              2289,
              3114
            ],
            "body": {
              "id": 1609,
=======
              1120,
              1865
            ],
            "body": {
              "id": 440,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "3800:61:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 1606,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
=======
                        "id": 437,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
>>>>>>> Stashed changes
                        "src": "3849:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 1604,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2290,
                        "src": "3813:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$2290_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 1605,
=======
                        "id": 435,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "3813:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1121_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 436,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getOwnerNFTCount",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 2289,
=======
                      "referencedDeclaration": 1120,
>>>>>>> Stashed changes
                      "src": "3813:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 1607,
=======
                    "id": 438,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3813:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< Updated upstream
                  "functionReturnParameters": 1603,
                  "id": 1608,
=======
                  "functionReturnParameters": 434,
                  "id": 439,
>>>>>>> Stashed changes
                  "nodeType": "Return",
                  "src": "3806:50:3"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 1594,
=======
              "id": 425,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "3379:280:3",
              "text": " @dev Helper function that gets NFT count of owner. This is needed for overriding in enumerable\n extension to remove double storage(gas optimization) of owner nft count.\n @param _owner Address for whom to query the count.\n @return Number of _owner NFTs."
            },
<<<<<<< Updated upstream
            "id": 1610,
=======
            "id": 441,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getOwnerNFTCount",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 1600,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1598,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3209,
                  "src": "3739:7:3"
                },
                {
                  "id": 1599,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2290,
=======
              "id": 431,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 429,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1960,
                  "src": "3739:7:3"
                },
                {
                  "id": 430,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1121,
>>>>>>> Stashed changes
                  "src": "3748:17:3"
                }
              ],
              "src": "3730:36:3"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 1597,
=======
              "id": 428,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1596,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1610,
=======
                  "id": 427,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
>>>>>>> Stashed changes
                  "src": "3694:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1595,
=======
                    "id": 426,
>>>>>>> Stashed changes
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3694:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3688:24:3"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 1603,
=======
              "id": 434,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 1602,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1610,
=======
                  "id": 433,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
>>>>>>> Stashed changes
                  "src": "3789:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 1601,
=======
                    "id": 432,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3789:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3788:9:3"
            },
<<<<<<< Updated upstream
            "scope": 1611,
=======
            "scope": 442,
>>>>>>> Stashed changes
            "src": "3662:199:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< Updated upstream
        "scope": 1612,
=======
        "scope": 443,
>>>>>>> Stashed changes
        "src": "292:3572:3"
      }
    ],
    "src": "32:3833:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
<<<<<<< Updated upstream
  "updatedAt": "2021-03-19T08:18:14.902Z",
=======
  "updatedAt": "2021-03-22T08:07:21.568Z",
>>>>>>> Stashed changes
  "devdoc": {
    "details": "This is an example contract implementation of NFToken with enumerable and metadata extensions.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        },
        "returns": {
          "_0": "Balance of _owner."
        }
      },
      "burn(uint256)": {
        "details": "Removes a NFT from owner.",
        "params": {
          "_tokenId": "Which NFT we want to remove."
        }
      },
      "constructor": {
        "details": "Contract constructor.",
        "params": {
          "_name": "A descriptive name for a collection of NFTs.",
          "_symbol": "An abbreviated name for NFTokens."
        }
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        },
        "returns": {
          "_0": "Address that _tokenId is approved for."
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        },
        "returns": {
          "_0": "True if approved for all, false otherwise."
        }
      },
      "mint(address,uint256,string)": {
        "details": "Mints a new NFT.",
        "params": {
          "_to": "The address that will own the minted NFT.",
          "_tokenId": "of the NFT to be minted by the msg.sender.",
          "_uri": "String representing RFC 3986 URI."
        }
      },
      "name()": {
        "details": "Returns a descriptive name for a collection of NFTokens.",
        "returns": {
          "_name": "Representing name."
        }
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        },
        "returns": {
          "_owner": "Address of _tokenId owner."
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        },
        "returns": {
          "_0": "True if _interfaceID is supported, false otherwise."
        }
      },
      "symbol()": {
        "details": "Returns an abbreviated name for NFTokens.",
        "returns": {
          "_symbol": "Representing symbol."
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Returns NFT ID by its index.",
        "params": {
          "_index": "A counter less than `totalSupply()`."
        },
        "returns": {
          "_0": "Token id."
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "returns the n-th NFT ID from a list of owner's tokens.",
        "params": {
          "_index": "Index number representing n-th token in owner's list of tokens.",
          "_owner": "Token owner's address."
        },
        "returns": {
          "_0": "Token id."
        }
      },
      "tokenURI(uint256)": {
        "details": "A distinct URI (RFC 3986) for a given NFT.",
        "params": {
          "_tokenId": "Id for which we want uri."
        },
        "returns": {
          "_0": "URI of _tokenId."
        }
      },
      "totalSupply()": {
        "details": "Returns the count of all existing NFTokens.",
        "returns": {
          "_0": "Total supply of NFTs."
        }
      },
      "totalToken()": {
        "details": "Returns the count of all existing NFTokens.",
        "returns": {
          "_0": "Total supply of NFTs."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost."
      }
    },
    "version": 1
  }
}