{
  "contractName": "NFTokenMetadata",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional metadata implementation for ERC-721 non-fungible token standard.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT. This function can be changed to payable.\",\"params\":{\"_approved\":\"Address to be approved for the given NFT ID.\",\"_tokenId\":\"ID of the token to be approved.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"},\"returns\":{\"_0\":\"Balance of _owner.\"}},\"constructor\":{\"details\":\"Contract constructor.\"},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"ID of the NFT to query the approval of.\"},\"returns\":{\"_0\":\"Address that _tokenId is approved for.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if `_operator` is an approved operator for `_owner`.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"},\"returns\":{\"_0\":\"True if approved for all, false otherwise.\"}},\"name()\":{\"details\":\"Returns a descriptive name for a collection of NFTokens.\",\"returns\":{\"_name\":\"Representing name.\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"},\"returns\":{\"_owner\":\"Address of _tokenId owner.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"},\"returns\":{\"_0\":\"True if _interfaceID is supported, false otherwise.\"}},\"symbol()\":{\"details\":\"Returns an abbreviated name for NFTokens.\",\"returns\":{\"_symbol\":\"Representing symbol.\"}},\"tokenURI(uint256)\":{\"details\":\"A distinct URI (RFC 3986) for a given NFT.\",\"params\":{\"_tokenId\":\"Id for which we want uri.\"},\"returns\":{\"_0\":\"URI of _tokenId.\"}},\"totalToken()\":{\"details\":\"Returns the count of all existing NFTokens.\",\"returns\":{\"_0\":\"Total supply of NFTs.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}}},\"stateVariables\":{\"idToUri\":{\"details\":\"Mapping from NFT ID to metadata uri.\"},\"mintedTokens\":{\"details\":\"Array of all NFT IDs.\"},\"nftName\":{\"details\":\"A descriptive name for a collection of NFTs.\"},\"nftSymbol\":{\"details\":\"An abbreviated name for NFTokens.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"constructor\":{\"notice\":\"When implementing this contract don't forget to set nftName and nftSymbol.\"},\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\"\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"This works even if sender doesn't own any tokens at the time.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/nf-token-metadata.sol\":\"NFTokenMetadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/erc721-metadata.sol\":{\"keccak256\":\"0x8ec50468d680b11289bc8788307e3f374c79801182d03d69f98e7ddff969f1ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5590953aa6ef31dcb62e62a35701344fa184661f82cfa83a8ff938670d429b21\",\"dweb:/ipfs/QmeHFrSpyRsJR6h2T25tTFipJK7Jg5S5kt6oCXD2W7m89r\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/erc721-token-receiver.sol\":{\"keccak256\":\"0x63adf2002874e1ea47e8cdc4f491a46c89c001ef2afe7c0c976099605c491cf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c56a65ecba9fdd6b4e2e4b06ef76e35bb77aa7f9343c1f7d7ef6f0cca714bb7b\",\"dweb:/ipfs/QmWfBcXwPDqr8coV9eUfW9Rng6JCGhofxQDx4oXydej2DV\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/erc721.sol\":{\"keccak256\":\"0x03bb03fbc2192d7b957555488ae74a3b15e0285966d92b6ca3d04123b54f1bca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcffead42397c12c1f2227d56705aa2a061eac538791bced7ea0d43a1b461f73\",\"dweb:/ipfs/QmUCnVxpS1DqNLewbKXYcDLsrki163PG1BQovdL5CrDTJG\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/nf-token-metadata.sol\":{\"keccak256\":\"0x658cf6e0bd1381c9a0910c4f215c0cf8453f645c30938823d1655a1661d96378\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca1859dbcf9dbad97356ca0c1b336eba8588cb116bba7097e3373de9e856d2a3\",\"dweb:/ipfs/QmWukyPxrEAtKXBfCXAsZGGzgsvtezxDTteLdjrVL7e7WE\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/nf-token.sol\":{\"keccak256\":\"0x97aae3ffa76efd9d625f56cd8f72b02952e7121c7c3cfb7d77abdaa8c55c67b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5172c22e325c276771d88254817ba70766d659b14fe287b4f75ed17cbb4d3694\",\"dweb:/ipfs/QmQ4AizAPH6dJT45NxUjW8nkDBWKHYNUZ7T5oY2CoNRRBM\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/utils/address-utils.sol\":{\"keccak256\":\"0x161f3b03feffc0e5f340e6c91aff311e682601c8322ac8625a36d2eba2b54cb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b9c43cfab68dc1333f0b31933ecbeef7c93e5eb4f6a8af30efef932cea6ae9d\",\"dweb:/ipfs/QmZeHEYc2rhPNbEbCqbbSeSbVpBM2h5hYHvsZYdq3NFXU8\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/utils/erc165.sol\":{\"keccak256\":\"0x85ce74eeda737980dfc5baba4a4afac6d0fb624fbda32d52d98107b35f1b33b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1eff099ba0bf4143fecbaf7d48e3e18f94488b672efaa6a8bd346e4f3b1e8236\",\"dweb:/ipfs/QmbfF5C7LAXp5BgE95mep7Gjoq2rzGD5uwxA465Qi89Pox\"]},\"/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/utils/supports-interface.sol\":{\"keccak256\":\"0x93f59ea43639a272654eebd290b3d05b64e08bfce124231d6795b6b924e3c09d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5bf57f3578bb5e76379a75790392471dddaad5155208800849bb82d6eec89f4\",\"dweb:/ipfs/QmZ2rXe1xMR24Mp2MfgNBUCd4VRpdu2T3CuUqG9d9px3ib\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060016000806380ac58cd60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600080635b5e139f60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506124f7806101136000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806323b872dd1461018957806342842e0e146101a5578063626be567146101c1576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b61010960048036038101906101049190612082565b6102f5565b6040516101169190612203565b60405180910390f35b61012761035c565b604051610134919061221e565b60405180910390f35b610157600480360381019061015291906120d4565b6103ee565b604051610164919061219c565b60405180910390f35b61018760048036038101906101829190612046565b610509565b005b6101a3600480360381019061019e9190611f3b565b6108ec565b005b6101bf60048036038101906101ba9190611f3b565b610d3e565b005b6101c9610d5e565b6040516101d69190612240565b60405180910390f35b6101f960048036038101906101f491906120d4565b610d6b565b604051610206919061219c565b60405180910390f35b61022960048036038101906102249190611ed6565b610e51565b6040516102369190612240565b60405180910390f35b610247610f0b565b604051610254919061221e565b60405180910390f35b6102776004803603810190610272919061200a565b610f9d565b005b610293600480360381019061028e9190611f8a565b61109a565b005b6102af60048036038101906102aa91906120d4565b6110f1565b6040516102bc919061221e565b60405180910390f35b6102df60048036038101906102da9190611eff565b611274565b6040516102ec9190612203565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60606005805461036b906123c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610397906123c4565b80156103e45780601f106103b9576101008083540402835291602001916103e4565b820191906000526020600020905b8154815290600101906020018083116103c757829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906104cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c3919061221e565b60405180910390fd5b506002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806106025750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303033000000000000000000000000000000000000000000000000000081525090610679576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610670919061221e565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610756576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074d919061221e565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303038000000000000000000000000000000000000000000000000000081525090610836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d919061221e565b60405180910390fd5b50856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806109bd57503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610a4e5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090610ac5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abc919061221e565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610ba2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b99919061221e565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090610c81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c78919061221e565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090610d2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d21919061221e565b60405180910390fd5b50610d358686611308565b50505050505050565b610d59838383604051806020016040528060008152506113bd565b505050565b6000600880549050905090565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610e4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e42919061221e565b60405180910390fd5b50919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090610efa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef1919061221e565b60405180910390fd5b50610f048261198b565b9050919050565b606060068054610f1a906123c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610f46906123c4565b8015610f935780601f10610f6857610100808354040283529160200191610f93565b820191906000526020600020905b815481529060010190602001808311610f7657829003601f168201915b5050505050905090565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161108e9190612203565b60405180910390a35050565b6110ea85858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506113bd565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906111cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c6919061221e565b60405180910390fd5b506007600084815260200190815260200160002080546111ee906123c4565b80601f016020809104026020016040519081016040528092919081815260200182805461121a906123c4565b80156112675780601f1061123c57610100808354040283529160200191611267565b820191906000526020600020905b81548152906001019060200180831161124a57829003601f168201915b5050505050915050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611349826119d4565b6113538183611a75565b61135d8383611c18565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b8160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061148e57503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b8061151f5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090611596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158d919061221e565b60405180910390fd5b5083600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090611673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166a919061221e565b60405180910390fd5b5060006001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090611752576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611749919061221e565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030310000000000000000000000000000000000000000000000000000815250906117fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f2919061221e565b60405180910390fd5b506118068787611308565b6118258773ffffffffffffffffffffffffffffffffffffffff16611dd8565b156119815760008773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff1660e01b815260040161186b94939291906121b7565b602060405180830381600087803b15801561188557600080fd5b505af1158015611899573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118bd91906120ab565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146040518060400160405280600681526020017f30303330303500000000000000000000000000000000000000000000000000008152509061197e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611975919061221e565b60405180910390fd5b50505b5050505050505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a72576002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090611b4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b45919061221e565b60405180910390fd5b506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b9b91906122e9565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303036000000000000000000000000000000000000000000000000000081525090611cf2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ce9919061221e565b60405180910390fd5b50816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d919190612293565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b8214158015611e1a5750808214155b92505050919050565b600081359050611e3281612465565b92915050565b600081359050611e478161247c565b92915050565b600081359050611e5c81612493565b92915050565b600081519050611e7181612493565b92915050565b60008083601f840112611e8957600080fd5b8235905067ffffffffffffffff811115611ea257600080fd5b602083019150836001820283011115611eba57600080fd5b9250929050565b600081359050611ed0816124aa565b92915050565b600060208284031215611ee857600080fd5b6000611ef684828501611e23565b91505092915050565b60008060408385031215611f1257600080fd5b6000611f2085828601611e23565b9250506020611f3185828601611e23565b9150509250929050565b600080600060608486031215611f5057600080fd5b6000611f5e86828701611e23565b9350506020611f6f86828701611e23565b9250506040611f8086828701611ec1565b9150509250925092565b600080600080600060808688031215611fa257600080fd5b6000611fb088828901611e23565b9550506020611fc188828901611e23565b9450506040611fd288828901611ec1565b935050606086013567ffffffffffffffff811115611fef57600080fd5b611ffb88828901611e77565b92509250509295509295909350565b6000806040838503121561201d57600080fd5b600061202b85828601611e23565b925050602061203c85828601611e38565b9150509250929050565b6000806040838503121561205957600080fd5b600061206785828601611e23565b925050602061207885828601611ec1565b9150509250929050565b60006020828403121561209457600080fd5b60006120a284828501611e4d565b91505092915050565b6000602082840312156120bd57600080fd5b60006120cb84828501611e62565b91505092915050565b6000602082840312156120e657600080fd5b60006120f484828501611ec1565b91505092915050565b6121068161231d565b82525050565b6121158161232f565b82525050565b60006121268261225b565b6121308185612271565b9350612140818560208601612391565b61214981612454565b840191505092915050565b600061215f82612266565b6121698185612282565b9350612179818560208601612391565b61218281612454565b840191505092915050565b61219681612387565b82525050565b60006020820190506121b160008301846120fd565b92915050565b60006080820190506121cc60008301876120fd565b6121d960208301866120fd565b6121e6604083018561218d565b81810360608301526121f8818461211b565b905095945050505050565b6000602082019050612218600083018461210c565b92915050565b600060208201905081810360008301526122388184612154565b905092915050565b6000602082019050612255600083018461218d565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061229e82612387565b91506122a983612387565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156122de576122dd6123f6565b5b828201905092915050565b60006122f482612387565b91506122ff83612387565b925082821015612312576123116123f6565b5b828203905092915050565b600061232882612367565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156123af578082015181840152602081019050612394565b838111156123be576000848401525b50505050565b600060028204905060018216806123dc57607f821691505b602082108114156123f0576123ef612425565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b61246e8161231d565b811461247957600080fd5b50565b6124858161232f565b811461249057600080fd5b50565b61249c8161233b565b81146124a757600080fd5b50565b6124b381612387565b81146124be57600080fd5b5056fea264697066735822122073c0c383f66606c297d5cbffd36c06d260b880c2b026c8b459976707c188b37464736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806323b872dd1461018957806342842e0e146101a5578063626be567146101c1576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b61010960048036038101906101049190612082565b6102f5565b6040516101169190612203565b60405180910390f35b61012761035c565b604051610134919061221e565b60405180910390f35b610157600480360381019061015291906120d4565b6103ee565b604051610164919061219c565b60405180910390f35b61018760048036038101906101829190612046565b610509565b005b6101a3600480360381019061019e9190611f3b565b6108ec565b005b6101bf60048036038101906101ba9190611f3b565b610d3e565b005b6101c9610d5e565b6040516101d69190612240565b60405180910390f35b6101f960048036038101906101f491906120d4565b610d6b565b604051610206919061219c565b60405180910390f35b61022960048036038101906102249190611ed6565b610e51565b6040516102369190612240565b60405180910390f35b610247610f0b565b604051610254919061221e565b60405180910390f35b6102776004803603810190610272919061200a565b610f9d565b005b610293600480360381019061028e9190611f8a565b61109a565b005b6102af60048036038101906102aa91906120d4565b6110f1565b6040516102bc919061221e565b60405180910390f35b6102df60048036038101906102da9190611eff565b611274565b6040516102ec9190612203565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60606005805461036b906123c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610397906123c4565b80156103e45780601f106103b9576101008083540402835291602001916103e4565b820191906000526020600020905b8154815290600101906020018083116103c757829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906104cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c3919061221e565b60405180910390fd5b506002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806106025750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303033000000000000000000000000000000000000000000000000000081525090610679576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610670919061221e565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610756576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074d919061221e565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303038000000000000000000000000000000000000000000000000000081525090610836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d919061221e565b60405180910390fd5b50856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806109bd57503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610a4e5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090610ac5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abc919061221e565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610ba2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b99919061221e565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090610c81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c78919061221e565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090610d2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d21919061221e565b60405180910390fd5b50610d358686611308565b50505050505050565b610d59838383604051806020016040528060008152506113bd565b505050565b6000600880549050905090565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610e4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e42919061221e565b60405180910390fd5b50919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090610efa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef1919061221e565b60405180910390fd5b50610f048261198b565b9050919050565b606060068054610f1a906123c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610f46906123c4565b8015610f935780601f10610f6857610100808354040283529160200191610f93565b820191906000526020600020905b815481529060010190602001808311610f7657829003601f168201915b5050505050905090565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161108e9190612203565b60405180910390a35050565b6110ea85858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506113bd565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906111cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c6919061221e565b60405180910390fd5b506007600084815260200190815260200160002080546111ee906123c4565b80601f016020809104026020016040519081016040528092919081815260200182805461121a906123c4565b80156112675780601f1061123c57610100808354040283529160200191611267565b820191906000526020600020905b81548152906001019060200180831161124a57829003601f168201915b5050505050915050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611349826119d4565b6113538183611a75565b61135d8383611c18565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b8160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061148e57503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b8061151f5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090611596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158d919061221e565b60405180910390fd5b5083600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090611673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166a919061221e565b60405180910390fd5b5060006001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090611752576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611749919061221e565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030310000000000000000000000000000000000000000000000000000815250906117fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f2919061221e565b60405180910390fd5b506118068787611308565b6118258773ffffffffffffffffffffffffffffffffffffffff16611dd8565b156119815760008773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff1660e01b815260040161186b94939291906121b7565b602060405180830381600087803b15801561188557600080fd5b505af1158015611899573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118bd91906120ab565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146040518060400160405280600681526020017f30303330303500000000000000000000000000000000000000000000000000008152509061197e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611975919061221e565b60405180910390fd5b50505b5050505050505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a72576002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090611b4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b45919061221e565b60405180910390fd5b506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b9b91906122e9565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303036000000000000000000000000000000000000000000000000000081525090611cf2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ce9919061221e565b60405180910390fd5b50816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d919190612293565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b8214158015611e1a5750808214155b92505050919050565b600081359050611e3281612465565b92915050565b600081359050611e478161247c565b92915050565b600081359050611e5c81612493565b92915050565b600081519050611e7181612493565b92915050565b60008083601f840112611e8957600080fd5b8235905067ffffffffffffffff811115611ea257600080fd5b602083019150836001820283011115611eba57600080fd5b9250929050565b600081359050611ed0816124aa565b92915050565b600060208284031215611ee857600080fd5b6000611ef684828501611e23565b91505092915050565b60008060408385031215611f1257600080fd5b6000611f2085828601611e23565b9250506020611f3185828601611e23565b9150509250929050565b600080600060608486031215611f5057600080fd5b6000611f5e86828701611e23565b9350506020611f6f86828701611e23565b9250506040611f8086828701611ec1565b9150509250925092565b600080600080600060808688031215611fa257600080fd5b6000611fb088828901611e23565b9550506020611fc188828901611e23565b9450506040611fd288828901611ec1565b935050606086013567ffffffffffffffff811115611fef57600080fd5b611ffb88828901611e77565b92509250509295509295909350565b6000806040838503121561201d57600080fd5b600061202b85828601611e23565b925050602061203c85828601611e38565b9150509250929050565b6000806040838503121561205957600080fd5b600061206785828601611e23565b925050602061207885828601611ec1565b9150509250929050565b60006020828403121561209457600080fd5b60006120a284828501611e4d565b91505092915050565b6000602082840312156120bd57600080fd5b60006120cb84828501611e62565b91505092915050565b6000602082840312156120e657600080fd5b60006120f484828501611ec1565b91505092915050565b6121068161231d565b82525050565b6121158161232f565b82525050565b60006121268261225b565b6121308185612271565b9350612140818560208601612391565b61214981612454565b840191505092915050565b600061215f82612266565b6121698185612282565b9350612179818560208601612391565b61218281612454565b840191505092915050565b61219681612387565b82525050565b60006020820190506121b160008301846120fd565b92915050565b60006080820190506121cc60008301876120fd565b6121d960208301866120fd565b6121e6604083018561218d565b81810360608301526121f8818461211b565b905095945050505050565b6000602082019050612218600083018461210c565b92915050565b600060208201905081810360008301526122388184612154565b905092915050565b6000602082019050612255600083018461218d565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061229e82612387565b91506122a983612387565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156122de576122dd6123f6565b5b828201905092915050565b60006122f482612387565b91506122ff83612387565b925082821015612312576123116123f6565b5b828203905092915050565b600061232882612367565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156123af578082015181840152602081019050612394565b838111156123be576000848401525b50505050565b600060028204905060018216806123dc57607f821691505b602082108114156123f0576123ef612425565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b61246e8161231d565b811461247957600080fd5b50565b6124858161232f565b811461249057600080fd5b50565b61249c8161233b565b81146124a757600080fd5b50565b6124b381612387565b81146124be57600080fd5b5056fea264697066735822122073c0c383f66606c297d5cbffd36c06d260b880c2b026c8b459976707c188b37464736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10802:17",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:17"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:17",
                "type": ""
              }
            ],
            "src": "7:139:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "201:84:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "211:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "233:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "220:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "220:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "211:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "273:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "249:23:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "249:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "249:30:17"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "179:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "187:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "195:5:17",
                "type": ""
              }
            ],
            "src": "152:133:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "342:86:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "352:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "374:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "361:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "361:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "352:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "416:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "390:25:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:32:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "390:32:17"
                }
              ]
            },
            "name": "abi_decode_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "320:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "328:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "336:5:17",
                "type": ""
              }
            ],
            "src": "291:137:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "496:79:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "506:22:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "521:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "515:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "515:13:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "506:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "563:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "537:25:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "537:32:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "537:32:17"
                }
              ]
            },
            "name": "abi_decode_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "474:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "482:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "490:5:17",
                "type": ""
              }
            ],
            "src": "434:141:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "668:277:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "717:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "726:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "729:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "719:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "719:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "719:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "696:6:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "704:4:17",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "692:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "692:17:17"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "711:3:17"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:27:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "681:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "681:35:17"
                  },
                  "nodeType": "YulIf",
                  "src": "678:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "742:30:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "765:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "752:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "752:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "742:6:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "815:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "824:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "827:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "817:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "817:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "817:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "787:6:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "795:18:17",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "784:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:30:17"
                  },
                  "nodeType": "YulIf",
                  "src": "781:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "840:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "856:6:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "864:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "852:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "852:17:17"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "840:8:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "923:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "932:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "935:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "925:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "925:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "925:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulIdentifier",
                            "src": "888:8:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "902:6:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "910:4:17",
                                "type": "",
                                "value": "0x01"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "898:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "898:17:17"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "884:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "884:32:17"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "918:3:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "881:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "881:41:17"
                  },
                  "nodeType": "YulIf",
                  "src": "878:2:17"
                }
              ]
            },
            "name": "abi_decode_t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "635:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "643:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "651:8:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "661:6:17",
                "type": ""
              }
            ],
            "src": "594:351:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1003:87:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1013:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1035:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1022:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1022:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1013:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1078:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1051:26:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1051:33:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1051:33:17"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "981:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "989:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "997:5:17",
                "type": ""
              }
            ],
            "src": "951:139:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1162:196:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1208:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1217:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1220:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1210:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1210:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1210:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1183:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1192:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1179:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1179:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1204:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1175:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1175:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1172:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1234:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1249:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1263:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1253:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1278:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1313:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1324:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1309:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1309:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1333:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1288:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1288:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1278:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1132:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1143:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1155:6:17",
                "type": ""
              }
            ],
            "src": "1096:262:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1447:324:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1493:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1502:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1505:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1495:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1495:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1495:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1468:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1477:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1464:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1464:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1489:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1460:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1460:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1457:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1519:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1534:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1548:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1538:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1563:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1598:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1609:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1594:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1594:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1618:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1573:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1573:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1563:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1646:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1661:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1675:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1665:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1691:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1726:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1737:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1722:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1722:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1746:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1701:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1701:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1691:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1409:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1420:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1432:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1440:6:17",
                "type": ""
              }
            ],
            "src": "1364:407:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1877:452:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1923:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1932:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1935:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1925:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1925:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1925:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1898:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1907:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1894:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1894:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1919:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1890:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1890:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1887:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1949:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1964:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1978:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1968:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1993:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2028:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2039:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2024:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2024:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2048:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2003:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2003:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1993:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2076:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2091:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2105:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2095:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2121:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2156:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2167:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2152:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2152:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2176:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2131:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2131:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2121:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2204:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2219:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2233:2:17",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2223:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2249:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2284:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2295:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2280:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2280:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2304:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2259:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2259:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2249:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1831:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1842:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1854:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1862:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1870:6:17",
                "type": ""
              }
            ],
            "src": "1777:552:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2471:693:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2518:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2527:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2530:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2520:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2520:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2520:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2492:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2501:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2488:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2488:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2513:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2484:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2484:33:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2481:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2544:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2559:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2573:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2563:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2588:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2623:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2634:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2619:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2619:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2643:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2598:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2598:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2588:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2671:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2686:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2700:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2690:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2716:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2751:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2762:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2747:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2747:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2771:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2726:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2726:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2716:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2799:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2814:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2828:2:17",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2818:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2844:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2879:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2890:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2875:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2875:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2899:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2854:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2854:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2844:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2927:230:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2942:46:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2973:9:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2984:2:17",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2969:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2969:18:17"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2956:12:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2956:32:17"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2946:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3035:16:17",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3044:1:17",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3047:1:17",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3037:6:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3037:12:17"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3037:12:17"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3007:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3015:18:17",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3004:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3004:30:17"
                      },
                      "nodeType": "YulIf",
                      "src": "3001:2:17"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3065:82:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3119:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3130:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3115:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3115:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3139:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_calldata_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3083:31:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3083:64:17"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3065:6:17"
                        },
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3073:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2409:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2420:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2432:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2440:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2448:6:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2456:6:17",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2464:6:17",
                "type": ""
              }
            ],
            "src": "2335:829:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3250:321:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3296:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3305:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3308:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3298:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3298:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3298:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3271:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3280:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3267:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3267:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3292:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3263:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3263:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "3260:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3322:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3337:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3351:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3341:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3366:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3401:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3412:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3397:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3397:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3421:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3376:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3376:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3366:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3449:115:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3464:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3478:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3468:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3494:60:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3526:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3537:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3522:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3522:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3546:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3504:17:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3504:50:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3494:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3212:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3223:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3235:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3243:6:17",
                "type": ""
              }
            ],
            "src": "3170:401:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3660:324:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3706:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3715:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3718:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3708:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3708:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3708:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3681:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3690:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3677:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3677:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3702:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3673:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3673:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "3670:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3732:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3747:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3761:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3751:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3776:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3811:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3822:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3807:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3807:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3831:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3786:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3786:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3776:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3859:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3874:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3888:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3878:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3904:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3939:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3950:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3935:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3935:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3959:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3914:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3914:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3904:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3622:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3633:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3645:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3653:6:17",
                "type": ""
              }
            ],
            "src": "3577:407:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4055:195:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4101:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4110:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4113:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4103:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4103:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4103:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4076:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4085:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4072:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4072:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4097:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4068:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4068:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "4065:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4127:116:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4142:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4156:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4146:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4171:62:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4205:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4216:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4201:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4201:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4225:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "4181:19:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4181:52:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4171:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4025:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4036:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4048:6:17",
                "type": ""
              }
            ],
            "src": "3990:260:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4332:206:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4378:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4387:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4390:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4380:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4380:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4380:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4353:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4362:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4349:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4349:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4374:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4345:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4345:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "4342:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4404:127:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4419:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4433:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4423:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4448:73:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4493:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4504:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4489:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4489:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4513:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4458:30:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4458:63:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4448:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4302:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4313:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4325:6:17",
                "type": ""
              }
            ],
            "src": "4256:282:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4610:196:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4656:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4665:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4668:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4658:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4658:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4658:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4631:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4640:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4627:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4627:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4652:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4623:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4623:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "4620:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4682:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4697:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4711:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4701:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4726:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4761:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4772:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4757:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4757:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4781:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4736:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4736:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4726:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4580:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4591:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4603:6:17",
                "type": ""
              }
            ],
            "src": "4544:262:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4877:53:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4894:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4917:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4899:17:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4899:24:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4887:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4887:37:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4887:37:17"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4865:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4872:3:17",
                "type": ""
              }
            ],
            "src": "4812:118:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4995:50:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5012:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5032:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5017:14:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5017:21:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5005:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5005:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5005:34:17"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4983:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4990:3:17",
                "type": ""
              }
            ],
            "src": "4936:109:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5141:270:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5151:52:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5197:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5165:31:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5165:38:17"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5155:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5212:77:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5277:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5282:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5219:57:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5219:70:17"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5212:3:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5324:5:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5331:4:17",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5320:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5320:16:17"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5338:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5343:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5298:21:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5298:52:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5298:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5359:46:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5370:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5397:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "5375:21:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5375:29:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5366:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5366:39:17"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5359:3:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5122:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5129:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5137:3:17",
                "type": ""
              }
            ],
            "src": "5051:360:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5509:272:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5519:53:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5566:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5533:32:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5533:39:17"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5523:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5581:78:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5647:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5652:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5588:58:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5588:71:17"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5581:3:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5694:5:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5701:4:17",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5690:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5690:16:17"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5708:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5713:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5668:21:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5668:52:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5668:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5729:46:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5740:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5767:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "5745:21:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5745:29:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5736:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5736:39:17"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5729:3:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5490:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5497:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5505:3:17",
                "type": ""
              }
            ],
            "src": "5417:364:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5852:53:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5869:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5892:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5874:17:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5874:24:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5862:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5862:37:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5862:37:17"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5840:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5847:3:17",
                "type": ""
              }
            ],
            "src": "5787:118:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6009:124:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6019:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6031:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6042:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6027:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6027:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6019:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6099:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6112:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6123:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6108:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6108:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6055:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6055:71:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6055:71:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5981:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5993:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6004:4:17",
                "type": ""
              }
            ],
            "src": "5911:222:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6339:440:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6349:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6361:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6372:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6357:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6357:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6349:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6430:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6443:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6454:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6439:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6439:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6386:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6386:71:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6386:71:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6511:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6524:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6535:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6520:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6520:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6467:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6467:72:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6467:72:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6593:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6606:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6617:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6602:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6602:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6549:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6549:72:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6549:72:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6642:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6653:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6638:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6638:18:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6662:4:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6668:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6658:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6658:20:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6631:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6631:48:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6631:48:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6688:84:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6758:6:17"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6767:4:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6696:61:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6696:76:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6688:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6287:9:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6299:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6307:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6315:6:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6323:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6334:4:17",
                "type": ""
              }
            ],
            "src": "6139:640:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6877:118:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6887:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6899:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6910:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6895:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6895:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6887:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6961:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6974:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6985:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6970:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6970:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6923:37:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6923:65:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6923:65:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6849:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6861:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6872:4:17",
                "type": ""
              }
            ],
            "src": "6785:210:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7119:195:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7129:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7141:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7152:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7137:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7137:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7129:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7176:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7187:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7172:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7172:17:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7195:4:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7201:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7191:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7191:20:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7165:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7165:47:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7165:47:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7221:86:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7293:6:17"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7302:4:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7229:63:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7229:78:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7221:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7091:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7103:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7114:4:17",
                "type": ""
              }
            ],
            "src": "7001:313:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7418:124:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7428:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7440:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7451:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7436:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7436:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7428:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7508:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7521:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7532:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7517:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7517:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7464:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7464:71:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7464:71:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7390:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7402:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7413:4:17",
                "type": ""
              }
            ],
            "src": "7320:222:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7606:40:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7617:22:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7633:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7627:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7627:12:17"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7617:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7589:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7599:6:17",
                "type": ""
              }
            ],
            "src": "7548:98:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7711:40:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7722:22:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7738:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7732:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7732:12:17"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7722:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7694:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7704:6:17",
                "type": ""
              }
            ],
            "src": "7652:99:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7852:73:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7869:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7874:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7862:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7862:19:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7862:19:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7890:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7909:3:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7914:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7905:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7905:14:17"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7890:11:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7824:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7829:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7840:11:17",
                "type": ""
              }
            ],
            "src": "7757:168:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8027:73:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8044:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8049:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8037:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8037:19:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8037:19:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8065:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8084:3:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8089:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8080:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8080:14:17"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8065:11:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7999:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8004:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "8015:11:17",
                "type": ""
              }
            ],
            "src": "7931:169:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8150:261:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8160:25:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8183:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8165:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8165:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8160:1:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8194:25:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8217:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8199:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8199:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8194:1:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8357:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8359:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8359:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8359:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8278:1:17"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8285:66:17",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8353:1:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8281:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8281:74:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8275:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8275:81:17"
                  },
                  "nodeType": "YulIf",
                  "src": "8272:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8389:16:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8400:1:17"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8403:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8396:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8396:9:17"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8389:3:17"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8137:1:17",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8140:1:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "8146:3:17",
                "type": ""
              }
            ],
            "src": "8106:305:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8462:146:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8472:25:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8495:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8477:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8477:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8472:1:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8506:25:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8529:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8511:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8511:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8506:1:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8553:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8555:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8555:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8555:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8547:1:17"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8550:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8544:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8544:8:17"
                  },
                  "nodeType": "YulIf",
                  "src": "8541:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8585:17:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8597:1:17"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8600:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8593:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8593:9:17"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "8585:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8448:1:17",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8451:1:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8457:4:17",
                "type": ""
              }
            ],
            "src": "8417:191:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8659:51:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8669:35:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8698:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8680:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8680:24:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8669:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8641:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8651:7:17",
                "type": ""
              }
            ],
            "src": "8614:96:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8758:48:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8768:32:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8793:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8786:6:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8786:13:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8779:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8779:21:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8768:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8740:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8750:7:17",
                "type": ""
              }
            ],
            "src": "8716:90:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8856:105:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8866:89:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8881:5:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8888:66:17",
                        "type": "",
                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8877:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8877:78:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8866:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8838:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8848:7:17",
                "type": ""
              }
            ],
            "src": "8812:149:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9012:81:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9022:65:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9037:5:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9044:42:17",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9033:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9033:54:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9022:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8994:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9004:7:17",
                "type": ""
              }
            ],
            "src": "8967:126:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9144:32:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9154:16:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9165:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9154:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9126:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9136:7:17",
                "type": ""
              }
            ],
            "src": "9099:77:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9231:258:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9241:10:17",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9250:1:17",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "9245:1:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9310:63:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9335:3:17"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "9340:1:17"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9331:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9331:11:17"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "9354:3:17"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "9359:1:17"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9350:3:17"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9350:11:17"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9344:5:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9344:18:17"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9324:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9324:39:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9324:39:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9271:1:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9274:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9268:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9268:13:17"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9282:19:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9284:15:17",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "9293:1:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9296:2:17",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9289:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9289:10:17"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "9284:1:17"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9264:3:17",
                    "statements": []
                  },
                  "src": "9260:113:17"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9407:76:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9457:3:17"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "9462:6:17"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9453:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9453:16:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9471:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9446:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9446:27:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9446:27:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9388:1:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9391:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9385:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9385:13:17"
                  },
                  "nodeType": "YulIf",
                  "src": "9382:2:17"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "9213:3:17",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "9218:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9223:6:17",
                "type": ""
              }
            ],
            "src": "9182:307:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9546:269:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9556:22:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "9570:4:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9576:1:17",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "9566:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9566:12:17"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "9556:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9587:38:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "9617:4:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9623:1:17",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9613:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9613:12:17"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "9591:18:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9664:51:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9678:27:17",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "9692:6:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9700:4:17",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "9688:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9688:17:17"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9678:6:17"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "9644:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9637:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9637:26:17"
                  },
                  "nodeType": "YulIf",
                  "src": "9634:2:17"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9767:42:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "9781:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9781:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9781:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "9731:18:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9754:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9762:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "9751:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9751:14:17"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "9728:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9728:38:17"
                  },
                  "nodeType": "YulIf",
                  "src": "9725:2:17"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "9530:4:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9539:6:17",
                "type": ""
              }
            ],
            "src": "9495:320:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9849:152:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9866:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9869:77:17",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9859:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9859:88:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9859:88:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9963:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9966:4:17",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9956:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9956:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9956:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9987:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9990:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9980:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9980:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9980:15:17"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "9821:180:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10035:152:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10052:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10055:77:17",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10045:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10045:88:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10045:88:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10149:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10152:4:17",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10142:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10142:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10142:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10173:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10176:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10166:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10166:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10166:15:17"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "10007:180:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10241:54:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10251:38:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10269:5:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10276:2:17",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10265:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10265:14:17"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10285:2:17",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10281:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10281:7:17"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10261:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10261:28:17"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "10251:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10224:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "10234:6:17",
                "type": ""
              }
            ],
            "src": "10193:102:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10344:79:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10401:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10410:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10413:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10403:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10403:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10403:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10367:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10392:5:17"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "10374:17:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10374:24:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10364:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10364:35:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10357:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10357:43:17"
                  },
                  "nodeType": "YulIf",
                  "src": "10354:2:17"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10337:5:17",
                "type": ""
              }
            ],
            "src": "10301:122:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10469:76:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10523:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10532:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10535:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10525:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10525:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10525:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10492:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10514:5:17"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "10499:14:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10499:21:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10489:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10489:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10482:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10482:40:17"
                  },
                  "nodeType": "YulIf",
                  "src": "10479:2:17"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10462:5:17",
                "type": ""
              }
            ],
            "src": "10429:116:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10593:78:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10649:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10658:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10661:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10651:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10651:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10651:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10616:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10640:5:17"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "10623:16:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10623:23:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10613:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10613:34:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10606:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10606:42:17"
                  },
                  "nodeType": "YulIf",
                  "src": "10603:2:17"
                }
              ]
            },
            "name": "validator_revert_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10586:5:17",
                "type": ""
              }
            ],
            "src": "10551:120:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10720:79:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10777:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10786:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10789:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10779:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10779:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10779:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10743:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10768:5:17"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "10750:17:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10750:24:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10740:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10740:35:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10733:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10733:43:17"
                  },
                  "nodeType": "YulIf",
                  "src": "10730:2:17"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10713:5:17",
                "type": ""
              }
            ],
            "src": "10677:122:17"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
<<<<<<< Updated upstream
  "sourceMap": "214:3412:12:-:0;;;812:87;;;;;;;;;;487:4:16;453:19;:31;473:10;453:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2991:4:13;2957:19;:31;2977:10;2957:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;870:4:12;836:19;:31;856:10;836:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;214:3412;;;;;;",
  "deployedSourceMap": "214:3412:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;723:179:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1030:101:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9361:193:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7096:362;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6316:352;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4532:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1475:97:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8893:218:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8407:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1251:109:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7876:231:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3900:213;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1951:191:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9829:194:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;723:179:16;835:4;862:19;:33;882:12;862:33;;;;;;;;;;;;;;;;;;;;;;;;;;;855:40;;723:179;;;:::o;1030:101:12:-;1078:19;1117:7;1109:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1030:101;:::o;9361:193:13:-;9495:7;9468:8;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;;2802:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;9525:12:::1;:22;9538:8;9525:22;;;;;;;;;;;;;;;;;;;;;9518:29;;9361:193:::0;;;;:::o;7096:362::-;7203:8;1932:18;1953:9;:19;1963:8;1953:19;;;;;;;;;;;;;;;;;;;;;1932:40;;2017:10;2003:24;;:10;:24;;;:84;;;;2047:16;:28;2064:10;2047:28;;;;;;;;;;;;;;;:40;2076:10;2047:40;;;;;;;;;;;;;;;;;;;;;;;;;2003:84;2101:21;;;;;;;;;;;;;;;;;1982:150;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7234:8:::1;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;::::0;2802:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7258:18:::2;7279:9;:19;7289:8;7279:19;;;;;;;;;;;;;;;;;;;;;7258:40;;7329:10;7316:23;;:9;:23;;;;7341:8;;;;;;;;;;;;;;;;::::0;7308:42:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7386:9;7361:12;:22;7374:8;7361:22;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;7442:8;7431:9;7410:41;;7419:10;7410:41;;;;;;;;;;;;2869:1;2142::::1;7096:362:::0;;;;:::o;6316:352::-;6444:8;2342:18;2363:9;:19;2373:8;2363:19;;;;;;;;;;;;;;;;;;;;;2342:40;;2427:10;2413:24;;:10;:24;;;:80;;;;2483:10;2457:36;;:12;:22;2470:8;2457:22;;;;;;;;;;;;;;;;;;;;;:36;;;2413:80;:140;;;;2513:16;:28;2530:10;2513:28;;;;;;;;;;;;;;;:40;2542:10;2513:40;;;;;;;;;;;;;;;;;;;;;;;;;2413:140;2567:30;;;;;;;;;;;;;;;;;2392:215;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6467:8:::1;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;::::0;2802:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6487:18:::2;6508:9;:19;6518:8;6508:19;;;;;;;;;;;;;;;;;;;;;6487:40;;6559:5;6545:19;;:10;:19;;;6566:9;;;;;;;;;;;;;;;;::::0;6537:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6609:1;6594:17;;:3;:17;;;;6613:12;;;;;;;;;;;;;;;;::::0;6586:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6637:24;6647:3;6652:8;6637:9;:24::i;:::-;2869:1;2617::::1;6316:352:::0;;;;;:::o;4532:180::-;4662:43;4680:5;4687:3;4692:8;4662:43;;;;;;;;;;;;:17;:43::i;:::-;4532:180;;;:::o;1475:97:12:-;1520:7;1546:12;:19;;;;1539:26;;1475:97;:::o;8893:218:13:-;8992:14;9031:9;:19;9041:8;9031:19;;;;;;;;;;;;;;;;;;;;;9022:28;;9086:1;9068:20;;:6;:20;;;;9090:13;;;;;;;;;;;;;;;;;9060:44;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8893:218;;;:::o;8407:214::-;8506:7;8555:1;8537:20;;:6;:20;;;;8559:12;;;;;;;;;;;;;;;;;8529:43;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8589:25;8607:6;8589:17;:25::i;:::-;8582:32;;8407:214;;;:::o;1251:109:12:-;1301:21;1344:9;1334:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1251:109;:::o;7876:231:13:-;8028:9;7986:16;:28;8003:10;7986:28;;;;;;;;;;;;;;;:39;8015:9;7986:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;8079:9;8052:48;;8067:10;8052:48;;;8090:9;8052:48;;;;;;:::i;:::-;;;;;;;;7876:231;;:::o;3900:213::-;4060:46;4078:5;4085:3;4090:8;4100:5;;4060:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;:46::i;:::-;3900:213;;;;;:::o;1951:191:12:-;2082:13;2055:8;2841:1:13;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;;2802:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2118:7:12::1;:17;2126:8;2118:17;;;;;;;;;;;2111:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1951:191:::0;;;;:::o;9829:194:13:-;9954:4;9981:16;:24;9998:6;9981:24;;;;;;;;;;;;;;;:35;10006:9;9981:35;;;;;;;;;;;;;;;;;;;;;;;;;9974:42;;9829:194;;;;:::o;10220:266::-;10289:12;10304:9;:19;10314:8;10304:19;;;;;;;;;;;;;;;;;;;;;10289:34;;10333:24;10348:8;10333:14;:24::i;:::-;10368:30;10383:4;10389:8;10368:14;:30::i;:::-;10408:26;10420:3;10425:8;10408:11;:26::i;:::-;10470:8;10465:3;10450:29;;10459:4;10450:29;;;;;;;;;;;;10220:266;;;:::o;13646:767::-;13797:8;2342:18;2363:9;:19;2373:8;2363:19;;;;;;;;;;;;;;;;;;;;;2342:40;;2427:10;2413:24;;:10;:24;;;:80;;;;2483:10;2457:36;;:12;:22;2470:8;2457:22;;;;;;;;;;;;;;;;;;;;;:36;;;2413:80;:140;;;;2513:16;:28;2530:10;2513:28;;;;;;;;;;;;;;;:40;2542:10;2513:40;;;;;;;;;;;;;;;;;;;;;;;;;2413:140;2567:30;;;;;;;;;;;;;;;;;2392:215;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;13820:8:::1;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;::::0;2802:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;13840:18:::2;13861:9;:19;13871:8;13861:19;;;;;;;;;;;;;;;;;;;;;13840:40;;13912:5;13898:19;;:10;:19;;;13919:9;;;;;;;;;;;;;;;;::::0;13890:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;13962:1;13947:17;;:3;:17;;;;13966:12;;;;;;;;;;;;;;;;::::0;13939:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;13990:24;14000:3;14005:8;13990:9;:24::i;:::-;14029:16;:3;:14;;;:16::i;:::-;14025:382;;;14061:13;14113:3;14093:41;;;14156:10;14188:5;14215:8;14245:5;14093:175;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14061:207;;1152:10;14317:24;;14307:34;;;:6;:34;;;;14359:23;;;;;;;;;;;;;;;;::::0;14282:114:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;14025:382;;2869:1;2617::::1;13646:767:::0;;;;;;:::o;13191:170::-;13297:7;13327:19;:27;13347:6;13327:27;;;;;;;;;;;;;;;;13320:34;;13191:170;;;:::o;14550:162::-;14648:1;14614:36;;:12;:22;14627:8;14614:22;;;;;;;;;;;;;;;;;;;;;:36;;;14610:96;;14673:12;:22;14686:8;14673:22;;;;;;;;;;;;14666:29;;;;;;;;;;;14610:96;14550:162;:::o;12123:244::-;12238:5;12215:28;;:9;:19;12225:8;12215:19;;;;;;;;;;;;;;;;;;;;;:28;;;12245:9;;;;;;;;;;;;;;;;;12207:48;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12323:1;12294:19;:26;12314:5;12294:26;;;;;;;;;;;;;;;;:30;;;;:::i;:::-;12265:19;:26;12285:5;12265:26;;;;;;;;;;;;;;;:59;;;;12341:9;:19;12351:8;12341:19;;;;;;;;;;;;12334:26;;;;;;;;;;;12123:244;;:::o;12640:249::-;12758:1;12727:33;;:9;:19;12737:8;12727:19;;;;;;;;;;;;;;;;;;;;;:33;;;12762:18;;;;;;;;;;;;;;;;;12719:62;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12814:3;12792:9;:19;12802:8;12792:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;12881:1;12854:19;:24;12874:3;12854:24;;;;;;;;;;;;;;;;:28;;;;:::i;:::-;12827:19;:24;12847:3;12827:24;;;;;;;;;;;;;;;:55;;;;12640:249;;:::o;487:842:14:-;569:17;1031:16;1057:19;1091:66;1057:100;;;;1214:5;1202:18;1190:30;;1291:3;1279:15;;:8;:15;;:42;;;;;1310:11;1298:8;:23;;1279:42;1263:59;;487:842;;;;;:::o;7:139:17:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:137::-;;374:6;361:20;352:29;;390:32;416:5;390:32;:::i;:::-;342:86;;;;:::o;434:141::-;;521:6;515:13;506:22;;537:32;563:5;537:32;:::i;:::-;496:79;;;;:::o;594:351::-;;;711:3;704:4;696:6;692:17;688:27;678:2;;729:1;726;719:12;678:2;765:6;752:20;742:30;;795:18;787:6;784:30;781:2;;;827:1;824;817:12;781:2;864:4;856:6;852:17;840:29;;918:3;910:4;902:6;898:17;888:8;884:32;881:41;878:2;;;935:1;932;925:12;878:2;668:277;;;;;:::o;951:139::-;;1035:6;1022:20;1013:29;;1051:33;1078:5;1051:33;:::i;:::-;1003:87;;;;:::o;1096:262::-;;1204:2;1192:9;1183:7;1179:23;1175:32;1172:2;;;1220:1;1217;1210:12;1172:2;1263:1;1288:53;1333:7;1324:6;1313:9;1309:22;1288:53;:::i;:::-;1278:63;;1234:117;1162:196;;;;:::o;1364:407::-;;;1489:2;1477:9;1468:7;1464:23;1460:32;1457:2;;;1505:1;1502;1495:12;1457:2;1548:1;1573:53;1618:7;1609:6;1598:9;1594:22;1573:53;:::i;:::-;1563:63;;1519:117;1675:2;1701:53;1746:7;1737:6;1726:9;1722:22;1701:53;:::i;:::-;1691:63;;1646:118;1447:324;;;;;:::o;1777:552::-;;;;1919:2;1907:9;1898:7;1894:23;1890:32;1887:2;;;1935:1;1932;1925:12;1887:2;1978:1;2003:53;2048:7;2039:6;2028:9;2024:22;2003:53;:::i;:::-;1993:63;;1949:117;2105:2;2131:53;2176:7;2167:6;2156:9;2152:22;2131:53;:::i;:::-;2121:63;;2076:118;2233:2;2259:53;2304:7;2295:6;2284:9;2280:22;2259:53;:::i;:::-;2249:63;;2204:118;1877:452;;;;;:::o;2335:829::-;;;;;;2513:3;2501:9;2492:7;2488:23;2484:33;2481:2;;;2530:1;2527;2520:12;2481:2;2573:1;2598:53;2643:7;2634:6;2623:9;2619:22;2598:53;:::i;:::-;2588:63;;2544:117;2700:2;2726:53;2771:7;2762:6;2751:9;2747:22;2726:53;:::i;:::-;2716:63;;2671:118;2828:2;2854:53;2899:7;2890:6;2879:9;2875:22;2854:53;:::i;:::-;2844:63;;2799:118;2984:2;2973:9;2969:18;2956:32;3015:18;3007:6;3004:30;3001:2;;;3047:1;3044;3037:12;3001:2;3083:64;3139:7;3130:6;3119:9;3115:22;3083:64;:::i;:::-;3065:82;;;;2927:230;2471:693;;;;;;;;:::o;3170:401::-;;;3292:2;3280:9;3271:7;3267:23;3263:32;3260:2;;;3308:1;3305;3298:12;3260:2;3351:1;3376:53;3421:7;3412:6;3401:9;3397:22;3376:53;:::i;:::-;3366:63;;3322:117;3478:2;3504:50;3546:7;3537:6;3526:9;3522:22;3504:50;:::i;:::-;3494:60;;3449:115;3250:321;;;;;:::o;3577:407::-;;;3702:2;3690:9;3681:7;3677:23;3673:32;3670:2;;;3718:1;3715;3708:12;3670:2;3761:1;3786:53;3831:7;3822:6;3811:9;3807:22;3786:53;:::i;:::-;3776:63;;3732:117;3888:2;3914:53;3959:7;3950:6;3939:9;3935:22;3914:53;:::i;:::-;3904:63;;3859:118;3660:324;;;;;:::o;3990:260::-;;4097:2;4085:9;4076:7;4072:23;4068:32;4065:2;;;4113:1;4110;4103:12;4065:2;4156:1;4181:52;4225:7;4216:6;4205:9;4201:22;4181:52;:::i;:::-;4171:62;;4127:116;4055:195;;;;:::o;4256:282::-;;4374:2;4362:9;4353:7;4349:23;4345:32;4342:2;;;4390:1;4387;4380:12;4342:2;4433:1;4458:63;4513:7;4504:6;4493:9;4489:22;4458:63;:::i;:::-;4448:73;;4404:127;4332:206;;;;:::o;4544:262::-;;4652:2;4640:9;4631:7;4627:23;4623:32;4620:2;;;4668:1;4665;4658:12;4620:2;4711:1;4736:53;4781:7;4772:6;4761:9;4757:22;4736:53;:::i;:::-;4726:63;;4682:117;4610:196;;;;:::o;4812:118::-;4899:24;4917:5;4899:24;:::i;:::-;4894:3;4887:37;4877:53;;:::o;4936:109::-;5017:21;5032:5;5017:21;:::i;:::-;5012:3;5005:34;4995:50;;:::o;5051:360::-;;5165:38;5197:5;5165:38;:::i;:::-;5219:70;5282:6;5277:3;5219:70;:::i;:::-;5212:77;;5298:52;5343:6;5338:3;5331:4;5324:5;5320:16;5298:52;:::i;:::-;5375:29;5397:6;5375:29;:::i;:::-;5370:3;5366:39;5359:46;;5141:270;;;;;:::o;5417:364::-;;5533:39;5566:5;5533:39;:::i;:::-;5588:71;5652:6;5647:3;5588:71;:::i;:::-;5581:78;;5668:52;5713:6;5708:3;5701:4;5694:5;5690:16;5668:52;:::i;:::-;5745:29;5767:6;5745:29;:::i;:::-;5740:3;5736:39;5729:46;;5509:272;;;;;:::o;5787:118::-;5874:24;5892:5;5874:24;:::i;:::-;5869:3;5862:37;5852:53;;:::o;5911:222::-;;6042:2;6031:9;6027:18;6019:26;;6055:71;6123:1;6112:9;6108:17;6099:6;6055:71;:::i;:::-;6009:124;;;;:::o;6139:640::-;;6372:3;6361:9;6357:19;6349:27;;6386:71;6454:1;6443:9;6439:17;6430:6;6386:71;:::i;:::-;6467:72;6535:2;6524:9;6520:18;6511:6;6467:72;:::i;:::-;6549;6617:2;6606:9;6602:18;6593:6;6549:72;:::i;:::-;6668:9;6662:4;6658:20;6653:2;6642:9;6638:18;6631:48;6696:76;6767:4;6758:6;6696:76;:::i;:::-;6688:84;;6339:440;;;;;;;:::o;6785:210::-;;6910:2;6899:9;6895:18;6887:26;;6923:65;6985:1;6974:9;6970:17;6961:6;6923:65;:::i;:::-;6877:118;;;;:::o;7001:313::-;;7152:2;7141:9;7137:18;7129:26;;7201:9;7195:4;7191:20;7187:1;7176:9;7172:17;7165:47;7229:78;7302:4;7293:6;7229:78;:::i;:::-;7221:86;;7119:195;;;;:::o;7320:222::-;;7451:2;7440:9;7436:18;7428:26;;7464:71;7532:1;7521:9;7517:17;7508:6;7464:71;:::i;:::-;7418:124;;;;:::o;7548:98::-;;7633:5;7627:12;7617:22;;7606:40;;;:::o;7652:99::-;;7738:5;7732:12;7722:22;;7711:40;;;:::o;7757:168::-;;7874:6;7869:3;7862:19;7914:4;7909:3;7905:14;7890:29;;7852:73;;;;:::o;7931:169::-;;8049:6;8044:3;8037:19;8089:4;8084:3;8080:14;8065:29;;8027:73;;;;:::o;8106:305::-;;8165:20;8183:1;8165:20;:::i;:::-;8160:25;;8199:20;8217:1;8199:20;:::i;:::-;8194:25;;8353:1;8285:66;8281:74;8278:1;8275:81;8272:2;;;8359:18;;:::i;:::-;8272:2;8403:1;8400;8396:9;8389:16;;8150:261;;;;:::o;8417:191::-;;8477:20;8495:1;8477:20;:::i;:::-;8472:25;;8511:20;8529:1;8511:20;:::i;:::-;8506:25;;8550:1;8547;8544:8;8541:2;;;8555:18;;:::i;:::-;8541:2;8600:1;8597;8593:9;8585:17;;8462:146;;;;:::o;8614:96::-;;8680:24;8698:5;8680:24;:::i;:::-;8669:35;;8659:51;;;:::o;8716:90::-;;8793:5;8786:13;8779:21;8768:32;;8758:48;;;:::o;8812:149::-;;8888:66;8881:5;8877:78;8866:89;;8856:105;;;:::o;8967:126::-;;9044:42;9037:5;9033:54;9022:65;;9012:81;;;:::o;9099:77::-;;9165:5;9154:16;;9144:32;;;:::o;9182:307::-;9250:1;9260:113;9274:6;9271:1;9268:13;9260:113;;;9359:1;9354:3;9350:11;9344:18;9340:1;9335:3;9331:11;9324:39;9296:2;9293:1;9289:10;9284:15;;9260:113;;;9391:6;9388:1;9385:13;9382:2;;;9471:1;9462:6;9457:3;9453:16;9446:27;9382:2;9231:258;;;;:::o;9495:320::-;;9576:1;9570:4;9566:12;9556:22;;9623:1;9617:4;9613:12;9644:18;9634:2;;9700:4;9692:6;9688:17;9678:27;;9634:2;9762;9754:6;9751:14;9731:18;9728:38;9725:2;;;9781:18;;:::i;:::-;9725:2;9546:269;;;;:::o;9821:180::-;9869:77;9866:1;9859:88;9966:4;9963:1;9956:15;9990:4;9987:1;9980:15;10007:180;10055:77;10052:1;10045:88;10152:4;10149:1;10142:15;10176:4;10173:1;10166:15;10193:102;;10285:2;10281:7;10276:2;10269:5;10265:14;10261:28;10251:38;;10241:54;;;:::o;10301:122::-;10374:24;10392:5;10374:24;:::i;:::-;10367:5;10364:35;10354:2;;10413:1;10410;10403:12;10354:2;10344:79;:::o;10429:116::-;10499:21;10514:5;10499:21;:::i;:::-;10492:5;10489:32;10479:2;;10535:1;10532;10525:12;10479:2;10469:76;:::o;10551:120::-;10623:23;10640:5;10623:23;:::i;:::-;10616:5;10613:34;10603:2;;10661:1;10658;10651:12;10603:2;10593:78;:::o;10677:122::-;10750:24;10768:5;10750:24;:::i;:::-;10743:5;10740:35;10730:2;;10789:1;10786;10779:12;10730:2;10720:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./nf-token.sol\";\nimport \"./erc721-metadata.sol\";\n\n/**\n * @dev Optional metadata implementation for ERC-721 non-fungible token standard.\n */\ncontract NFTokenMetadata is NFToken, ERC721Metadata {\n    /**\n     * @dev A descriptive name for a collection of NFTs.\n     */\n    string internal nftName;\n\n    /**\n     * @dev An abbreviated name for NFTokens.\n     */\n    string internal nftSymbol;\n\n    /**\n     * @dev Mapping from NFT ID to metadata uri.\n     */\n    mapping(uint256 => string) internal idToUri;\n\n    /**\n     * @dev Array of all NFT IDs.\n     */\n    uint256[] internal mintedTokens;\n\n    /**\n     * @dev Contract constructor.\n     * @notice When implementing this contract don't forget to set nftName and nftSymbol.\n     */\n    constructor() {\n        supportedInterfaces[0x5b5e139f] = true; // ERC721Metadata\n    }\n\n    /**\n     * @dev Returns a descriptive name for a collection of NFTokens.\n     * @return _name Representing name.\n     */\n    function name() external view override returns (string memory _name) {\n        _name = nftName;\n    }\n\n    /**\n     * @dev Returns an abbreviated name for NFTokens.\n     * @return _symbol Representing symbol.\n     */\n    function symbol() external view override returns (string memory _symbol) {\n        _symbol = nftSymbol;\n    }\n\n    /**\n     * @dev Returns the count of all existing NFTokens.\n     * @return Total supply of NFTs.\n     */\n    function totalToken() external view returns (uint256) {\n        return mintedTokens.length;\n    }\n\n    /**\n     * @dev Push NFT token to array.\n     * @param _tokenId Id for which we want to push.\n     */\n    function _push(uint256 _tokenId) internal validNFToken(_tokenId) {\n        mintedTokens.push(_tokenId);\n    }\n\n    /**\n     * @dev A distinct URI (RFC 3986) for a given NFT.\n     * @param _tokenId Id for which we want uri.\n     * @return URI of _tokenId.\n     */\n    function tokenURI(uint256 _tokenId)\n        external\n        view\n        override\n        validNFToken(_tokenId)\n        returns (string memory)\n    {\n        return idToUri[_tokenId];\n    }\n\n    /**\n     * @dev Burns a NFT.\n     * @notice This is an internal function which should be called from user-implemented external\n     * burn function. Its purpose is to show and properly initialize data structures when using this\n     * implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n     * NFT.\n     * @param _tokenId ID of the NFT to be burned.\n     */\n    function _burn(uint256 _tokenId) internal virtual override {\n        super._burn(_tokenId);\n\n        if (bytes(idToUri[_tokenId]).length != 0) {\n            delete idToUri[_tokenId];\n        }\n    }\n\n    /**\n     * @dev Set a distinct URI (RFC 3986) for a given NFT ID.\n     * @notice This is an internal function which should be called from user-implemented external\n     * function. Its purpose is to show and properly initialize data structures when using this\n     * implementation.\n     * @param _tokenId Id for which we want URI.\n     * @param _uri String representing RFC 3986 URI.\n     */\n    function _setTokenUri(uint256 _tokenId, string memory _uri)\n        internal\n        validNFToken(_tokenId)\n    {\n        idToUri[_tokenId] = _uri;\n    }\n\n    /**\n     * @dev Buy an NFT.\n     * @param _tokenId of the NFT to be bought by the msg.sender.\n     */\n\n    function _buy(address buyer, uint256 _tokenId)\n        internal\n        virtual\n        validNFToken(_tokenId)\n        canTransfer(_tokenId)\n    {\n        super._buy(address(this), buyer, _tokenId);\n    }\n}\n",
=======
  "sourceMap": "214:3095:12:-:0;;;812:87;;;;;;;;;;487:4:16;453:19;:31;473:10;453:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2991:4:13;2957:19;:31;2977:10;2957:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;870:4:12;836:19;:31;856:10;836:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;214:3095;;;;;;",
  "deployedSourceMap": "214:3095:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;723:179:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1030:101:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8345:193:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6080:362;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5300:352;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4532:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1475:97:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7877:218:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7391:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1251:109:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6860:231:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3900:213;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1951:191:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8813:194:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;723:179:16;835:4;862:19;:33;882:12;862:33;;;;;;;;;;;;;;;;;;;;;;;;;;;855:40;;723:179;;;:::o;1030:101:12:-;1078:19;1117:7;1109:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1030:101;:::o;8345:193:13:-;8479:7;8452:8;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;;2802:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8509:12:::1;:22;8522:8;8509:22;;;;;;;;;;;;;;;;;;;;;8502:29;;8345:193:::0;;;;:::o;6080:362::-;6187:8;1932:18;1953:9;:19;1963:8;1953:19;;;;;;;;;;;;;;;;;;;;;1932:40;;2017:10;2003:24;;:10;:24;;;:84;;;;2047:16;:28;2064:10;2047:28;;;;;;;;;;;;;;;:40;2076:10;2047:40;;;;;;;;;;;;;;;;;;;;;;;;;2003:84;2101:21;;;;;;;;;;;;;;;;;1982:150;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6218:8:::1;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;::::0;2802:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6242:18:::2;6263:9;:19;6273:8;6263:19;;;;;;;;;;;;;;;;;;;;;6242:40;;6313:10;6300:23;;:9;:23;;;;6325:8;;;;;;;;;;;;;;;;::::0;6292:42:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6370:9;6345:12;:22;6358:8;6345:22;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;6426:8;6415:9;6394:41;;6403:10;6394:41;;;;;;;;;;;;2869:1;2142::::1;6080:362:::0;;;;:::o;5300:352::-;5428:8;2342:18;2363:9;:19;2373:8;2363:19;;;;;;;;;;;;;;;;;;;;;2342:40;;2427:10;2413:24;;:10;:24;;;:80;;;;2483:10;2457:36;;:12;:22;2470:8;2457:22;;;;;;;;;;;;;;;;;;;;;:36;;;2413:80;:140;;;;2513:16;:28;2530:10;2513:28;;;;;;;;;;;;;;;:40;2542:10;2513:40;;;;;;;;;;;;;;;;;;;;;;;;;2413:140;2567:30;;;;;;;;;;;;;;;;;2392:215;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5451:8:::1;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;::::0;2802:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5471:18:::2;5492:9;:19;5502:8;5492:19;;;;;;;;;;;;;;;;;;;;;5471:40;;5543:5;5529:19;;:10;:19;;;5550:9;;;;;;;;;;;;;;;;::::0;5521:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5593:1;5578:17;;:3;:17;;;;5597:12;;;;;;;;;;;;;;;;::::0;5570:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5621:24;5631:3;5636:8;5621:9;:24::i;:::-;2869:1;2617::::1;5300:352:::0;;;;;:::o;4532:180::-;4662:43;4680:5;4687:3;4692:8;4662:43;;;;;;;;;;;;:17;:43::i;:::-;4532:180;;;:::o;1475:97:12:-;1520:7;1546:12;:19;;;;1539:26;;1475:97;:::o;7877:218:13:-;7976:14;8015:9;:19;8025:8;8015:19;;;;;;;;;;;;;;;;;;;;;8006:28;;8070:1;8052:20;;:6;:20;;;;8074:13;;;;;;;;;;;;;;;;;8044:44;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7877:218;;;:::o;7391:214::-;7490:7;7539:1;7521:20;;:6;:20;;;;7543:12;;;;;;;;;;;;;;;;;7513:43;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7573:25;7591:6;7573:17;:25::i;:::-;7566:32;;7391:214;;;:::o;1251:109:12:-;1301:21;1344:9;1334:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1251:109;:::o;6860:231:13:-;7012:9;6970:16;:28;6987:10;6970:28;;;;;;;;;;;;;;;:39;6999:9;6970:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;7063:9;7036:48;;7051:10;7036:48;;;7074:9;7036:48;;;;;;:::i;:::-;;;;;;;;6860:231;;:::o;3900:213::-;4060:46;4078:5;4085:3;4090:8;4100:5;;4060:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;:46::i;:::-;3900:213;;;;;:::o;1951:191:12:-;2082:13;2055:8;2841:1:13;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;;2802:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2118:7:12::1;:17;2126:8;2118:17;;;;;;;;;;;2111:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1951:191:::0;;;;:::o;8813:194:13:-;8938:4;8965:16;:24;8982:6;8965:24;;;;;;;;;;;;;;;:35;8990:9;8965:35;;;;;;;;;;;;;;;;;;;;;;;;;8958:42;;8813:194;;;;:::o;9204:266::-;9273:12;9288:9;:19;9298:8;9288:19;;;;;;;;;;;;;;;;;;;;;9273:34;;9317:24;9332:8;9317:14;:24::i;:::-;9352:30;9367:4;9373:8;9352:14;:30::i;:::-;9392:26;9404:3;9409:8;9392:11;:26::i;:::-;9454:8;9449:3;9434:29;;9443:4;9434:29;;;;;;;;;;;;9204:266;;;:::o;12630:767::-;12781:8;2342:18;2363:9;:19;2373:8;2363:19;;;;;;;;;;;;;;;;;;;;;2342:40;;2427:10;2413:24;;:10;:24;;;:80;;;;2483:10;2457:36;;:12;:22;2470:8;2457:22;;;;;;;;;;;;;;;;;;;;;:36;;;2413:80;:140;;;;2513:16;:28;2530:10;2513:28;;;;;;;;;;;;;;;:40;2542:10;2513:40;;;;;;;;;;;;;;;;;;;;;;;;;2413:140;2567:30;;;;;;;;;;;;;;;;;2392:215;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12804:8:::1;2841:1;2810:33;;:9;:19;2820:8;2810:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2845:13;;;;;;;;;;;;;;;;::::0;2802:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12824:18:::2;12845:9;:19;12855:8;12845:19;;;;;;;;;;;;;;;;;;;;;12824:40;;12896:5;12882:19;;:10;:19;;;12903:9;;;;;;;;;;;;;;;;::::0;12874:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12946:1;12931:17;;:3;:17;;;;12950:12;;;;;;;;;;;;;;;;::::0;12923:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12974:24;12984:3;12989:8;12974:9;:24::i;:::-;13013:16;:3;:14;;;:16::i;:::-;13009:382;;;13045:13;13097:3;13077:41;;;13140:10;13172:5;13199:8;13229:5;13077:175;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13045:207;;1152:10;13301:24;;13291:34;;;:6;:34;;;;13343:23;;;;;;;;;;;;;;;;::::0;13266:114:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;13009:382;;2869:1;2617::::1;12630:767:::0;;;;;;:::o;12175:170::-;12281:7;12311:19;:27;12331:6;12311:27;;;;;;;;;;;;;;;;12304:34;;12175:170;;;:::o;13534:162::-;13632:1;13598:36;;:12;:22;13611:8;13598:22;;;;;;;;;;;;;;;;;;;;;:36;;;13594:96;;13657:12;:22;13670:8;13657:22;;;;;;;;;;;;13650:29;;;;;;;;;;;13594:96;13534:162;:::o;11107:244::-;11222:5;11199:28;;:9;:19;11209:8;11199:19;;;;;;;;;;;;;;;;;;;;;:28;;;11229:9;;;;;;;;;;;;;;;;;11191:48;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;11307:1;11278:19;:26;11298:5;11278:26;;;;;;;;;;;;;;;;:30;;;;:::i;:::-;11249:19;:26;11269:5;11249:26;;;;;;;;;;;;;;;:59;;;;11325:9;:19;11335:8;11325:19;;;;;;;;;;;;11318:26;;;;;;;;;;;11107:244;;:::o;11624:249::-;11742:1;11711:33;;:9;:19;11721:8;11711:19;;;;;;;;;;;;;;;;;;;;;:33;;;11746:18;;;;;;;;;;;;;;;;;11703:62;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;11798:3;11776:9;:19;11786:8;11776:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11865:1;11838:19;:24;11858:3;11838:24;;;;;;;;;;;;;;;;:28;;;;:::i;:::-;11811:19;:24;11831:3;11811:24;;;;;;;;;;;;;;;:55;;;;11624:249;;:::o;487:842:14:-;569:17;1031:16;1057:19;1091:66;1057:100;;;;1214:5;1202:18;1190:30;;1291:3;1279:15;;:8;:15;;:42;;;;;1310:11;1298:8;:23;;1279:42;1263:59;;487:842;;;;;:::o;7:139:17:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:137::-;;374:6;361:20;352:29;;390:32;416:5;390:32;:::i;:::-;342:86;;;;:::o;434:141::-;;521:6;515:13;506:22;;537:32;563:5;537:32;:::i;:::-;496:79;;;;:::o;594:351::-;;;711:3;704:4;696:6;692:17;688:27;678:2;;729:1;726;719:12;678:2;765:6;752:20;742:30;;795:18;787:6;784:30;781:2;;;827:1;824;817:12;781:2;864:4;856:6;852:17;840:29;;918:3;910:4;902:6;898:17;888:8;884:32;881:41;878:2;;;935:1;932;925:12;878:2;668:277;;;;;:::o;951:139::-;;1035:6;1022:20;1013:29;;1051:33;1078:5;1051:33;:::i;:::-;1003:87;;;;:::o;1096:262::-;;1204:2;1192:9;1183:7;1179:23;1175:32;1172:2;;;1220:1;1217;1210:12;1172:2;1263:1;1288:53;1333:7;1324:6;1313:9;1309:22;1288:53;:::i;:::-;1278:63;;1234:117;1162:196;;;;:::o;1364:407::-;;;1489:2;1477:9;1468:7;1464:23;1460:32;1457:2;;;1505:1;1502;1495:12;1457:2;1548:1;1573:53;1618:7;1609:6;1598:9;1594:22;1573:53;:::i;:::-;1563:63;;1519:117;1675:2;1701:53;1746:7;1737:6;1726:9;1722:22;1701:53;:::i;:::-;1691:63;;1646:118;1447:324;;;;;:::o;1777:552::-;;;;1919:2;1907:9;1898:7;1894:23;1890:32;1887:2;;;1935:1;1932;1925:12;1887:2;1978:1;2003:53;2048:7;2039:6;2028:9;2024:22;2003:53;:::i;:::-;1993:63;;1949:117;2105:2;2131:53;2176:7;2167:6;2156:9;2152:22;2131:53;:::i;:::-;2121:63;;2076:118;2233:2;2259:53;2304:7;2295:6;2284:9;2280:22;2259:53;:::i;:::-;2249:63;;2204:118;1877:452;;;;;:::o;2335:829::-;;;;;;2513:3;2501:9;2492:7;2488:23;2484:33;2481:2;;;2530:1;2527;2520:12;2481:2;2573:1;2598:53;2643:7;2634:6;2623:9;2619:22;2598:53;:::i;:::-;2588:63;;2544:117;2700:2;2726:53;2771:7;2762:6;2751:9;2747:22;2726:53;:::i;:::-;2716:63;;2671:118;2828:2;2854:53;2899:7;2890:6;2879:9;2875:22;2854:53;:::i;:::-;2844:63;;2799:118;2984:2;2973:9;2969:18;2956:32;3015:18;3007:6;3004:30;3001:2;;;3047:1;3044;3037:12;3001:2;3083:64;3139:7;3130:6;3119:9;3115:22;3083:64;:::i;:::-;3065:82;;;;2927:230;2471:693;;;;;;;;:::o;3170:401::-;;;3292:2;3280:9;3271:7;3267:23;3263:32;3260:2;;;3308:1;3305;3298:12;3260:2;3351:1;3376:53;3421:7;3412:6;3401:9;3397:22;3376:53;:::i;:::-;3366:63;;3322:117;3478:2;3504:50;3546:7;3537:6;3526:9;3522:22;3504:50;:::i;:::-;3494:60;;3449:115;3250:321;;;;;:::o;3577:407::-;;;3702:2;3690:9;3681:7;3677:23;3673:32;3670:2;;;3718:1;3715;3708:12;3670:2;3761:1;3786:53;3831:7;3822:6;3811:9;3807:22;3786:53;:::i;:::-;3776:63;;3732:117;3888:2;3914:53;3959:7;3950:6;3939:9;3935:22;3914:53;:::i;:::-;3904:63;;3859:118;3660:324;;;;;:::o;3990:260::-;;4097:2;4085:9;4076:7;4072:23;4068:32;4065:2;;;4113:1;4110;4103:12;4065:2;4156:1;4181:52;4225:7;4216:6;4205:9;4201:22;4181:52;:::i;:::-;4171:62;;4127:116;4055:195;;;;:::o;4256:282::-;;4374:2;4362:9;4353:7;4349:23;4345:32;4342:2;;;4390:1;4387;4380:12;4342:2;4433:1;4458:63;4513:7;4504:6;4493:9;4489:22;4458:63;:::i;:::-;4448:73;;4404:127;4332:206;;;;:::o;4544:262::-;;4652:2;4640:9;4631:7;4627:23;4623:32;4620:2;;;4668:1;4665;4658:12;4620:2;4711:1;4736:53;4781:7;4772:6;4761:9;4757:22;4736:53;:::i;:::-;4726:63;;4682:117;4610:196;;;;:::o;4812:118::-;4899:24;4917:5;4899:24;:::i;:::-;4894:3;4887:37;4877:53;;:::o;4936:109::-;5017:21;5032:5;5017:21;:::i;:::-;5012:3;5005:34;4995:50;;:::o;5051:360::-;;5165:38;5197:5;5165:38;:::i;:::-;5219:70;5282:6;5277:3;5219:70;:::i;:::-;5212:77;;5298:52;5343:6;5338:3;5331:4;5324:5;5320:16;5298:52;:::i;:::-;5375:29;5397:6;5375:29;:::i;:::-;5370:3;5366:39;5359:46;;5141:270;;;;;:::o;5417:364::-;;5533:39;5566:5;5533:39;:::i;:::-;5588:71;5652:6;5647:3;5588:71;:::i;:::-;5581:78;;5668:52;5713:6;5708:3;5701:4;5694:5;5690:16;5668:52;:::i;:::-;5745:29;5767:6;5745:29;:::i;:::-;5740:3;5736:39;5729:46;;5509:272;;;;;:::o;5787:118::-;5874:24;5892:5;5874:24;:::i;:::-;5869:3;5862:37;5852:53;;:::o;5911:222::-;;6042:2;6031:9;6027:18;6019:26;;6055:71;6123:1;6112:9;6108:17;6099:6;6055:71;:::i;:::-;6009:124;;;;:::o;6139:640::-;;6372:3;6361:9;6357:19;6349:27;;6386:71;6454:1;6443:9;6439:17;6430:6;6386:71;:::i;:::-;6467:72;6535:2;6524:9;6520:18;6511:6;6467:72;:::i;:::-;6549;6617:2;6606:9;6602:18;6593:6;6549:72;:::i;:::-;6668:9;6662:4;6658:20;6653:2;6642:9;6638:18;6631:48;6696:76;6767:4;6758:6;6696:76;:::i;:::-;6688:84;;6339:440;;;;;;;:::o;6785:210::-;;6910:2;6899:9;6895:18;6887:26;;6923:65;6985:1;6974:9;6970:17;6961:6;6923:65;:::i;:::-;6877:118;;;;:::o;7001:313::-;;7152:2;7141:9;7137:18;7129:26;;7201:9;7195:4;7191:20;7187:1;7176:9;7172:17;7165:47;7229:78;7302:4;7293:6;7229:78;:::i;:::-;7221:86;;7119:195;;;;:::o;7320:222::-;;7451:2;7440:9;7436:18;7428:26;;7464:71;7532:1;7521:9;7517:17;7508:6;7464:71;:::i;:::-;7418:124;;;;:::o;7548:98::-;;7633:5;7627:12;7617:22;;7606:40;;;:::o;7652:99::-;;7738:5;7732:12;7722:22;;7711:40;;;:::o;7757:168::-;;7874:6;7869:3;7862:19;7914:4;7909:3;7905:14;7890:29;;7852:73;;;;:::o;7931:169::-;;8049:6;8044:3;8037:19;8089:4;8084:3;8080:14;8065:29;;8027:73;;;;:::o;8106:305::-;;8165:20;8183:1;8165:20;:::i;:::-;8160:25;;8199:20;8217:1;8199:20;:::i;:::-;8194:25;;8353:1;8285:66;8281:74;8278:1;8275:81;8272:2;;;8359:18;;:::i;:::-;8272:2;8403:1;8400;8396:9;8389:16;;8150:261;;;;:::o;8417:191::-;;8477:20;8495:1;8477:20;:::i;:::-;8472:25;;8511:20;8529:1;8511:20;:::i;:::-;8506:25;;8550:1;8547;8544:8;8541:2;;;8555:18;;:::i;:::-;8541:2;8600:1;8597;8593:9;8585:17;;8462:146;;;;:::o;8614:96::-;;8680:24;8698:5;8680:24;:::i;:::-;8669:35;;8659:51;;;:::o;8716:90::-;;8793:5;8786:13;8779:21;8768:32;;8758:48;;;:::o;8812:149::-;;8888:66;8881:5;8877:78;8866:89;;8856:105;;;:::o;8967:126::-;;9044:42;9037:5;9033:54;9022:65;;9012:81;;;:::o;9099:77::-;;9165:5;9154:16;;9144:32;;;:::o;9182:307::-;9250:1;9260:113;9274:6;9271:1;9268:13;9260:113;;;9359:1;9354:3;9350:11;9344:18;9340:1;9335:3;9331:11;9324:39;9296:2;9293:1;9289:10;9284:15;;9260:113;;;9391:6;9388:1;9385:13;9382:2;;;9471:1;9462:6;9457:3;9453:16;9446:27;9382:2;9231:258;;;;:::o;9495:320::-;;9576:1;9570:4;9566:12;9556:22;;9623:1;9617:4;9613:12;9644:18;9634:2;;9700:4;9692:6;9688:17;9678:27;;9634:2;9762;9754:6;9751:14;9731:18;9728:38;9725:2;;;9781:18;;:::i;:::-;9725:2;9546:269;;;;:::o;9821:180::-;9869:77;9866:1;9859:88;9966:4;9963:1;9956:15;9990:4;9987:1;9980:15;10007:180;10055:77;10052:1;10045:88;10152:4;10149:1;10142:15;10176:4;10173:1;10166:15;10193:102;;10285:2;10281:7;10276:2;10269:5;10265:14;10261:28;10251:38;;10241:54;;;:::o;10301:122::-;10374:24;10392:5;10374:24;:::i;:::-;10367:5;10364:35;10354:2;;10413:1;10410;10403:12;10354:2;10344:79;:::o;10429:116::-;10499:21;10514:5;10499:21;:::i;:::-;10492:5;10489:32;10479:2;;10535:1;10532;10525:12;10479:2;10469:76;:::o;10551:120::-;10623:23;10640:5;10623:23;:::i;:::-;10616:5;10613:34;10603:2;;10661:1;10658;10651:12;10603:2;10593:78;:::o;10677:122::-;10750:24;10768:5;10750:24;:::i;:::-;10743:5;10740:35;10730:2;;10789:1;10786;10779:12;10730:2;10720:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./nf-token.sol\";\nimport \"./erc721-metadata.sol\";\n\n/**\n * @dev Optional metadata implementation for ERC-721 non-fungible token standard.\n */\ncontract NFTokenMetadata is NFToken, ERC721Metadata {\n    /**\n     * @dev A descriptive name for a collection of NFTs.\n     */\n    string internal nftName;\n\n    /**\n     * @dev An abbreviated name for NFTokens.\n     */\n    string internal nftSymbol;\n\n    /**\n     * @dev Mapping from NFT ID to metadata uri.\n     */\n    mapping(uint256 => string) internal idToUri;\n\n    /**\n     * @dev Array of all NFT IDs.\n     */\n    uint256[] internal mintedTokens;\n\n    /**\n     * @dev Contract constructor.\n     * @notice When implementing this contract don't forget to set nftName and nftSymbol.\n     */\n    constructor() {\n        supportedInterfaces[0x5b5e139f] = true; // ERC721Metadata\n    }\n\n    /**\n     * @dev Returns a descriptive name for a collection of NFTokens.\n     * @return _name Representing name.\n     */\n    function name() external view override returns (string memory _name) {\n        _name = nftName;\n    }\n\n    /**\n     * @dev Returns an abbreviated name for NFTokens.\n     * @return _symbol Representing symbol.\n     */\n    function symbol() external view override returns (string memory _symbol) {\n        _symbol = nftSymbol;\n    }\n\n    /**\n     * @dev Returns the count of all existing NFTokens.\n     * @return Total supply of NFTs.\n     */\n    function totalToken() external view returns (uint256) {\n        return mintedTokens.length;\n    }\n\n    /**\n     * @dev Push NFT token to array.\n     * @param _tokenId Id for which we want to push.\n     */\n    function _push(uint256 _tokenId) internal validNFToken(_tokenId) {\n        mintedTokens.push(_tokenId);\n    }\n\n    /**\n     * @dev A distinct URI (RFC 3986) for a given NFT.\n     * @param _tokenId Id for which we want uri.\n     * @return URI of _tokenId.\n     */\n    function tokenURI(uint256 _tokenId)\n        external\n        view\n        override\n        validNFToken(_tokenId)\n        returns (string memory)\n    {\n        return idToUri[_tokenId];\n    }\n\n    /**\n     * @dev Burns a NFT.\n     * @notice This is an internal function which should be called from user-implemented external\n     * burn function. Its purpose is to show and properly initialize data structures when using this\n     * implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n     * NFT.\n     * @param _tokenId ID of the NFT to be burned.\n     */\n    function _burn(uint256 _tokenId) internal virtual override {\n        super._burn(_tokenId);\n\n        if (bytes(idToUri[_tokenId]).length != 0) {\n            delete idToUri[_tokenId];\n        }\n    }\n\n    /**\n     * @dev Set a distinct URI (RFC 3986) for a given NFT ID.\n     * @notice This is an internal function which should be called from user-implemented external\n     * function. Its purpose is to show and properly initialize data structures when using this\n     * implementation.\n     * @param _tokenId Id for which we want URI.\n     * @param _uri String representing RFC 3986 URI.\n     */\n    function _setTokenUri(uint256 _tokenId, string memory _uri)\n        internal\n        validNFToken(_tokenId)\n    {\n        idToUri[_tokenId] = _uri;\n    }\n}\n",
>>>>>>> Stashed changes
  "sourcePath": "/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/nf-token-metadata.sol",
  "ast": {
    "absolutePath": "/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/nf-token-metadata.sol",
    "exportedSymbols": {
      "AddressUtils": [
<<<<<<< Updated upstream
        3241
      ],
      "ERC165": [
        3253
      ],
      "ERC721": [
        1963
      ],
      "ERC721Metadata": [
        1832
      ],
      "ERC721TokenReceiver": [
        1850
      ],
      "NFToken": [
        3209
      ],
      "NFTokenMetadata": [
        2467
      ],
      "SupportsInterface": [
        3290
      ]
    },
    "id": 2468,
=======
        1992
      ],
      "ERC165": [
        2004
      ],
      "ERC721": [
        794
      ],
      "ERC721Metadata": [
        663
      ],
      "ERC721TokenReceiver": [
        681
      ],
      "NFToken": [
        1960
      ],
      "NFTokenMetadata": [
        1272
      ],
      "SupportsInterface": [
        2041
      ]
    },
    "id": 1273,
>>>>>>> Stashed changes
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< Updated upstream
        "id": 2292,
=======
        "id": 1123,
>>>>>>> Stashed changes
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:12"
      },
      {
        "absolutePath": "/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/nf-token.sol",
        "file": "./nf-token.sol",
<<<<<<< Updated upstream
        "id": 2293,
        "nodeType": "ImportDirective",
        "scope": 2468,
        "sourceUnit": 3210,
=======
        "id": 1124,
        "nodeType": "ImportDirective",
        "scope": 1273,
        "sourceUnit": 1961,
>>>>>>> Stashed changes
        "src": "66:24:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/erc721-metadata.sol",
        "file": "./erc721-metadata.sol",
<<<<<<< Updated upstream
        "id": 2294,
        "nodeType": "ImportDirective",
        "scope": 2468,
        "sourceUnit": 1833,
=======
        "id": 1125,
        "nodeType": "ImportDirective",
        "scope": 1273,
        "sourceUnit": 664,
>>>>>>> Stashed changes
        "src": "91:31:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
<<<<<<< Updated upstream
              "id": 2296,
              "name": "NFToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3209,
              "src": "242:7:12"
            },
            "id": 2297,
=======
              "id": 1127,
              "name": "NFToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1960,
              "src": "242:7:12"
            },
            "id": 1128,
>>>>>>> Stashed changes
            "nodeType": "InheritanceSpecifier",
            "src": "242:7:12"
          },
          {
            "baseName": {
<<<<<<< Updated upstream
              "id": 2298,
              "name": "ERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1832,
              "src": "251:14:12"
            },
            "id": 2299,
=======
              "id": 1129,
              "name": "ERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 663,
              "src": "251:14:12"
            },
            "id": 1130,
>>>>>>> Stashed changes
            "nodeType": "InheritanceSpecifier",
            "src": "251:14:12"
          }
        ],
        "contractDependencies": [
<<<<<<< Updated upstream
          1832,
          1963,
          3209,
          3253,
          3290
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2295,
=======
          663,
          794,
          1960,
          2004,
          2041
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1126,
>>>>>>> Stashed changes
          "nodeType": "StructuredDocumentation",
          "src": "124:89:12",
          "text": " @dev Optional metadata implementation for ERC-721 non-fungible token standard."
        },
        "fullyImplemented": true,
<<<<<<< Updated upstream
        "id": 2467,
        "linearizedBaseContracts": [
          2467,
          1832,
          3209,
          3290,
          3253,
          1963
=======
        "id": 1272,
        "linearizedBaseContracts": [
          1272,
          663,
          1960,
          2041,
          2004,
          794
>>>>>>> Stashed changes
        ],
        "name": "NFTokenMetadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
<<<<<<< Updated upstream
              "id": 2300,
=======
              "id": 1131,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "272:68:12",
              "text": " @dev A descriptive name for a collection of NFTs."
            },
<<<<<<< Updated upstream
            "id": 2302,
            "mutability": "mutable",
            "name": "nftName",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
=======
            "id": 1133,
            "mutability": "mutable",
            "name": "nftName",
            "nodeType": "VariableDeclaration",
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "345:23:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
<<<<<<< Updated upstream
              "id": 2301,
=======
              "id": 1132,
>>>>>>> Stashed changes
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "345:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
<<<<<<< Updated upstream
              "id": 2303,
=======
              "id": 1134,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "375:57:12",
              "text": " @dev An abbreviated name for NFTokens."
            },
<<<<<<< Updated upstream
            "id": 2305,
            "mutability": "mutable",
            "name": "nftSymbol",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
=======
            "id": 1136,
            "mutability": "mutable",
            "name": "nftSymbol",
            "nodeType": "VariableDeclaration",
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "437:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
<<<<<<< Updated upstream
              "id": 2304,
=======
              "id": 1135,
>>>>>>> Stashed changes
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "437:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
<<<<<<< Updated upstream
              "id": 2306,
=======
              "id": 1137,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "469:60:12",
              "text": " @dev Mapping from NFT ID to metadata uri."
            },
<<<<<<< Updated upstream
            "id": 2310,
            "mutability": "mutable",
            "name": "idToUri",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
=======
            "id": 1141,
            "mutability": "mutable",
            "name": "idToUri",
            "nodeType": "VariableDeclaration",
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "534:43:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
<<<<<<< Updated upstream
              "id": 2309,
              "keyType": {
                "id": 2307,
=======
              "id": 1140,
              "keyType": {
                "id": 1138,
>>>>>>> Stashed changes
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "542:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "534:26:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
<<<<<<< Updated upstream
                "id": 2308,
=======
                "id": 1139,
>>>>>>> Stashed changes
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "553:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
<<<<<<< Updated upstream
              "id": 2311,
=======
              "id": 1142,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "584:45:12",
              "text": " @dev Array of all NFT IDs."
            },
<<<<<<< Updated upstream
            "id": 2314,
            "mutability": "mutable",
            "name": "mintedTokens",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
=======
            "id": 1145,
            "mutability": "mutable",
            "name": "mintedTokens",
            "nodeType": "VariableDeclaration",
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "634:31:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
<<<<<<< Updated upstream
                "id": 2312,
=======
                "id": 1143,
>>>>>>> Stashed changes
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "634:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
<<<<<<< Updated upstream
              "id": 2313,
=======
              "id": 1144,
>>>>>>> Stashed changes
              "nodeType": "ArrayTypeName",
              "src": "634:9:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< Updated upstream
              "id": 2324,
=======
              "id": 1155,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "826:73:12",
              "statements": [
                {
                  "expression": {
<<<<<<< Updated upstream
                    "id": 2322,
=======
                    "id": 1153,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< Updated upstream
                        "id": 2318,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3264,
=======
                        "id": 1149,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2015,
>>>>>>> Stashed changes
                        "src": "836:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
<<<<<<< Updated upstream
                      "id": 2320,
                      "indexExpression": {
                        "hexValue": "30783562356531333966",
                        "id": 2319,
=======
                      "id": 1151,
                      "indexExpression": {
                        "hexValue": "30783562356531333966",
                        "id": 1150,
>>>>>>> Stashed changes
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "856:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        "value": "0x5b5e139f"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "836:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
<<<<<<< Updated upstream
                      "id": 2321,
=======
                      "id": 1152,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "870:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "836:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 2323,
=======
                  "id": 1154,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "836:38:12"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 2315,
=======
              "id": 1146,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "672:135:12",
              "text": " @dev Contract constructor.\n @notice When implementing this contract don't forget to set nftName and nftSymbol."
            },
<<<<<<< Updated upstream
            "id": 2325,
=======
            "id": 1156,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< Updated upstream
              "id": 2316,
=======
              "id": 1147,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "823:2:12"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 2317,
=======
              "id": 1148,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "826:0:12"
            },
<<<<<<< Updated upstream
            "scope": 2467,
=======
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "812:87:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              1817
            ],
            "body": {
              "id": 2336,
=======
              648
            ],
            "body": {
              "id": 1167,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "1099:32:12",
              "statements": [
                {
                  "expression": {
<<<<<<< Updated upstream
                    "id": 2334,
=======
                    "id": 1165,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< Updated upstream
                      "id": 2332,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2330,
=======
                      "id": 1163,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1161,
>>>>>>> Stashed changes
                      "src": "1109:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< Updated upstream
                      "id": 2333,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2302,
=======
                      "id": 1164,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1133,
>>>>>>> Stashed changes
                      "src": "1117:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1109:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 2335,
=======
                  "id": 1166,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "1109:15:12"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 2326,
=======
              "id": 1157,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "905:120:12",
              "text": " @dev Returns a descriptive name for a collection of NFTokens.\n @return _name Representing name."
            },
            "functionSelector": "06fdde03",
<<<<<<< Updated upstream
            "id": 2337,
=======
            "id": 1168,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 2328,
=======
              "id": 1159,
>>>>>>> Stashed changes
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1060:8:12"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 2327,
=======
              "id": 1158,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1043:2:12"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 2331,
=======
              "id": 1162,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2330,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2337,
=======
                  "id": 1161,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1168,
>>>>>>> Stashed changes
                  "src": "1078:19:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2329,
=======
                    "id": 1160,
>>>>>>> Stashed changes
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1078:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1077:21:12"
            },
<<<<<<< Updated upstream
            "scope": 2467,
=======
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "1030:101:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              1823
            ],
            "body": {
              "id": 2348,
=======
              654
            ],
            "body": {
              "id": 1179,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "1324:36:12",
              "statements": [
                {
                  "expression": {
<<<<<<< Updated upstream
                    "id": 2346,
=======
                    "id": 1177,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< Updated upstream
                      "id": 2344,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2342,
=======
                      "id": 1175,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1173,
>>>>>>> Stashed changes
                      "src": "1334:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< Updated upstream
                      "id": 2345,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2305,
=======
                      "id": 1176,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1136,
>>>>>>> Stashed changes
                      "src": "1344:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1334:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 2347,
=======
                  "id": 1178,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "1334:19:12"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 2338,
=======
              "id": 1169,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "1137:109:12",
              "text": " @dev Returns an abbreviated name for NFTokens.\n @return _symbol Representing symbol."
            },
            "functionSelector": "95d89b41",
<<<<<<< Updated upstream
            "id": 2349,
=======
            "id": 1180,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 2340,
=======
              "id": 1171,
>>>>>>> Stashed changes
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1283:8:12"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 2339,
=======
              "id": 1170,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1266:2:12"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 2343,
=======
              "id": 1174,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2342,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2349,
=======
                  "id": 1173,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1180,
>>>>>>> Stashed changes
                  "src": "1301:21:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2341,
=======
                    "id": 1172,
>>>>>>> Stashed changes
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1301:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1300:23:12"
            },
<<<<<<< Updated upstream
            "scope": 2467,
=======
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "1251:109:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
<<<<<<< Updated upstream
              "id": 2358,
=======
              "id": 1189,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "1529:43:12",
              "statements": [
                {
                  "expression": {
                    "expression": {
<<<<<<< Updated upstream
                      "id": 2355,
                      "name": "mintedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2314,
=======
                      "id": 1186,
                      "name": "mintedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1145,
>>>>>>> Stashed changes
                      "src": "1546:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 2356,
=======
                    "id": 1187,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1546:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< Updated upstream
                  "functionReturnParameters": 2354,
                  "id": 2357,
=======
                  "functionReturnParameters": 1185,
                  "id": 1188,
>>>>>>> Stashed changes
                  "nodeType": "Return",
                  "src": "1539:26:12"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 2350,
=======
              "id": 1181,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "1366:104:12",
              "text": " @dev Returns the count of all existing NFTokens.\n @return Total supply of NFTs."
            },
            "functionSelector": "626be567",
<<<<<<< Updated upstream
            "id": 2359,
=======
            "id": 1190,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< Updated upstream
              "id": 2351,
=======
              "id": 1182,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1494:2:12"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 2354,
=======
              "id": 1185,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2353,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2359,
=======
                  "id": 1184,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
>>>>>>> Stashed changes
                  "src": "1520:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2352,
=======
                    "id": 1183,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:9:12"
            },
<<<<<<< Updated upstream
            "scope": 2467,
=======
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "1475:97:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
<<<<<<< Updated upstream
              "id": 2374,
=======
              "id": 1205,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "1749:44:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 2371,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2362,
=======
                        "id": 1202,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
>>>>>>> Stashed changes
                        "src": "1777:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 2368,
                        "name": "mintedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2314,
=======
                        "id": 1199,
                        "name": "mintedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
>>>>>>> Stashed changes
                        "src": "1759:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
<<<<<<< Updated upstream
                      "id": 2370,
=======
                      "id": 1201,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1759:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 2372,
=======
                    "id": 1203,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1759:27:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 2373,
=======
                  "id": 1204,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "1759:27:12"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 2360,
=======
              "id": 1191,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "1578:101:12",
              "text": " @dev Push NFT token to array.\n @param _tokenId Id for which we want to push."
            },
<<<<<<< Updated upstream
            "id": 2375,
=======
            "id": 1206,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
<<<<<<< Updated upstream
                    "id": 2365,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2362,
=======
                    "id": 1196,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1193,
>>>>>>> Stashed changes
                    "src": "1739:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
<<<<<<< Updated upstream
                "id": 2366,
                "modifierName": {
                  "id": 2364,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2614,
=======
                "id": 1197,
                "modifierName": {
                  "id": 1195,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1419,
>>>>>>> Stashed changes
                  "src": "1726:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1726:22:12"
              }
            ],
            "name": "_push",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< Updated upstream
              "id": 2363,
=======
              "id": 1194,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2362,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2375,
=======
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1206,
>>>>>>> Stashed changes
                  "src": "1699:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2361,
=======
                    "id": 1192,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1699:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1698:18:12"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 2367,
=======
              "id": 1198,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1749:0:12"
            },
<<<<<<< Updated upstream
            "scope": 2467,
=======
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "1684:109:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              1831
            ],
            "body": {
              "id": 2391,
=======
              662
            ],
            "body": {
              "id": 1222,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "2101:41:12",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
<<<<<<< Updated upstream
                      "id": 2387,
                      "name": "idToUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2310,
=======
                      "id": 1218,
                      "name": "idToUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1141,
>>>>>>> Stashed changes
                      "src": "2118:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 2389,
                    "indexExpression": {
                      "id": 2388,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2378,
=======
                    "id": 1220,
                    "indexExpression": {
                      "id": 1219,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1209,
>>>>>>> Stashed changes
                      "src": "2126:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2118:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< Updated upstream
                  "functionReturnParameters": 2386,
                  "id": 2390,
=======
                  "functionReturnParameters": 1217,
                  "id": 1221,
>>>>>>> Stashed changes
                  "nodeType": "Return",
                  "src": "2111:24:12"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 2376,
=======
              "id": 1207,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "1799:147:12",
              "text": " @dev A distinct URI (RFC 3986) for a given NFT.\n @param _tokenId Id for which we want uri.\n @return URI of _tokenId."
            },
            "functionSelector": "c87b56dd",
<<<<<<< Updated upstream
            "id": 2392,
=======
            "id": 1223,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
<<<<<<< Updated upstream
                    "id": 2382,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2378,
=======
                    "id": 1213,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1209,
>>>>>>> Stashed changes
                    "src": "2055:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
<<<<<<< Updated upstream
                "id": 2383,
                "modifierName": {
                  "id": 2381,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2614,
=======
                "id": 1214,
                "modifierName": {
                  "id": 1212,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1419,
>>>>>>> Stashed changes
                  "src": "2042:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "2042:22:12"
              }
            ],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 2380,
=======
              "id": 1211,
>>>>>>> Stashed changes
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2025:8:12"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 2379,
=======
              "id": 1210,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2378,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
=======
                  "id": 1209,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1223,
>>>>>>> Stashed changes
                  "src": "1969:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2377,
=======
                    "id": 1208,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1969:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1968:18:12"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 2386,
=======
              "id": 1217,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2385,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
=======
                  "id": 1216,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1223,
>>>>>>> Stashed changes
                  "src": "2082:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2384,
=======
                    "id": 1215,
>>>>>>> Stashed changes
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2082:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2081:15:12"
            },
<<<<<<< Updated upstream
            "scope": 2467,
=======
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "1951:191:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              3031
            ],
            "body": {
              "id": 2421,
=======
              1782
            ],
            "body": {
              "id": 1252,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "2612:139:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 2402,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2395,
=======
                        "id": 1233,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1226,
>>>>>>> Stashed changes
                        "src": "2634:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 2399,
=======
                        "id": 1230,
>>>>>>> Stashed changes
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2622:5:12",
                        "typeDescriptions": {
<<<<<<< Updated upstream
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadata_$2467_$",
                          "typeString": "type(contract super NFTokenMetadata)"
                        }
                      },
                      "id": 2401,
=======
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadata_$1272_$",
                          "typeString": "type(contract super NFTokenMetadata)"
                        }
                      },
                      "id": 1232,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 3031,
=======
                      "referencedDeclaration": 1782,
>>>>>>> Stashed changes
                      "src": "2622:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 2403,
=======
                    "id": 1234,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2622:21:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 2404,
=======
                  "id": 1235,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "2622:21:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< Updated upstream
                    "id": 2413,
=======
                    "id": 1244,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
<<<<<<< Updated upstream
                              "id": 2407,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2310,
=======
                              "id": 1238,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1141,
>>>>>>> Stashed changes
                              "src": "2664:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
<<<<<<< Updated upstream
                            "id": 2409,
                            "indexExpression": {
                              "id": 2408,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2395,
=======
                            "id": 1240,
                            "indexExpression": {
                              "id": 1239,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1226,
>>>>>>> Stashed changes
                              "src": "2672:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2664:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
<<<<<<< Updated upstream
                          "id": 2406,
=======
                          "id": 1237,
>>>>>>> Stashed changes
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2658:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
<<<<<<< Updated upstream
                            "id": 2405,
=======
                            "id": 1236,
>>>>>>> Stashed changes
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2658:5:12",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< Updated upstream
                        "id": 2410,
=======
                        "id": 1241,
>>>>>>> Stashed changes
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2658:24:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
<<<<<<< Updated upstream
                      "id": 2411,
=======
                      "id": 1242,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2658:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
<<<<<<< Updated upstream
                      "id": 2412,
=======
                      "id": 1243,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2693:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2658:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 2420,
                  "nodeType": "IfStatement",
                  "src": "2654:91:12",
                  "trueBody": {
                    "id": 2419,
=======
                  "id": 1251,
                  "nodeType": "IfStatement",
                  "src": "2654:91:12",
                  "trueBody": {
                    "id": 1250,
>>>>>>> Stashed changes
                    "nodeType": "Block",
                    "src": "2696:49:12",
                    "statements": [
                      {
                        "expression": {
<<<<<<< Updated upstream
                          "id": 2417,
=======
                          "id": 1248,
>>>>>>> Stashed changes
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2710:24:12",
                          "subExpression": {
                            "baseExpression": {
<<<<<<< Updated upstream
                              "id": 2414,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2310,
=======
                              "id": 1245,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1141,
>>>>>>> Stashed changes
                              "src": "2717:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
<<<<<<< Updated upstream
                            "id": 2416,
                            "indexExpression": {
                              "id": 2415,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2395,
=======
                            "id": 1247,
                            "indexExpression": {
                              "id": 1246,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1226,
>>>>>>> Stashed changes
                              "src": "2725:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2717:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
<<<<<<< Updated upstream
                        "id": 2418,
=======
                        "id": 1249,
>>>>>>> Stashed changes
                        "nodeType": "ExpressionStatement",
                        "src": "2710:24:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 2393,
=======
              "id": 1224,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "2148:400:12",
              "text": " @dev Burns a NFT.\n @notice This is an internal function which should be called from user-implemented external\n burn function. Its purpose is to show and properly initialize data structures when using this\n implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n NFT.\n @param _tokenId ID of the NFT to be burned."
            },
<<<<<<< Updated upstream
            "id": 2422,
=======
            "id": 1253,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 2397,
=======
              "id": 1228,
>>>>>>> Stashed changes
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2603:8:12"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 2396,
=======
              "id": 1227,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2395,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2422,
=======
                  "id": 1226,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1253,
>>>>>>> Stashed changes
                  "src": "2568:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2394,
=======
                    "id": 1225,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2568:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2567:18:12"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 2398,
=======
              "id": 1229,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2612:0:12"
            },
<<<<<<< Updated upstream
            "scope": 2467,
=======
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "2553:198:12",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< Updated upstream
              "id": 2439,
=======
              "id": 1270,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "3266:41:12",
              "statements": [
                {
                  "expression": {
<<<<<<< Updated upstream
                    "id": 2437,
=======
                    "id": 1268,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< Updated upstream
                        "id": 2433,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2310,
=======
                        "id": 1264,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1141,
>>>>>>> Stashed changes
                        "src": "3276:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
<<<<<<< Updated upstream
                      "id": 2435,
                      "indexExpression": {
                        "id": 2434,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2425,
=======
                      "id": 1266,
                      "indexExpression": {
                        "id": 1265,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
>>>>>>> Stashed changes
                        "src": "3284:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3276:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< Updated upstream
                      "id": 2436,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2427,
=======
                      "id": 1267,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1258,
>>>>>>> Stashed changes
                      "src": "3296:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3276:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 2438,
=======
                  "id": 1269,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "3276:24:12"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 2423,
=======
              "id": 1254,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "2757:392:12",
              "text": " @dev Set a distinct URI (RFC 3986) for a given NFT ID.\n @notice This is an internal function which should be called from user-implemented external\n function. Its purpose is to show and properly initialize data structures when using this\n implementation.\n @param _tokenId Id for which we want URI.\n @param _uri String representing RFC 3986 URI."
            },
<<<<<<< Updated upstream
            "id": 2440,
=======
            "id": 1271,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
<<<<<<< Updated upstream
                    "id": 2430,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2425,
=======
                    "id": 1261,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1256,
>>>>>>> Stashed changes
                    "src": "3252:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
<<<<<<< Updated upstream
                "id": 2431,
                "modifierName": {
                  "id": 2429,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2614,
=======
                "id": 1262,
                "modifierName": {
                  "id": 1260,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1419,
>>>>>>> Stashed changes
                  "src": "3239:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "3239:22:12"
              }
            ],
            "name": "_setTokenUri",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< Updated upstream
              "id": 2428,
=======
              "id": 1259,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2425,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2440,
=======
                  "id": 1256,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1271,
>>>>>>> Stashed changes
                  "src": "3176:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2424,
=======
                    "id": 1255,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3176:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2427,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 2440,
=======
                  "id": 1258,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 1271,
>>>>>>> Stashed changes
                  "src": "3194:18:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2426,
=======
                    "id": 1257,
>>>>>>> Stashed changes
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3194:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3175:38:12"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 2432,
=======
              "id": 1263,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3266:0:12"
            },
<<<<<<< Updated upstream
            "scope": 2467,
=======
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "3154:153:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2465,
              "nodeType": "Block",
              "src": "3565:59:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2459,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3594:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTokenMetadata_$2467",
                              "typeString": "contract NFTokenMetadata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTokenMetadata_$2467",
                              "typeString": "contract NFTokenMetadata"
                            }
                          ],
                          "id": 2458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3586:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2457,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3586:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3586:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2461,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2443,
                        "src": "3601:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2462,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2445,
                        "src": "3608:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2454,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3575:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadata_$2467_$",
                          "typeString": "type(contract super NFTokenMetadata)"
                        }
                      },
                      "id": 2456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_buy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2719,
                      "src": "3575:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3575:42:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2464,
                  "nodeType": "ExpressionStatement",
                  "src": "3575:42:12"
                }
              ]
            },
            "documentation": {
              "id": 2441,
              "nodeType": "StructuredDocumentation",
              "src": "3313:101:12",
              "text": " @dev Buy an NFT.\n @param _tokenId of the NFT to be bought by the msg.sender."
            },
            "id": 2466,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2448,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2445,
                    "src": "3521:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2449,
                "modifierName": {
                  "id": 2447,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2614,
                  "src": "3508:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "3508:22:12"
              },
              {
                "arguments": [
                  {
                    "id": 2451,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2445,
                    "src": "3551:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2452,
                "modifierName": {
                  "id": 2450,
                  "name": "canTransfer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2595,
                  "src": "3539:11:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "3539:21:12"
              }
            ],
            "name": "_buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2443,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2466,
                  "src": "3434:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3434:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2445,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2466,
                  "src": "3449:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3449:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3433:33:12"
            },
            "returnParameters": {
              "id": 2453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3565:0:12"
            },
            "scope": 2467,
            "src": "3420:204:12",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
<<<<<<< Updated upstream
        "scope": 2468,
        "src": "214:3412:12"
      }
    ],
    "src": "32:3595:12"
=======
        "scope": 1273,
        "src": "214:3095:12"
      }
    ],
    "src": "32:3278:12"
>>>>>>> Stashed changes
  },
  "legacyAST": {
    "absolutePath": "/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/nf-token-metadata.sol",
    "exportedSymbols": {
      "AddressUtils": [
<<<<<<< Updated upstream
        3241
      ],
      "ERC165": [
        3253
      ],
      "ERC721": [
        1963
      ],
      "ERC721Metadata": [
        1832
      ],
      "ERC721TokenReceiver": [
        1850
      ],
      "NFToken": [
        3209
      ],
      "NFTokenMetadata": [
        2467
      ],
      "SupportsInterface": [
        3290
      ]
    },
    "id": 2468,
=======
        1992
      ],
      "ERC165": [
        2004
      ],
      "ERC721": [
        794
      ],
      "ERC721Metadata": [
        663
      ],
      "ERC721TokenReceiver": [
        681
      ],
      "NFToken": [
        1960
      ],
      "NFTokenMetadata": [
        1272
      ],
      "SupportsInterface": [
        2041
      ]
    },
    "id": 1273,
>>>>>>> Stashed changes
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< Updated upstream
        "id": 2292,
=======
        "id": 1123,
>>>>>>> Stashed changes
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:12"
      },
      {
        "absolutePath": "/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/nf-token.sol",
        "file": "./nf-token.sol",
<<<<<<< Updated upstream
        "id": 2293,
        "nodeType": "ImportDirective",
        "scope": 2468,
        "sourceUnit": 3210,
=======
        "id": 1124,
        "nodeType": "ImportDirective",
        "scope": 1273,
        "sourceUnit": 1961,
>>>>>>> Stashed changes
        "src": "66:24:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/fahmi/Downloads/Fahmi Learn/Blockchain/ScratchNFT/Belajar-NFT-Part-1/contracts/tokens/erc721-metadata.sol",
        "file": "./erc721-metadata.sol",
<<<<<<< Updated upstream
        "id": 2294,
        "nodeType": "ImportDirective",
        "scope": 2468,
        "sourceUnit": 1833,
=======
        "id": 1125,
        "nodeType": "ImportDirective",
        "scope": 1273,
        "sourceUnit": 664,
>>>>>>> Stashed changes
        "src": "91:31:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
<<<<<<< Updated upstream
              "id": 2296,
              "name": "NFToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3209,
              "src": "242:7:12"
            },
            "id": 2297,
=======
              "id": 1127,
              "name": "NFToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1960,
              "src": "242:7:12"
            },
            "id": 1128,
>>>>>>> Stashed changes
            "nodeType": "InheritanceSpecifier",
            "src": "242:7:12"
          },
          {
            "baseName": {
<<<<<<< Updated upstream
              "id": 2298,
              "name": "ERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1832,
              "src": "251:14:12"
            },
            "id": 2299,
=======
              "id": 1129,
              "name": "ERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 663,
              "src": "251:14:12"
            },
            "id": 1130,
>>>>>>> Stashed changes
            "nodeType": "InheritanceSpecifier",
            "src": "251:14:12"
          }
        ],
        "contractDependencies": [
<<<<<<< Updated upstream
          1832,
          1963,
          3209,
          3253,
          3290
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2295,
=======
          663,
          794,
          1960,
          2004,
          2041
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1126,
>>>>>>> Stashed changes
          "nodeType": "StructuredDocumentation",
          "src": "124:89:12",
          "text": " @dev Optional metadata implementation for ERC-721 non-fungible token standard."
        },
        "fullyImplemented": true,
<<<<<<< Updated upstream
        "id": 2467,
        "linearizedBaseContracts": [
          2467,
          1832,
          3209,
          3290,
          3253,
          1963
=======
        "id": 1272,
        "linearizedBaseContracts": [
          1272,
          663,
          1960,
          2041,
          2004,
          794
>>>>>>> Stashed changes
        ],
        "name": "NFTokenMetadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
<<<<<<< Updated upstream
              "id": 2300,
=======
              "id": 1131,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "272:68:12",
              "text": " @dev A descriptive name for a collection of NFTs."
            },
<<<<<<< Updated upstream
            "id": 2302,
            "mutability": "mutable",
            "name": "nftName",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
=======
            "id": 1133,
            "mutability": "mutable",
            "name": "nftName",
            "nodeType": "VariableDeclaration",
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "345:23:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
<<<<<<< Updated upstream
              "id": 2301,
=======
              "id": 1132,
>>>>>>> Stashed changes
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "345:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
<<<<<<< Updated upstream
              "id": 2303,
=======
              "id": 1134,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "375:57:12",
              "text": " @dev An abbreviated name for NFTokens."
            },
<<<<<<< Updated upstream
            "id": 2305,
            "mutability": "mutable",
            "name": "nftSymbol",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
=======
            "id": 1136,
            "mutability": "mutable",
            "name": "nftSymbol",
            "nodeType": "VariableDeclaration",
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "437:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
<<<<<<< Updated upstream
              "id": 2304,
=======
              "id": 1135,
>>>>>>> Stashed changes
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "437:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
<<<<<<< Updated upstream
              "id": 2306,
=======
              "id": 1137,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "469:60:12",
              "text": " @dev Mapping from NFT ID to metadata uri."
            },
<<<<<<< Updated upstream
            "id": 2310,
            "mutability": "mutable",
            "name": "idToUri",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
=======
            "id": 1141,
            "mutability": "mutable",
            "name": "idToUri",
            "nodeType": "VariableDeclaration",
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "534:43:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
<<<<<<< Updated upstream
              "id": 2309,
              "keyType": {
                "id": 2307,
=======
              "id": 1140,
              "keyType": {
                "id": 1138,
>>>>>>> Stashed changes
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "542:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "534:26:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
<<<<<<< Updated upstream
                "id": 2308,
=======
                "id": 1139,
>>>>>>> Stashed changes
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "553:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
<<<<<<< Updated upstream
              "id": 2311,
=======
              "id": 1142,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "584:45:12",
              "text": " @dev Array of all NFT IDs."
            },
<<<<<<< Updated upstream
            "id": 2314,
            "mutability": "mutable",
            "name": "mintedTokens",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
=======
            "id": 1145,
            "mutability": "mutable",
            "name": "mintedTokens",
            "nodeType": "VariableDeclaration",
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "634:31:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
<<<<<<< Updated upstream
                "id": 2312,
=======
                "id": 1143,
>>>>>>> Stashed changes
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "634:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
<<<<<<< Updated upstream
              "id": 2313,
=======
              "id": 1144,
>>>>>>> Stashed changes
              "nodeType": "ArrayTypeName",
              "src": "634:9:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< Updated upstream
              "id": 2324,
=======
              "id": 1155,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "826:73:12",
              "statements": [
                {
                  "expression": {
<<<<<<< Updated upstream
                    "id": 2322,
=======
                    "id": 1153,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< Updated upstream
                        "id": 2318,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3264,
=======
                        "id": 1149,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2015,
>>>>>>> Stashed changes
                        "src": "836:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
<<<<<<< Updated upstream
                      "id": 2320,
                      "indexExpression": {
                        "hexValue": "30783562356531333966",
                        "id": 2319,
=======
                      "id": 1151,
                      "indexExpression": {
                        "hexValue": "30783562356531333966",
                        "id": 1150,
>>>>>>> Stashed changes
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "856:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        "value": "0x5b5e139f"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "836:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
<<<<<<< Updated upstream
                      "id": 2321,
=======
                      "id": 1152,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "870:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "836:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 2323,
=======
                  "id": 1154,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "836:38:12"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 2315,
=======
              "id": 1146,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "672:135:12",
              "text": " @dev Contract constructor.\n @notice When implementing this contract don't forget to set nftName and nftSymbol."
            },
<<<<<<< Updated upstream
            "id": 2325,
=======
            "id": 1156,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< Updated upstream
              "id": 2316,
=======
              "id": 1147,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "823:2:12"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 2317,
=======
              "id": 1148,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "826:0:12"
            },
<<<<<<< Updated upstream
            "scope": 2467,
=======
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "812:87:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              1817
            ],
            "body": {
              "id": 2336,
=======
              648
            ],
            "body": {
              "id": 1167,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "1099:32:12",
              "statements": [
                {
                  "expression": {
<<<<<<< Updated upstream
                    "id": 2334,
=======
                    "id": 1165,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< Updated upstream
                      "id": 2332,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2330,
=======
                      "id": 1163,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1161,
>>>>>>> Stashed changes
                      "src": "1109:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< Updated upstream
                      "id": 2333,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2302,
=======
                      "id": 1164,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1133,
>>>>>>> Stashed changes
                      "src": "1117:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1109:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 2335,
=======
                  "id": 1166,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "1109:15:12"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 2326,
=======
              "id": 1157,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "905:120:12",
              "text": " @dev Returns a descriptive name for a collection of NFTokens.\n @return _name Representing name."
            },
            "functionSelector": "06fdde03",
<<<<<<< Updated upstream
            "id": 2337,
=======
            "id": 1168,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 2328,
=======
              "id": 1159,
>>>>>>> Stashed changes
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1060:8:12"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 2327,
=======
              "id": 1158,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1043:2:12"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 2331,
=======
              "id": 1162,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2330,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2337,
=======
                  "id": 1161,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1168,
>>>>>>> Stashed changes
                  "src": "1078:19:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2329,
=======
                    "id": 1160,
>>>>>>> Stashed changes
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1078:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1077:21:12"
            },
<<<<<<< Updated upstream
            "scope": 2467,
=======
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "1030:101:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              1823
            ],
            "body": {
              "id": 2348,
=======
              654
            ],
            "body": {
              "id": 1179,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "1324:36:12",
              "statements": [
                {
                  "expression": {
<<<<<<< Updated upstream
                    "id": 2346,
=======
                    "id": 1177,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< Updated upstream
                      "id": 2344,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2342,
=======
                      "id": 1175,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1173,
>>>>>>> Stashed changes
                      "src": "1334:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< Updated upstream
                      "id": 2345,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2305,
=======
                      "id": 1176,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1136,
>>>>>>> Stashed changes
                      "src": "1344:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1334:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 2347,
=======
                  "id": 1178,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "1334:19:12"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 2338,
=======
              "id": 1169,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "1137:109:12",
              "text": " @dev Returns an abbreviated name for NFTokens.\n @return _symbol Representing symbol."
            },
            "functionSelector": "95d89b41",
<<<<<<< Updated upstream
            "id": 2349,
=======
            "id": 1180,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 2340,
=======
              "id": 1171,
>>>>>>> Stashed changes
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1283:8:12"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 2339,
=======
              "id": 1170,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1266:2:12"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 2343,
=======
              "id": 1174,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2342,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2349,
=======
                  "id": 1173,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1180,
>>>>>>> Stashed changes
                  "src": "1301:21:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2341,
=======
                    "id": 1172,
>>>>>>> Stashed changes
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1301:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1300:23:12"
            },
<<<<<<< Updated upstream
            "scope": 2467,
=======
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "1251:109:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
<<<<<<< Updated upstream
              "id": 2358,
=======
              "id": 1189,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "1529:43:12",
              "statements": [
                {
                  "expression": {
                    "expression": {
<<<<<<< Updated upstream
                      "id": 2355,
                      "name": "mintedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2314,
=======
                      "id": 1186,
                      "name": "mintedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1145,
>>>>>>> Stashed changes
                      "src": "1546:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 2356,
=======
                    "id": 1187,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1546:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< Updated upstream
                  "functionReturnParameters": 2354,
                  "id": 2357,
=======
                  "functionReturnParameters": 1185,
                  "id": 1188,
>>>>>>> Stashed changes
                  "nodeType": "Return",
                  "src": "1539:26:12"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 2350,
=======
              "id": 1181,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "1366:104:12",
              "text": " @dev Returns the count of all existing NFTokens.\n @return Total supply of NFTs."
            },
            "functionSelector": "626be567",
<<<<<<< Updated upstream
            "id": 2359,
=======
            "id": 1190,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< Updated upstream
              "id": 2351,
=======
              "id": 1182,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1494:2:12"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 2354,
=======
              "id": 1185,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2353,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2359,
=======
                  "id": 1184,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
>>>>>>> Stashed changes
                  "src": "1520:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2352,
=======
                    "id": 1183,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:9:12"
            },
<<<<<<< Updated upstream
            "scope": 2467,
=======
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "1475:97:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
<<<<<<< Updated upstream
              "id": 2374,
=======
              "id": 1205,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "1749:44:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 2371,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2362,
=======
                        "id": 1202,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
>>>>>>> Stashed changes
                        "src": "1777:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 2368,
                        "name": "mintedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2314,
=======
                        "id": 1199,
                        "name": "mintedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
>>>>>>> Stashed changes
                        "src": "1759:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
<<<<<<< Updated upstream
                      "id": 2370,
=======
                      "id": 1201,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1759:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 2372,
=======
                    "id": 1203,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1759:27:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 2373,
=======
                  "id": 1204,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "1759:27:12"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 2360,
=======
              "id": 1191,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "1578:101:12",
              "text": " @dev Push NFT token to array.\n @param _tokenId Id for which we want to push."
            },
<<<<<<< Updated upstream
            "id": 2375,
=======
            "id": 1206,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
<<<<<<< Updated upstream
                    "id": 2365,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2362,
=======
                    "id": 1196,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1193,
>>>>>>> Stashed changes
                    "src": "1739:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
<<<<<<< Updated upstream
                "id": 2366,
                "modifierName": {
                  "id": 2364,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2614,
=======
                "id": 1197,
                "modifierName": {
                  "id": 1195,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1419,
>>>>>>> Stashed changes
                  "src": "1726:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1726:22:12"
              }
            ],
            "name": "_push",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< Updated upstream
              "id": 2363,
=======
              "id": 1194,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2362,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2375,
=======
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1206,
>>>>>>> Stashed changes
                  "src": "1699:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2361,
=======
                    "id": 1192,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1699:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1698:18:12"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 2367,
=======
              "id": 1198,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1749:0:12"
            },
<<<<<<< Updated upstream
            "scope": 2467,
=======
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "1684:109:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              1831
            ],
            "body": {
              "id": 2391,
=======
              662
            ],
            "body": {
              "id": 1222,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "2101:41:12",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
<<<<<<< Updated upstream
                      "id": 2387,
                      "name": "idToUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2310,
=======
                      "id": 1218,
                      "name": "idToUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1141,
>>>>>>> Stashed changes
                      "src": "2118:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 2389,
                    "indexExpression": {
                      "id": 2388,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2378,
=======
                    "id": 1220,
                    "indexExpression": {
                      "id": 1219,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1209,
>>>>>>> Stashed changes
                      "src": "2126:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2118:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< Updated upstream
                  "functionReturnParameters": 2386,
                  "id": 2390,
=======
                  "functionReturnParameters": 1217,
                  "id": 1221,
>>>>>>> Stashed changes
                  "nodeType": "Return",
                  "src": "2111:24:12"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 2376,
=======
              "id": 1207,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "1799:147:12",
              "text": " @dev A distinct URI (RFC 3986) for a given NFT.\n @param _tokenId Id for which we want uri.\n @return URI of _tokenId."
            },
            "functionSelector": "c87b56dd",
<<<<<<< Updated upstream
            "id": 2392,
=======
            "id": 1223,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
<<<<<<< Updated upstream
                    "id": 2382,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2378,
=======
                    "id": 1213,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1209,
>>>>>>> Stashed changes
                    "src": "2055:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
<<<<<<< Updated upstream
                "id": 2383,
                "modifierName": {
                  "id": 2381,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2614,
=======
                "id": 1214,
                "modifierName": {
                  "id": 1212,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1419,
>>>>>>> Stashed changes
                  "src": "2042:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "2042:22:12"
              }
            ],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 2380,
=======
              "id": 1211,
>>>>>>> Stashed changes
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2025:8:12"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 2379,
=======
              "id": 1210,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2378,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
=======
                  "id": 1209,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1223,
>>>>>>> Stashed changes
                  "src": "1969:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2377,
=======
                    "id": 1208,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1969:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1968:18:12"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 2386,
=======
              "id": 1217,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2385,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
=======
                  "id": 1216,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1223,
>>>>>>> Stashed changes
                  "src": "2082:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2384,
=======
                    "id": 1215,
>>>>>>> Stashed changes
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2082:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2081:15:12"
            },
<<<<<<< Updated upstream
            "scope": 2467,
=======
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "1951:191:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
<<<<<<< Updated upstream
              3031
            ],
            "body": {
              "id": 2421,
=======
              1782
            ],
            "body": {
              "id": 1252,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "2612:139:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< Updated upstream
                        "id": 2402,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2395,
=======
                        "id": 1233,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1226,
>>>>>>> Stashed changes
                        "src": "2634:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< Updated upstream
                        "id": 2399,
=======
                        "id": 1230,
>>>>>>> Stashed changes
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2622:5:12",
                        "typeDescriptions": {
<<<<<<< Updated upstream
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadata_$2467_$",
                          "typeString": "type(contract super NFTokenMetadata)"
                        }
                      },
                      "id": 2401,
=======
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadata_$1272_$",
                          "typeString": "type(contract super NFTokenMetadata)"
                        }
                      },
                      "id": 1232,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
<<<<<<< Updated upstream
                      "referencedDeclaration": 3031,
=======
                      "referencedDeclaration": 1782,
>>>>>>> Stashed changes
                      "src": "2622:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
<<<<<<< Updated upstream
                    "id": 2403,
=======
                    "id": 1234,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2622:21:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 2404,
=======
                  "id": 1235,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "2622:21:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< Updated upstream
                    "id": 2413,
=======
                    "id": 1244,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
<<<<<<< Updated upstream
                              "id": 2407,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2310,
=======
                              "id": 1238,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1141,
>>>>>>> Stashed changes
                              "src": "2664:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
<<<<<<< Updated upstream
                            "id": 2409,
                            "indexExpression": {
                              "id": 2408,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2395,
=======
                            "id": 1240,
                            "indexExpression": {
                              "id": 1239,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1226,
>>>>>>> Stashed changes
                              "src": "2672:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2664:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
<<<<<<< Updated upstream
                          "id": 2406,
=======
                          "id": 1237,
>>>>>>> Stashed changes
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2658:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
<<<<<<< Updated upstream
                            "id": 2405,
=======
                            "id": 1236,
>>>>>>> Stashed changes
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2658:5:12",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< Updated upstream
                        "id": 2410,
=======
                        "id": 1241,
>>>>>>> Stashed changes
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2658:24:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
<<<<<<< Updated upstream
                      "id": 2411,
=======
                      "id": 1242,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2658:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
<<<<<<< Updated upstream
                      "id": 2412,
=======
                      "id": 1243,
>>>>>>> Stashed changes
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2693:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2658:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 2420,
                  "nodeType": "IfStatement",
                  "src": "2654:91:12",
                  "trueBody": {
                    "id": 2419,
=======
                  "id": 1251,
                  "nodeType": "IfStatement",
                  "src": "2654:91:12",
                  "trueBody": {
                    "id": 1250,
>>>>>>> Stashed changes
                    "nodeType": "Block",
                    "src": "2696:49:12",
                    "statements": [
                      {
                        "expression": {
<<<<<<< Updated upstream
                          "id": 2417,
=======
                          "id": 1248,
>>>>>>> Stashed changes
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2710:24:12",
                          "subExpression": {
                            "baseExpression": {
<<<<<<< Updated upstream
                              "id": 2414,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2310,
=======
                              "id": 1245,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1141,
>>>>>>> Stashed changes
                              "src": "2717:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
<<<<<<< Updated upstream
                            "id": 2416,
                            "indexExpression": {
                              "id": 2415,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2395,
=======
                            "id": 1247,
                            "indexExpression": {
                              "id": 1246,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1226,
>>>>>>> Stashed changes
                              "src": "2725:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2717:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
<<<<<<< Updated upstream
                        "id": 2418,
=======
                        "id": 1249,
>>>>>>> Stashed changes
                        "nodeType": "ExpressionStatement",
                        "src": "2710:24:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 2393,
=======
              "id": 1224,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "2148:400:12",
              "text": " @dev Burns a NFT.\n @notice This is an internal function which should be called from user-implemented external\n burn function. Its purpose is to show and properly initialize data structures when using this\n implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n NFT.\n @param _tokenId ID of the NFT to be burned."
            },
<<<<<<< Updated upstream
            "id": 2422,
=======
            "id": 1253,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< Updated upstream
              "id": 2397,
=======
              "id": 1228,
>>>>>>> Stashed changes
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2603:8:12"
            },
            "parameters": {
<<<<<<< Updated upstream
              "id": 2396,
=======
              "id": 1227,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2395,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2422,
=======
                  "id": 1226,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1253,
>>>>>>> Stashed changes
                  "src": "2568:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2394,
=======
                    "id": 1225,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2568:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2567:18:12"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 2398,
=======
              "id": 1229,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2612:0:12"
            },
<<<<<<< Updated upstream
            "scope": 2467,
=======
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "2553:198:12",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< Updated upstream
              "id": 2439,
=======
              "id": 1270,
>>>>>>> Stashed changes
              "nodeType": "Block",
              "src": "3266:41:12",
              "statements": [
                {
                  "expression": {
<<<<<<< Updated upstream
                    "id": 2437,
=======
                    "id": 1268,
>>>>>>> Stashed changes
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< Updated upstream
                        "id": 2433,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2310,
=======
                        "id": 1264,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1141,
>>>>>>> Stashed changes
                        "src": "3276:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
<<<<<<< Updated upstream
                      "id": 2435,
                      "indexExpression": {
                        "id": 2434,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2425,
=======
                      "id": 1266,
                      "indexExpression": {
                        "id": 1265,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
>>>>>>> Stashed changes
                        "src": "3284:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3276:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< Updated upstream
                      "id": 2436,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2427,
=======
                      "id": 1267,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1258,
>>>>>>> Stashed changes
                      "src": "3296:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3276:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< Updated upstream
                  "id": 2438,
=======
                  "id": 1269,
>>>>>>> Stashed changes
                  "nodeType": "ExpressionStatement",
                  "src": "3276:24:12"
                }
              ]
            },
            "documentation": {
<<<<<<< Updated upstream
              "id": 2423,
=======
              "id": 1254,
>>>>>>> Stashed changes
              "nodeType": "StructuredDocumentation",
              "src": "2757:392:12",
              "text": " @dev Set a distinct URI (RFC 3986) for a given NFT ID.\n @notice This is an internal function which should be called from user-implemented external\n function. Its purpose is to show and properly initialize data structures when using this\n implementation.\n @param _tokenId Id for which we want URI.\n @param _uri String representing RFC 3986 URI."
            },
<<<<<<< Updated upstream
            "id": 2440,
=======
            "id": 1271,
>>>>>>> Stashed changes
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
<<<<<<< Updated upstream
                    "id": 2430,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2425,
=======
                    "id": 1261,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1256,
>>>>>>> Stashed changes
                    "src": "3252:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
<<<<<<< Updated upstream
                "id": 2431,
                "modifierName": {
                  "id": 2429,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2614,
=======
                "id": 1262,
                "modifierName": {
                  "id": 1260,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1419,
>>>>>>> Stashed changes
                  "src": "3239:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "3239:22:12"
              }
            ],
            "name": "_setTokenUri",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< Updated upstream
              "id": 2428,
=======
              "id": 1259,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2425,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2440,
=======
                  "id": 1256,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1271,
>>>>>>> Stashed changes
                  "src": "3176:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2424,
=======
                    "id": 1255,
>>>>>>> Stashed changes
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3176:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< Updated upstream
                  "id": 2427,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 2440,
=======
                  "id": 1258,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 1271,
>>>>>>> Stashed changes
                  "src": "3194:18:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< Updated upstream
                    "id": 2426,
=======
                    "id": 1257,
>>>>>>> Stashed changes
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3194:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3175:38:12"
            },
            "returnParameters": {
<<<<<<< Updated upstream
              "id": 2432,
=======
              "id": 1263,
>>>>>>> Stashed changes
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3266:0:12"
            },
<<<<<<< Updated upstream
            "scope": 2467,
=======
            "scope": 1272,
>>>>>>> Stashed changes
            "src": "3154:153:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2465,
              "nodeType": "Block",
              "src": "3565:59:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2459,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3594:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTokenMetadata_$2467",
                              "typeString": "contract NFTokenMetadata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTokenMetadata_$2467",
                              "typeString": "contract NFTokenMetadata"
                            }
                          ],
                          "id": 2458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3586:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2457,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3586:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3586:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2461,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2443,
                        "src": "3601:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2462,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2445,
                        "src": "3608:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2454,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3575:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadata_$2467_$",
                          "typeString": "type(contract super NFTokenMetadata)"
                        }
                      },
                      "id": 2456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_buy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2719,
                      "src": "3575:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3575:42:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2464,
                  "nodeType": "ExpressionStatement",
                  "src": "3575:42:12"
                }
              ]
            },
            "documentation": {
              "id": 2441,
              "nodeType": "StructuredDocumentation",
              "src": "3313:101:12",
              "text": " @dev Buy an NFT.\n @param _tokenId of the NFT to be bought by the msg.sender."
            },
            "id": 2466,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2448,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2445,
                    "src": "3521:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2449,
                "modifierName": {
                  "id": 2447,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2614,
                  "src": "3508:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "3508:22:12"
              },
              {
                "arguments": [
                  {
                    "id": 2451,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2445,
                    "src": "3551:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2452,
                "modifierName": {
                  "id": 2450,
                  "name": "canTransfer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2595,
                  "src": "3539:11:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "3539:21:12"
              }
            ],
            "name": "_buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2443,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2466,
                  "src": "3434:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3434:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2445,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2466,
                  "src": "3449:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3449:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3433:33:12"
            },
            "returnParameters": {
              "id": 2453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3565:0:12"
            },
            "scope": 2467,
            "src": "3420:204:12",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
<<<<<<< Updated upstream
        "scope": 2468,
        "src": "214:3412:12"
      }
    ],
    "src": "32:3595:12"
=======
        "scope": 1273,
        "src": "214:3095:12"
      }
    ],
    "src": "32:3278:12"
>>>>>>> Stashed changes
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
<<<<<<< Updated upstream
  "updatedAt": "2021-03-19T08:18:14.694Z",
=======
  "updatedAt": "2021-03-22T08:07:21.641Z",
>>>>>>> Stashed changes
  "devdoc": {
    "details": "Optional metadata implementation for ERC-721 non-fungible token standard.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        },
        "returns": {
          "_0": "Balance of _owner."
        }
      },
      "constructor": {
        "details": "Contract constructor."
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        },
        "returns": {
          "_0": "Address that _tokenId is approved for."
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        },
        "returns": {
          "_0": "True if approved for all, false otherwise."
        }
      },
      "name()": {
        "details": "Returns a descriptive name for a collection of NFTokens.",
        "returns": {
          "_name": "Representing name."
        }
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        },
        "returns": {
          "_owner": "Address of _tokenId owner."
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        },
        "returns": {
          "_0": "True if _interfaceID is supported, false otherwise."
        }
      },
      "symbol()": {
        "details": "Returns an abbreviated name for NFTokens.",
        "returns": {
          "_symbol": "Representing symbol."
        }
      },
      "tokenURI(uint256)": {
        "details": "A distinct URI (RFC 3986) for a given NFT.",
        "params": {
          "_tokenId": "Id for which we want uri."
        },
        "returns": {
          "_0": "URI of _tokenId."
        }
      },
      "totalToken()": {
        "details": "Returns the count of all existing NFTokens.",
        "returns": {
          "_0": "Total supply of NFTs."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      }
    },
    "stateVariables": {
      "idToUri": {
        "details": "Mapping from NFT ID to metadata uri."
      },
      "mintedTokens": {
        "details": "Array of all NFT IDs."
      },
      "nftName": {
        "details": "A descriptive name for a collection of NFTs."
      },
      "nftSymbol": {
        "details": "An abbreviated name for NFTokens."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "constructor": {
        "notice": "When implementing this contract don't forget to set nftName and nftSymbol."
      },
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost."
      }
    },
    "version": 1
  }
}